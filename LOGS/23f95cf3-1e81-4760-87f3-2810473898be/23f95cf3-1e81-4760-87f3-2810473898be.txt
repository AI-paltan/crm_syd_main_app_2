2023-04-05 10:54:48+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-05 10:54:48+0530 - sLogger - DEBUG - {'fileid': '23f95cf3-1e81-4760-87f3-2810473898be', 'filename': '21 YAL Financial Statements (Final).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/21 YAL Financial Statements (Final).pdf'}
2023-04-05 10:54:48+0530 - sLogger - DEBUG - save file completed
2023-04-05 10:54:48+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-05 10:54:48+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-05 10:54:48+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-05 10:54:48+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-05 10:54:48+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-05 10:54:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:54:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:54:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:54:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:54:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:54:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:54:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:54:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:54:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:54:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:54:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:54:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:54:52+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:54:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:54:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:54:57+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:54:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:54:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:03+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:12+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:12+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:51+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:55:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:55:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:55:59+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:55:59+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:31+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:31+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:39+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:56:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:56:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:56:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:56:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:56:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:56:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:56:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:03+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:11+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:11+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:33+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:33+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:37+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:37+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-05 10:57:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-05 10:57:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-05 10:57:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-05 10:57:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-05 10:57:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-05 10:57:55+0530 - sLogger - DEBUG - function: predict completed.
2023-04-05 10:57:55+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-05 10:57:55+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6], 'predicted_cpl_pages': [5], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5], 'filtered_ccf_pages': [8], 'month': 'december'}
2023-04-05 10:57:55+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-05 10:57:55+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-05 10:57:55+0530 - sLogger - DEBUG - process file completed
2023-04-05 10:57:55+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-05 10:57:55+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-05 10:57:55+0530 - sLogger - DEBUG - TE process file started
2023-04-05 13:28:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:28:59+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:29:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:29:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:29:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:29:00+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:29:00+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:29:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:29:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:29:00+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:29:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:29:02+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:29:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:02+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:29:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:29:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:29:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:29:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:29:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:31:35+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:31:35+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:31:35+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:31:35+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:31:35+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:31:35+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:31:35+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:31:37+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:37+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:31:37+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:37+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:37+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:31:37+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:31:38+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:31:38+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:31:38+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:31:38+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:31:38+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:37:08+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:37:08+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:37:08+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:37:08+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:37:08+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:37:08+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:37:08+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:37:10+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:10+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:37:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:37:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:10+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:37:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:37:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:37:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:11+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:37:11+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:37:12+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:37:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:37:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:37:12+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:37:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:42:46+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:42:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:42:46+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:42:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:42:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:42:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:42:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:42:48+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:42:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:42:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:48+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:42:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:42:49+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:42:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:42:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:42:49+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:42:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:51:05+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:51:05+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:51:05+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:51:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:51:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:51:05+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:51:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:51:06+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:51:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:08+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:51:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:51:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:51:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:51:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:51:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:51:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 13:53:26+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 13:53:26+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 13:53:26+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 13:53:26+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 13:53:26+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 13:53:26+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 13:53:26+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 13:53:28+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:28+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 13:53:28+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:28+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:28+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 13:53:28+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 13:53:29+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 13:53:29+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 13:53:29+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 13:53:29+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 13:53:29+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:13+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 14:42:13+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 14:42:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 14:42:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 14:42:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 14:42:14+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-05 14:42:14+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 14:42:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 14:42:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 14:42:14+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-05 14:42:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 14:42:16+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:16+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-05 14:42:16+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:16+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:16+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 14:42:16+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 14:42:17+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 14:42:17+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 14:42:17+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 14:42:17+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-05 14:42:17+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 15:46:42+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 15:46:42+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 15:46:42+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Cash | [('assets', 44), ('current assets', 24), ('noncurrent assets', 24), ('current liabilities', 22), ('liabilities', 20), ('equity liabilities', 12), ('noncurrent liabilities', 11), ('equity and liabilities', 10), ('equity', 0)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current assets | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current liabilities | score 26
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent assets | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent liabilities | score 23
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current assets | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current liabilities | score 22
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity and liabilities | score 22
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity | score 0
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Income tax receivables | [('equity and liabilities', 36), ('current liabilities', 33), ('current assets', 28), ('equity liabilities', 28), ('equity', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19), ('liabilities', 18)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current liabilities | score 49
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent assets | score 41
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent liabilities | score 50
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current assets | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current liabilities | score 49
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity and liabilities | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('equity', 33), ('noncurrent liabilities', 31), ('liabilities', 22)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Other investments | [('noncurrent assets', 40), ('current assets', 32), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('assets', 24), ('equity liabilities', 24), ('current liabilities', 23), ('equity', 22), ('liabilities', 11)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current liabilities | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent assets | score 41
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current assets | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current liabilities | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity and liabilities | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Retirement benefit assets | [('current assets', 56), ('noncurrent assets', 56), ('assets', 42), ('equity and liabilities', 39), ('noncurrent liabilities', 36), ('equity', 32), ('equity liabilities', 31), ('current liabilities', 30), ('liabilities', 24)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current assets | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current liabilities | score 50
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent assets | score 59
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent liabilities | score 47
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current assets | score 56
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current liabilities | score 46
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity and liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Liabilities and equity | [('equity and liabilities', 100), ('equity liabilities', 87), ('current liabilities', 58), ('liabilities', 52), ('equity', 52), ('noncurrent liabilities', 39), ('assets', 27), ('current assets', 27), ('noncurrent assets', 27)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current assets | score 32
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current liabilities | score 69
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent assets | score 26
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent liabilities | score 65
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current assets | score 25
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity and liabilities | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 56), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 15)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Derivative financial instruments | [('current assets', 38), ('equity and liabilities', 34), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('equity liabilities', 32), ('assets', 28), ('current liabilities', 26), ('liabilities', 20), ('equity', 20)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current assets | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current liabilities | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent assets | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent liabilities | score 46
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current assets | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current liabilities | score 40
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity and liabilities | score 48
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 56), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 15)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Provision | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current assets | score 20
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current liabilities | score 21
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent assets | score 28
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current assets | score 28
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity and liabilities | score 20
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity | score 15
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('current liabilities', 48), ('current assets', 42), ('assets', 38), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Cash flow hedge | [('assets', 32), ('current assets', 30), ('noncurrent assets', 30), ('current liabilities', 21), ('noncurrent liabilities', 21), ('liabilities', 20), ('equity and liabilities', 19), ('equity liabilities', 15), ('equity', 10)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current assets | score 28
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current liabilities | score 24
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent assets | score 29
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent liabilities | score 26
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current assets | score 24
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current liabilities | score 23
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity and liabilities | score 22
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity | score 15
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Other reserves | [('current assets', 32), ('noncurrent assets', 32), ('assets', 24), ('current liabilities', 23), ('noncurrent liabilities', 23), ('equity liabilities', 16), ('equity and liabilities', 14), ('equity', 11), ('liabilities', 0)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current assets | score 43
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current liabilities | score 30
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent liabilities | score 37
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current assets | score 44
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current liabilities | score 32
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity and liabilities | score 25
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity | score 15
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - Total equity and liabilities | [('equity and liabilities', 85), ('equity liabilities', 72), ('current liabilities', 49), ('noncurrent liabilities', 43), ('liabilities', 41), ('equity', 41), ('current assets', 28), ('noncurrent assets', 28), ('assets', 21)]
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current assets | score 32
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current liabilities | score 69
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent assets | score 31
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current assets | score 35
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current liabilities | score 63
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity and liabilities | score 95
2023-04-05 15:46:42+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity | score 90
2023-04-05 15:46:42+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 15:46:42+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net income tax refunded/(paid) | adiustments for movements in working capital
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from/(used in) operating activities | operating cash flow before working capital changes
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment ofloan from Boyne Smelters Limited | operating profit before working capital changes
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from investing activities | adjustments for increase decrease in operating assets
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase/(decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 1 January | changes in operating assets and liabilities
2023-04-05 15:46:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, int found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: cannot unpack non-iterable NoneType object
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: 'value'
2023-04-05 15:46:44+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 15:46:44+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 15:46:44+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 29), ('bank balances other than above', 19), ('bank balances other than cash and cash equivalents', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 43), ('bank balances other than cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 30), ('cash and bank balances', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 29), ('bank balances other than above', 19), ('bank balances other than cash and cash equivalents', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 43), ('bank balances other than cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 30), ('cash and bank balances', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 8223876.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [8223876.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326384.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [23326384.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other financial assets', 34), ('other current financial assets', 33), ('other current assets', 29), ('other assets', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other financial assets', 34), ('other current financial assets', 33), ('other current assets', 29), ('other assets', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 46), ('property plant equipment', 46)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 46), ('property plant equipment', 46)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 33), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 8)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 14, 15, 16, 25, 26, 27, 36, 37, 38, 47, 48, 49, 58, 59, 60], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 175870.0, 0.0, -692173.0, 4350726.0, 2761116.0, 0.0, 66861238.0, 49618482.0, 0.0, 53453.0, 36174.0, 0.0, 760279.0, 0.0, -692173.0, 72201566.0, 52415772.0], 'label': ['of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of December rehabilitation provision 2021 Accumulated depreciation', 'At31 of December rehabilitation provision 2021 Accumulated depreciation At 1 January 2021'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 20), ('cost', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 0)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = of at31 of december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = at31 of december rehabilitation provision 2021 accumulated depreciation at 1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 12)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80], 'value': [913989.0, 0.0, -153710.0, 0.0, 760279.0, 0.0, 0.0, 0.0, 0.0, 760279.0, 913989.0], 'label': ['10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 46), ('property plant equipment', 46)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 46), ('property plant equipment', 46)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('tangible', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('tangible', 43), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('tangible', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('tangible', 43), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 47)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 24404000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [24404000.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 50)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 47)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 90082000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [90082000.0]}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-05 15:46:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 15:46:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:45+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 39)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 45410954.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 45410954.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 39)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 50181357.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 50181357.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 21), ('borrowings', 14)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short-term debt', 37), ('shortterm debt', 37), ('short term debt', 36), ('shortterm borrowings', 30), ('lease liabilities', 29), ('borrowings', 13)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 21), ('borrowings', 14)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short-term debt', 37), ('shortterm debt', 37), ('short term debt', 36), ('shortterm borrowings', 30), ('lease liabilities', 29), ('borrowings', 13)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities of long-term debt', 41), ('current maturities of longterm debt', 41), ('current maturities', 34)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 36), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('current maturities', 27)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities of long-term debt', 41), ('current maturities of longterm debt', 41), ('current maturities', 34)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 36), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('current maturities', 27)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 42)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 25)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 42)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 25)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises and small enterprises', 39), ('micro enterprises', 38), ('other than micro and small enterprises', 38), ('other trade payables', 35), ('outstanding dues of creditors other than', 33), ('total outstanding due of other creditors other than micro and small', 32), ('outstanding dues of micro enterprises and small enterprises', 31), ('trade payable', 29), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other than micro and small enterprises', 40), ('other trade payables', 38), ('micro enterprises and small enterprises', 37), ('micro enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 33), ('outstanding dues of creditors other than', 32), ('small enterprises', 31), ('total outstanding due of other creditors other than micro and small', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('trade payable', 28), ('accounts payable', 26)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 39221937.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [39221937.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises and small enterprises', 39), ('micro enterprises', 38), ('other than micro and small enterprises', 38), ('other trade payables', 35), ('outstanding dues of creditors other than', 33), ('total outstanding due of other creditors other than micro and small', 32), ('outstanding dues of micro enterprises and small enterprises', 31), ('trade payable', 29), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other than micro and small enterprises', 40), ('other trade payables', 38), ('micro enterprises and small enterprises', 37), ('micro enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 33), ('outstanding dues of creditors other than', 32), ('small enterprises', 31), ('total outstanding due of other creditors other than micro and small', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('trade payable', 28), ('accounts payable', 26)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 47911992.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [47911992.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 36), ('other liabilities', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 36), ('other liabilities', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 15:46:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 15:46:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 62), ('deferred taxes', 44)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 6532676.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [6532676.0]}
2023-04-05 15:46:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 15:46:46+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 62), ('deferred taxes', 44)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 15:46:46+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 26856670.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [26856670.0]}
