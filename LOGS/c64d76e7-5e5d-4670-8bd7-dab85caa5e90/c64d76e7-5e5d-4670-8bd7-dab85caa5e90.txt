2023-03-25 19:18:20+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-03-25 19:18:20+0530 - sLogger - DEBUG - {'fileid': 'c64d76e7-5e5d-4670-8bd7-dab85caa5e90', 'filename': 'Precise Air Group (Holdings) Pty Limited and Controlled Entities-Financial Statements-31032022-3.pdf', 'filepath': '/home/jayesh/mgs_ai/crm_syd_1/CRM_SYD_main_app_2/classification/../FILE_DB/FILES/Precise Air Group (Holdings) Pty Limited and Controlled Entities-Financial Statements-31032022-3.pdf'}
2023-03-25 19:18:20+0530 - sLogger - DEBUG - save file completed
2023-03-25 19:18:20+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-03-25 19:18:20+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-03-25 19:18:20+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-03-25 19:18:20+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-03-25 19:18:20+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-03-25 19:18:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:20+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:22+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:22+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:29+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:29+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:35+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:35+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:39+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:39+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:41+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:41+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:44+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:44+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:48+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:48+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:51+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:51+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:18:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:18:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:18:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:18:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:18:55+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:18:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:18:55+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:04+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:04+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:16+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:16+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:26+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:26+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:35+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:35+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:45+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:45+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:19:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:19:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:19:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:19:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:19:55+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:19:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:19:55+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:05+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:05+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:12+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:12+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:16+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:16+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:20+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:20+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:24+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:24+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:28+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:28+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:31+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:31+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:34+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:34+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:39+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:39+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:44+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:44+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:51+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:51+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:54+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:54+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:20:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:20:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:20:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:20:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:20:58+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:20:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:20:58+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:21:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:21:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:21:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:21:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:21:05+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:21:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 19:21:05+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 19:21:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 19:21:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 19:21:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 19:21:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 19:21:13+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 19:21:13+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-03-25 19:21:13+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6], 'predicted_cpl_pages': [5], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5], 'filtered_ccf_pages': [8], 'month': 'march'}
2023-03-25 19:21:13+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-03-25 19:21:13+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-03-25 19:21:13+0530 - sLogger - DEBUG - process file completed
2023-03-25 19:21:13+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2441545.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [2441545.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 1543537.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [1543537.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6, 8], 'score': [100, 100, 100, 100], 'value': [828405.0, 176951.0, 504602.0, 425736.0], 'label': [' Prepayments', ' Prepaid subscription', ' Prepayments', ' Prepaid subscription'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 861683.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [861683.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 2368526.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [2368526.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1079731.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1079731.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1832902.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1832902.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 11267622.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 11267622.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 12113566.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 12113566.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 2184330.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [0.0, 2184330.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:56+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 19:31:56+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 3229803.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [1300741.0, 1929062.0]}
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 19:31:56+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-25 19:31:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 10448225.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [10448225.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 13141957.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [13141957.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2941750.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2941750.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2968818.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2968818.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18590706.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [18590706.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21734371.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [21734371.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -78976800.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -78976800.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -84452287.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -84452287.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10925715.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2407293.0, -8518422.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10752910.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2212068.0, -8540842.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -343565.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-343565.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -246789.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-246789.0]}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 19:31:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 19:31:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 19:31:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 19:31:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 19:31:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2441545.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [2441545.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 1543537.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [1543537.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 861683.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [861683.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 2368526.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [2368526.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1079731.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1079731.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1832902.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1832902.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 11267622.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 11267622.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 12113566.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 12113566.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 2184330.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [0.0, 2184330.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:01:03+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 3229803.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [1300741.0, 1929062.0]}
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:01:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:03+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 10448225.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [10448225.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 13141957.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [13141957.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2941750.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2941750.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2968818.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2968818.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18590706.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [18590706.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21734371.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [21734371.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -78976800.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -78976800.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -84452287.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -84452287.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10925715.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2407293.0, -8518422.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10752910.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2212068.0, -8540842.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -343565.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-343565.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -246789.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-246789.0]}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:01:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:01:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:01:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:01:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:01:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:14:00+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:14:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:14:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:00+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2441545.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [2441545.0]}
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:00+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:14:00+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 1543537.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [1543537.0]}
2023-03-25 20:14:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6, 8], 'score': [100, 100, 100, 100], 'value': [828405.0, 176951.0, 504602.0, 425736.0], 'label': [' Prepayments', ' Prepaid subscription', ' Prepayments', ' Prepaid subscription'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 861683.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [861683.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 2368526.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [2368526.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1079731.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1079731.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1832902.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1832902.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 11267622.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 11267622.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 12113566.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 12113566.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 2184330.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [0.0, 2184330.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 3229803.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [1300741.0, 1929062.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 10448225.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [10448225.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 13141957.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [13141957.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2941750.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2941750.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2968818.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2968818.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18590706.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [18590706.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21734371.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [21734371.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -78976800.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -78976800.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -84452287.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -84452287.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10925715.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2407293.0, -8518422.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10752910.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2212068.0, -8540842.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -343565.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-343565.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -246789.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-246789.0]}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:14:01+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:14:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:14:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:14:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:14:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2441545.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [2441545.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('bank balances other than above', 34), ('other bank balances', 22), ('cash and cash equivalents', 20), ('cash and bank balances', 20), ('bank balances other than cash and cash equivalents', 12)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 25), ('cash and bank balances', 24), ('other bank balances', 20), ('bank balances other than above', 15)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other bank balances', 35), ('cash and bank balances', 33), ('cash and cash equivalents', 32), ('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 44), ('bank balances other than above', 39), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 25), ('cash and bank balances', 21)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 1543537.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['7'], 'line_item_value': [1543537.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36), ('other current financial assets', 34), ('other financial assets', 26), ('other assets', 6)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other assets', 42), ('other current assets', 31), ('other financial assets', 31), ('other current financial assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35), ('other financial assets', 33), ('other current assets', 29), ('other current financial assets', 24)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid expense', 83), ('prepaid expenditure', 83), ('prepaid', 83)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = other deposits , res_fuzz_match = [('prepayments', 50), ('prepaid', 43), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = prepaid subscription , res_fuzz_match = [('prepaid', 100), ('prepayments', 83), ('prepaid expense', 64), ('prepaid expenditure', 53)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('prepaid expense', 33), ('prepaid', 29), ('prepaid expenditure', 25), ('prepayments', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6, 8], 'score': [100, 100, 100, 100], 'value': [828405.0, 176951.0, 504602.0, 425736.0], 'label': [' Prepayments', ' Prepaid subscription', ' Prepayments', ' Prepaid subscription'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('other current assets', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('other current assets', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other current assets', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 84, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 26602110.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 994364.0, 25607746.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('current assets', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('current assets', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('current assets', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7, 8], 'score': 81, 'value': 29459212.0, 'line_item_label': ['Current assets', 'Other current assets', 'Total current assets'], 'note_numbers': [nan, '12', nan], 'line_item_value': [0.0, 1122015.0, 28337197.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('depreciatio', 38)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('depreciatio', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('depreciatio', 22)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:18:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 20:18:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:18:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:18:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:18:59+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 861683.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [861683.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 40), ('rightofuse', 29), ('righttouse', 29), ('right of use', 29), ('right to use', 29), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('capital work in progress', 15), ('work in progress', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('capital work in progress', 47), ('rightofuse', 44), ('righttouse', 44), ('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 2368526.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['14'], 'line_item_value': [2368526.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('tangible assets', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('goodwill on consolidatio', 40), ('goodwill', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('intangible', 50), ('intangible under development', 32), ('intangible assets under development', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1627273.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['15'], 'line_item_value': [1627273.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('donations', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('investment', 33), ('joint ventures and associates', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1079731.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1079731.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('deferred tax assets', 26), ('deferred charges', 24), ('deferred tax', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1832902.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['16'], 'line_item_value': [1832902.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('other assets', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 11267622.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 11267622.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('non-current assets total', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 100, 'value': 12113566.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 12113566.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 2184330.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [0.0, 2184330.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 21], 'score': 100, 'value': 3229803.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', '20'], 'line_item_value': [1300741.0, 1929062.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 10448225.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [10448225.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 13141957.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [13141957.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 85, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 17121007.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 17121007.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 24], 'score': 82, 'value': 22431025.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 22431025.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term debt', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term borrowings', 25), ('longterm borrowings', 25), ('borrowings', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [26], 'score': 100, 'value': 4500000.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23'], 'line_item_value': [4500000.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('(bond)', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2941750.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2941750.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('lease liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 2968818.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['24'], 'line_item_value': [2968818.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred tax liabilities', 22), ('deferred taxes', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('deferred taxes', 38), ('deferred tax liabilities', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('other long term liabilities', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('minority interest', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = netassets , res_fuzz_match = [('long term liabilities', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6982237.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6982237.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 6284865.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['13'], 'line_item_value': [6284865.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets leasehold improvements , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets plantand equipment plantand equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets fixtures and fittings , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets motor vehicles , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets computer equipment , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 1 april 2021 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated additions , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated balance at 31 march 2022 , res_fuzz_match = [('gross', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and total , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = plantand equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = fixtures and fittings - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = computer equipment atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = low value assets (plant and equipment) - atcost , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('gross', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18590706.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [18590706.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax refund due , res_fuzz_match = [('account receivables', 43), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = contractassets , res_fuzz_match = [('account receivables', 56), ('trade receivables', 36), ('receivable', 33), ('government subsidies receivable', 24), ('unbilled', 20), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = capitalised contract costs , res_fuzz_match = [('account receivables', 45), ('trade receivables', 45), ('receivable', 33), ('billed', 25), ('government subsidies receivable', 24), ('unbilled', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21734371.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['8'], 'line_item_value': [21734371.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('net sales', 56), ('sale of products', 55), ('from trading business', 32), ('revenue from contracts with customers', 24), ('revenue from operations', 23), ('transmission and distribution business', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('net sales', 33), ('revenue from operations', 32), ('revenue from contracts with customers', 30), ('transmission and distribution business', 24), ('sale of products', 18), ('from trading business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('revenue from operations', 19), ('revenue from contracts with customers', 16), ('sale of products', 12), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('revenue from contracts with customers', 37), ('from trading business', 37), ('net sales', 33), ('revenue from operations', 32), ('transmission and distribution business', 32), ('sale of products', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 27), ('revenue from operations', 24), ('sale of products', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('transmission and distribution business', 32), ('revenue from contracts with customers', 30), ('revenue from operations', 29), ('from trading business', 27), ('net sales', 19), ('sale of products', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 37), ('revenue from contracts with customers', 24), ('from trading business', 24), ('revenue from operations', 20), ('sale of products', 18), ('net sales', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 34), ('sale of products', 29), ('revenue from contracts with customers', 29), ('transmission and distribution business', 25), ('net sales', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('transmission and distribution business', 27), ('from trading business', 20), ('revenue from contracts with customers', 19), ('revenue from operations', 18), ('sale of products', 17), ('net sales', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -78976800.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -78976800.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('cost of sales', 84), ('total expenses', 45), ('total expenditure', 38), ('purchase of stock-in-trade', 34), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('expenditure', 31), ('total expenditure', 26), ('cost of sales', 19), ('purchase of stock-in-trade', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('total expenditure', 36), ('total expenses', 35), ('cost of sales', 27), ('purchase of stock-in-trade', 26), ('expenditure', 26), ('expense', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 42), ('total expenses', 34), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('total expenditure', 24), ('purchase of stock-in-trade', 21), ('total expenses', 20), ('expenditure', 16), ('cost of sales', 16), ('expense', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 27), ('purchase of stock-in-trade', 23), ('expenditure', 19), ('total expenses', 18), ('cost of sales', 15), ('expense', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('total expenditure', 22), ('total expenses', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 16), ('expenditure', 12), ('expense', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 84, 'value': -84452287.0, 'line_item_label': ['Expenses', 'Cost ofsales'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, -84452287.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10925715.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2407293.0, -8518422.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other expenses', 35), (' depreciation', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other expenses', 30), (' depreciation', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other expenses', 25), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 18), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other expenses', 17), (' depreciation', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': -10752910.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-2212068.0, -8540842.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('rent', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('rent', 23)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('rent', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('rent', 8)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('rent', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other operating ', 30)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other operating ', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other operating ', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other operating ', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance income', 18), ('other income', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('other income', 41), ('finance income', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('other income', 28), ('finance income', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('other income', 19), ('finance income', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -343565.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-343565.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('finance cost', 67)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('finance cost', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('finance cost', 26)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('finance cost', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('finance cost', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -246789.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-246789.0]}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('current tax', 38), ('prior year', 30), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('deferred tax', 21), ('earlier year', 18), ('minimum alternate tax credit entitlement', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('current tax', 30), ('minimum alternate tax credit entitlement', 30), ('prior year', 25), ('provision for taxation previous year', 24), ('earlier year', 24)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('prior year', 13), ('amount transferred to retained earnings', 12), ('provision for taxation previous year', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('provision for taxation previous year', 49), ('minimum alternate tax credit entitlement', 47), ('current tax', 41), ('deferred tax', 38), ('amount transferred to retained earnings', 29), ('prior year', 26), ('earlier year', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 32), ('prior year', 30), ('provision for taxation previous year', 26), ('earlier year', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 34), ('current tax', 21), ('deferred tax', 21), ('prior year', 21), ('earlier year', 20), ('amount transferred to retained earnings', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('provision for taxation previous year', 28), ('current tax', 26), ('amount transferred to retained earnings', 20), ('prior year', 19), ('earlier year', 18), ('deferred tax', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 42), ('earlier year', 36), ('prior year', 34), ('current tax', 33), ('deferred tax', 31), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 19)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('earlier year', 19), ('prior year', 18), ('current tax', 16), ('deferred tax', 14), ('amount transferred to retained earnings', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 4), ('share in', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('prior period', 27), ('exceptional', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('exceptional', 21), ('prior period', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('prior period', 15), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('prior period', 23), ('exceptional', 11)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 18), ('exceptional', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('prior period', 16), ('exceptional', 9)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 20:19:00+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 20:19:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 20:19:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 20:19:00+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = cost ofsales , res_fuzz_match = [('NULL', 14)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss before income tax benefit , res_fuzz_match = [('NULL', 12)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = loss after income tax benefit for the year attributable to the owners of precise , res_fuzz_match = [('NULL', 6)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 17)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year attributable to the owners of precise air group (holdings) pty limited and controlled entities , res_fuzz_match = [('NULL', 7)]
2023-03-25 20:19:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
