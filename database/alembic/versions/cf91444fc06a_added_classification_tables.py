"""added classification tables

Revision ID: cf91444fc06a
Revises: 
Create Date: 2023-01-10 16:21:51.604327

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cf91444fc06a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('FileLogs',
    sa.Column('fileid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('filepath', sa.String(), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=False),
    sa.Column('time', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('fileid')
    )
    op.create_table('PageLogs',
    sa.Column('fileid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('pageid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('page_number', sa.Integer(), nullable=False),
    sa.Column('page_path', sa.String(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('predicted_type_id', sa.Integer(), nullable=True),
    sa.Column('predicted_type_name', sa.String(), nullable=True),
    sa.Column('fetched_for_training', sa.Integer(), server_default='0', nullable=True),
    sa.Column('time', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fileid'], ['FileLogs.fileid'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('pageid')
    )
    op.create_table('OCRDump',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pageid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('block_num', sa.Integer(), nullable=True),
    sa.Column('line_num', sa.Integer(), nullable=True),
    sa.Column('word_num', sa.Integer(), nullable=True),
    sa.Column('left', sa.Integer(), nullable=True),
    sa.Column('top', sa.Integer(), nullable=True),
    sa.Column('right', sa.Integer(), nullable=True),
    sa.Column('down', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pageid'], ['PageLogs.pageid'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('OCRText',
    sa.Column('pageid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('raw_text', sa.String(), nullable=True),
    sa.Column('structured_text', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['pageid'], ['PageLogs.pageid'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('pageid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('OCRText')
    op.drop_table('OCRDump')
    op.drop_table('PageLogs')
    op.drop_table('FileLogs')
    # ### end Alembic commands ###
