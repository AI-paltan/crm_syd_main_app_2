2023-08-28 12:54:03+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-08-28 12:54:03+0530 - sLogger - DEBUG - {'fileid': '29c1bb54-6aa7-4131-bfb2-0fb2b7de7b53', 'filename': 'Summit Forests - Annual Report - 202303 v5 (final).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Summit Forests - Annual Report - 202303 v5 (final).pdf', 'status': 'Processing'}
2023-08-28 12:54:03+0530 - sLogger - DEBUG - save file completed
2023-08-28 12:54:03+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-08-28 12:54:03+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-08-28 12:54:03+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-08-28 12:54:03+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-08-28 12:54:03+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-08-28 12:54:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:03+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:05+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:05+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:08+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:08+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:13+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:13+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:15+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:15+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:22+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:22+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:28+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:29+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:32+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:32+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:36+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:36+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:40+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:40+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:44+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:44+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:54:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:54:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:54:57+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:54:57+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:03+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:03+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:11+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:11+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:18+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:18+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:25+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:25+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:32+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:32+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:37+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:37+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:42+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:42+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:46+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:46+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:51+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:51+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:55:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:55:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:55:59+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:55:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:55:59+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:56:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:56:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:56:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:56:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:56:06+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:56:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:56:06+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:56:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:56:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:56:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:56:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:56:13+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:56:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 12:56:13+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 12:56:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 12:56:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 12:56:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 12:56:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 12:56:18+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 12:56:18+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-08-28 12:56:18+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [8], 'predicted_cpl_pages': [6, 18], 'predicted_ccf_pages': [9], 'filtered_cbs_pages': [8], 'filtered_cpl_pages': [6], 'filtered_ccf_pages': [9], 'month': 'march', 'status': 'Page Classification Completed'}
2023-08-28 12:56:18+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-08-28 12:56:18+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-08-28 12:56:18+0530 - sLogger - DEBUG - process file completed
2023-08-28 12:56:18+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-08-28 12:56:18+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-28 12:56:18+0530 - sLogger - DEBUG - TE process file started
2023-08-28 12:58:59+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-28 12:58:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-28 12:58:59+0530 - sLogger - DEBUG - process_main_pages started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 12:59:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 12:59:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 12:59:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-28 12:59:00+0530 - sLogger - DEBUG - set_section_details started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Cash and cash equivalents Short term deposits | [('equity and liabilities', 39), ('current assets', 34), ('noncurrent assets', 34), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrentassets', 25), ('equityandliabilities', 24), ('currentassets', 23), ('assets', 22), ('equity', 22), ('equityliabilities', 21), ('noncurrentliabilities', 19), ('currentliabilities', 16), ('liabilities', 13)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD currentassets | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD current liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD currentliabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrent assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrent liabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD non current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD non current liabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equity and liabilities | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equity | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equityandliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Cash and cash equivalents Short term deposits | [('equity and liabilities', 39), ('current assets', 34), ('noncurrent assets', 34), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrentassets', 25), ('equityandliabilities', 24), ('currentassets', 23), ('assets', 22), ('equity', 22), ('equityliabilities', 21), ('noncurrentliabilities', 19), ('currentliabilities', 16), ('liabilities', 13)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD currentassets | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD current liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD currentliabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrent assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrent liabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD non current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD non current liabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equity and liabilities | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equity | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents Short term deposits | MATCH WORD equityandliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Trade prepayments and other receivables | [('noncurrentassets', 36), ('equity and liabilities', 35), ('current assets', 33), ('currentassets', 29), ('noncurrentliabilities', 29), ('current liabilities', 28), ('equityandliabilities', 25), ('noncurrent assets', 24), ('noncurrent liabilities', 23), ('currentliabilities', 21), ('equity liabilities', 19), ('assets', 18), ('equity', 17), ('equityliabilities', 16), ('liabilities', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD currentassets | score 46
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD current liabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD currentliabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrentassets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD non current assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD non current liabilities | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrentassets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD equity and liabilities | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Trade prepayments and other receivables | MATCH WORD equityandliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Related party receivables | [('current assets', 45), ('equity and liabilities', 40), ('current liabilities', 38), ('currentassets', 33), ('noncurrent assets', 32), ('equity liabilities', 32), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 30), ('noncurrentliabilities', 27), ('assets', 26), ('liabilities', 25), ('equity', 25), ('equityliabilities', 23), ('equityandliabilities', 21)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD currentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD current liabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD currentliabilities | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrent assets | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrentassets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrent liabilities | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD non current assets | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD non current liabilities | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrentliabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrentassets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD noncurrentliabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD equity and liabilities | score 47
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party receivables | MATCH WORD equityandliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Other receivables | [('noncurrentliabilities', 42), ('currentliabilities', 38), ('noncurrentassets', 37), ('currentassets', 33), ('current assets', 32), ('current liabilities', 31), ('noncurrent assets', 24), ('equity liabilities', 24), ('noncurrent liabilities', 23), ('equity', 22), ('equity and liabilities', 21), ('equityliabilities', 20), ('equityandliabilities', 17), ('assets', 12), ('liabilities', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD currentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD current liabilities | score 50
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD currentliabilities | score 51
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrent assets | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrent liabilities | score 51
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD non current assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD non current liabilities | score 50
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrentliabilities | score 53
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD noncurrentliabilities | score 53
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD equity and liabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Other receivables | MATCH WORD equityandliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Right of use assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD current assets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD currentassets | score 50
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD current liabilities | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD currentliabilities | score 27
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrent assets | score 56
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrentassets | score 51
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrent liabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD non current assets | score 59
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD non current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrentassets | score 51
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD equity and liabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Right of use assets | MATCH WORD equityandliabilities | score 26
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Forest crop | [('currentassets', 52), ('currentliabilities', 50), ('noncurrentassets', 46), ('noncurrentliabilities', 43), ('current assets', 42), ('current liabilities', 40), ('assets', 25), ('noncurrent assets', 25), ('equity', 24), ('noncurrent liabilities', 24), ('equity and liabilities', 21), ('equityliabilities', 21), ('equityandliabilities', 18), ('equity liabilities', 17), ('liabilities', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD currentassets | score 48
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD currentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrent assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrent liabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD non current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD non current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD equity and liabilities | score 24
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Forest crop | MATCH WORD equityandliabilities | score 16
2023-08-28 12:59:00+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('currentassets', 36), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityandliabilities', 29), ('noncurrentliabilities', 27), ('liabilities', 25)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentassets | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equityandliabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Bank overdraft | [('noncurrentassets', 41), ('noncurrentliabilities', 38), ('current assets', 37), ('noncurrent assets', 37), ('noncurrent liabilities', 36), ('assets', 32), ('equity and liabilities', 32), ('currentassets', 31), ('currentliabilities', 26), ('equityandliabilities', 24), ('current liabilities', 21), ('equity', 20), ('equityliabilities', 18), ('equity liabilities', 15), ('liabilities', 10)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD current assets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD currentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD current liabilities | score 24
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD currentliabilities | score 25
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrent assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrent liabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD non current assets | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD non current liabilities | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD noncurrentliabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD equity and liabilities | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD equity | score 20
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Bank overdraft | MATCH WORD equityandliabilities | score 29
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Accounts payable and accruals | [('current liabilities', 45), ('equity and liabilities', 37), ('equity liabilities', 36), ('noncurrentliabilities', 32), ('equityandliabilities', 32), ('current assets', 31), ('noncurrentassets', 29), ('currentliabilities', 29), ('noncurrent assets', 26), ('currentassets', 26), ('liabilities', 25), ('noncurrent liabilities', 25), ('equityliabilities', 24), ('assets', 13), ('equity', 12)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD currentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD current liabilities | score 42
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD currentliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrent assets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrent liabilities | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD non current assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD non current liabilities | score 38
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrentliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD noncurrentliabilities | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD equity and liabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Accounts payable and accruals | MATCH WORD equityandliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Related party payables | [('equity and liabilities', 40), ('current assets', 39), ('equity liabilities', 39), ('current liabilities', 38), ('noncurrent liabilities', 38), ('currentassets', 33), ('liabilities', 33), ('noncurrentassets', 30), ('currentliabilities', 30), ('equityandliabilities', 28), ('noncurrentliabilities', 27), ('assets', 26), ('noncurrent assets', 26), ('equityliabilities', 23), ('equity', 17)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD current assets | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD currentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD current liabilities | score 44
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD currentliabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrent assets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrentassets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrent liabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD non current assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD non current liabilities | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrentassets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD equity and liabilities | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Related party payables | MATCH WORD equityandliabilities | score 43
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Deferred tax liability | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD current assets | score 39
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD currentassets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD current liabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD currentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrent assets | score 36
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrentassets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrent liabilities | score 59
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD non current assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD non current liabilities | score 58
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrentliabilities | score 56
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrentassets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrentliabilities | score 56
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD equity and liabilities | score 55
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD equity | score 45
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD equityandliabilities | score 52
2023-08-28 12:59:00+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 12:59:00+0530 - sLogger - DEBUG - Total equity and liabilities | [('equity and liabilities', 85), ('equity liabilities', 72), ('current liabilities', 49), ('equityliabilities', 45), ('noncurrent liabilities', 43), ('liabilities', 41), ('equity', 41), ('equityandliabilities', 41), ('noncurrentliabilities', 29), ('current assets', 28), ('noncurrent assets', 28), ('noncurrentassets', 26), ('currentliabilities', 25), ('currentassets', 23), ('assets', 21)]
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current assets | score 32
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD currentassets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current liabilities | score 69
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD currentliabilities | score 62
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent assets | score 31
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrentassets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent liabilities | score 64
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current assets | score 35
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current liabilities | score 63
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrentliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrentassets | score 28
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrentliabilities | score 57
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity and liabilities | score 95
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity | score 90
2023-08-28 12:59:00+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equityandliabilities | score 83
2023-08-28 12:59:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-28 12:59:00+0530 - sLogger - DEBUG - set_section_details started
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash received from customers | adiustments for movements in working capital
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers, employees and others | changes in operating assets and liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds of sales of property, plant and equipment | changes in operating assets and liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investment and acquisition of forestcrop | adjustments for increase decrease in operating assets
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Short term investments | movements in working capital
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from investing activities | adjustments for increase decrease in operating assets
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from long term borrowings | operating profit before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- (Repayment) / Proceeds from short term borrowings | operating profit before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Finance expenses | adjustments for increase decrease in operating assets
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds ofissued shares | adiustments for movements in working capital
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of leas e liabilities | changes in operating assets and liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from financing activities | operating cash flow before working capital changes
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase | adjustments for increase decrease in operating assets
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Opening casl h and cash equivalents | changes in operating assets and liabilities
2023-08-28 12:59:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Closing cash and cash equivalents* | changes in operating assets and liabilities
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-28 12:59:01+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-28 12:59:01+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset ', ' Term deposit']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), (' Cash', 44), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits ', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits ', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24), (' Cash', 24)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('cash and short term deposits', 81), ('Cash and short term deposits ', 81), ('cash and cash equivalents', 69), ('bank balances other than cash and cash equivalents', 62), ('other bank balances', 39), ('cash and bank balances', 37), ('bank balances other than above', 36), ('cash asset', 36), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('cash and short term deposits', 81), ('Cash and short term deposits ', 81), ('cash and cash equivalents', 69), ('bank balances other than cash and cash equivalents', 62), ('other bank balances', 39), ('cash and bank balances', 37), ('bank balances other than above', 36), ('cash asset', 36), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [('cash and cash equivalents', 48), ('cash and short term deposits', 46), ('Cash and short term deposits ', 46), ('bank balances other than cash and cash equivalents', 41), ('bank balances other than above', 39), ('cash and bank balances', 37), ('other bank balances', 35), ('cash asset', 26), (' Cash', 12)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [('cash and cash equivalents', 36), ('cash and short term deposits', 36), ('cash asset', 36), ('Cash and short term deposits ', 36), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 29), ('bank balances other than above', 27), ('cash and bank balances', 26), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits ', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14), (' Cash', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other bank balances', 30), (' Cash', 29), ('cash and bank balances', 26), ('bank balances other than above', 20), ('cash and cash equivalents', 17), ('cash asset', 15), ('bank balances other than cash and cash equivalents', 13), ('cash and short term deposits', 13), ('Cash and short term deposits ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 81, 'value': 2530.0, 'line_item_label': ['Cash and cash equivalents Short term deposits', 'Cash and cash equivalents Short term deposits'], 'note_numbers': [nan, nan], 'line_item_value': [1433.0, 1097.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), (' Cash', 44), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits ', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits ', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24), (' Cash', 24)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('cash and short term deposits', 81), ('Cash and short term deposits ', 81), ('cash and cash equivalents', 69), ('bank balances other than cash and cash equivalents', 62), ('other bank balances', 39), ('cash and bank balances', 37), ('bank balances other than above', 36), ('cash asset', 36), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('cash and short term deposits', 81), ('Cash and short term deposits ', 81), ('cash and cash equivalents', 69), ('bank balances other than cash and cash equivalents', 62), ('other bank balances', 39), ('cash and bank balances', 37), ('bank balances other than above', 36), ('cash asset', 36), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [('cash and cash equivalents', 48), ('cash and short term deposits', 46), ('Cash and short term deposits ', 46), ('bank balances other than cash and cash equivalents', 41), ('bank balances other than above', 39), ('cash and bank balances', 37), ('other bank balances', 35), ('cash asset', 26), (' Cash', 12)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [('cash and cash equivalents', 36), ('cash and short term deposits', 36), ('cash asset', 36), ('Cash and short term deposits ', 36), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 29), ('bank balances other than above', 27), ('cash and bank balances', 26), (' Cash', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits ', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14), (' Cash', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other bank balances', 30), (' Cash', 29), ('cash and bank balances', 26), ('bank balances other than above', 20), ('cash and cash equivalents', 17), ('cash asset', 15), ('bank balances other than cash and cash equivalents', 13), ('cash and short term deposits', 13), ('Cash and short term deposits ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 81, 'value': 4850.0, 'line_item_label': ['Cash and cash equivalents Short term deposits', 'Cash and cash equivalents Short term deposits'], 'note_numbers': [nan, nan], 'line_item_value': [3753.0, 1097.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['inventories ', ' Contract assets']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' spare parts at cost ', ' parts and accessories (at cost) ', ' stock in transit ', ' Stock in transit at cost ', ' allowance for obsolescence ', ' Finished goods in transit']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' Contract assets', 100), ('inventories ', 40)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' Contract assets', 62), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories ', 100), (' Contract assets', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('inventories ', 33), (' Contract assets', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 6], 'score': 100, 'value': 4993.0, 'line_item_label': ['Assets', 'Inventories'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 4993.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' Contract assets', 100), ('inventories ', 40)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' Contract assets', 62), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories ', 100), (' Contract assets', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('inventories ', 33), (' Contract assets', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 6], 'score': 100, 'value': 5293.0, 'line_item_label': ['Assets', 'Inventories'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 5293.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables ']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['current ', ' prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 12:59:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables ', 22), (' prepayments ', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables ', 34), (' prepayments ', 21)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' other current assets ', 44), (' other financial assets ', 44), (' other current financial assets ', 42), (' trade and other receivables ', 42), ('other assets ', 39), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' other current assets ', 44), (' other financial assets ', 44), (' other current financial assets ', 42), (' trade and other receivables ', 42), ('other assets ', 39), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' trade and other receivables ', 86), (' other current financial assets ', 39), (' other current assets ', 38), (' other financial assets ', 38), ('other assets ', 35), (' prepayments ', 34)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' trade and other receivables ', 60), (' other current financial assets ', 40), (' other current assets ', 38), (' other financial assets ', 38), ('other assets ', 34), (' prepayments ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables ', 26), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' other financial assets ', 27), (' prepayments ', 22), (' other current financial assets ', 20), (' other current assets ', 18), (' trade and other receivables ', 16), ('other assets ', 14)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 86, 'value': 20887.0, 'line_item_label': ['Current assets', 'Trade, prepayments and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 20887.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables ', 22), (' prepayments ', 18)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables ', 34), (' prepayments ', 21)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' other current assets ', 44), (' other financial assets ', 44), (' other current financial assets ', 42), (' trade and other receivables ', 42), ('other assets ', 39), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' other current assets ', 44), (' other financial assets ', 44), (' other current financial assets ', 42), (' trade and other receivables ', 42), ('other assets ', 39), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' trade and other receivables ', 86), (' other current financial assets ', 39), (' other current assets ', 38), (' other financial assets ', 38), ('other assets ', 35), (' prepayments ', 34)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' trade and other receivables ', 60), (' other current financial assets ', 40), (' other current assets ', 38), (' other financial assets ', 38), ('other assets ', 34), (' prepayments ', 33)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables ', 26), (' prepayments ', 13)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' other financial assets ', 27), (' prepayments ', 22), (' other current financial assets ', 20), (' other current assets ', 18), (' trade and other receivables ', 16), ('other assets ', 14)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 86, 'value': 8904.0, 'line_item_label': ['Current assets', 'Trade, prepayments and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 8904.0]}
2023-08-28 12:59:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:01+0530 - sLogger - DEBUG - keywords = ['current ', ' prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' other receivables and prepayments ', 67), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepayments ', 33), ('current ', 29)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' prepayments ', 100), (' prepaid ', 77), (' prepaid ', 77), (' other prepayments ', 73), (' other receivables and prepayments ', 73), (' prepaid expense ', 36), ('current ', 29), (' prepaid expenditure ', 27), (' charges paid in advance', 27), (' in advance ', 17)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 52), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepayments ', 33), ('current ', 29)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' other receivables and prepayments ', 67), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepayments ', 33), ('current ', 29)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' prepayments ', 100), (' prepaid ', 77), (' prepaid ', 77), (' other prepayments ', 73), (' other receivables and prepayments ', 73), (' prepaid expense ', 36), ('current ', 29), (' prepaid expenditure ', 27), (' charges paid in advance', 27), (' in advance ', 17)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 52), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepayments ', 33), ('current ', 29)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-28 12:59:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [788.0, 701.0], 'label': ['None Prepayments', 'None Prepayments'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments ', ' Capitalised contract cost ', ' Debtors retention ', ' Prepaid subscription ', ' Income tax refund due ', ' Fuel tax credits ', ' GST receivable ', ' Deposits ', ' Intercompany receivable ', ' Accrued income ', ' accrued interest receivable ', ' other receivables ', ' Forward exchange contracts used for hedging keyword']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' Restricted deposits ', 29), (' Capitalised contract cost ', 29), (' trade and other receivables ', 22), (' Income tax receivable', 19), (' income tax receivable from related parties ', 16), (' Income tax refund due ', 16), (' deferred operating expenditure ', 15), (' Other investment including derivatives ', 13)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' Income tax refund due ', 42), (' Restricted deposits ', 41), (' trade and other receivables ', 34), (' Capitalised contract cost ', 33), (' Other investment including derivatives ', 32), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29), (' Income tax receivable', 28)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('other current assets ', 44), (' other financial assets ', 44), (' Restricted deposits ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), (' Other investment including derivatives ', 40), (' other assets ', 39), (' income tax receivable from related parties ', 38), (' deferred operating expenditure ', 36), (' biological assets ', 35), (' Income tax receivable', 32), (' financial assets ', 30), (' Income tax refund due ', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('other current assets ', 44), (' other financial assets ', 44), (' Restricted deposits ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), (' Other investment including derivatives ', 40), (' other assets ', 39), (' income tax receivable from related parties ', 38), (' deferred operating expenditure ', 36), (' biological assets ', 35), (' Income tax receivable', 32), (' financial assets ', 30), (' Income tax refund due ', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' trade and other receivables ', 86), (' Income tax receivable', 53), (' income tax receivable from related parties ', 48), (' deferred operating expenditure ', 44), (' Restricted deposits ', 40), ('other current assets ', 38), (' other financial assets ', 38), (' Income tax refund due ', 37), (' Other investment including derivatives ', 37), (' other assets ', 35), (' Capitalised contract cost ', 35), (' financial assets ', 29), (' biological assets ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' income tax receivable from related parties ', 71), (' trade and other receivables ', 60), (' Income tax receivable', 59), (' Restricted deposits ', 41), (' Capitalised contract cost ', 39), ('other current assets ', 38), (' other financial assets ', 38), (' Other investment including derivatives ', 37), (' deferred operating expenditure ', 36), (' other assets ', 34), (' biological assets ', 33), (' financial assets ', 32), (' Income tax refund due ', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' Other investment including derivatives ', 41), (' other assets ', 40), (' Restricted deposits ', 40), (' Income tax receivable', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' Income tax refund due ', 34), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables ', 26), (' Capitalised contract cost ', 25), (' income tax receivable from related parties ', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial assets ', 38), (' other financial assets ', 27), (' Income tax receivable', 21), ('other current assets ', 18), (' Income tax refund due ', 17), (' trade and other receivables ', 16), (' Capitalised contract cost ', 15), (' other assets ', 14), (' Other investment including derivatives ', 14), (' biological assets ', 13), (' income tax receivable from related parties ', 11), (' deferred operating expenditure ', 8), (' Restricted deposits ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 86, 'value': 20887.0, 'line_item_label': ['Current assets', 'Trade, prepayments and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 20887.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' Restricted deposits ', 29), (' Capitalised contract cost ', 29), (' trade and other receivables ', 22), (' Income tax receivable', 19), (' income tax receivable from related parties ', 16), (' Income tax refund due ', 16), (' deferred operating expenditure ', 15), (' Other investment including derivatives ', 13)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' Income tax refund due ', 42), (' Restricted deposits ', 41), (' trade and other receivables ', 34), (' Capitalised contract cost ', 33), (' Other investment including derivatives ', 32), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29), (' Income tax receivable', 28)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('other current assets ', 44), (' other financial assets ', 44), (' Restricted deposits ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), (' Other investment including derivatives ', 40), (' other assets ', 39), (' income tax receivable from related parties ', 38), (' deferred operating expenditure ', 36), (' biological assets ', 35), (' Income tax receivable', 32), (' financial assets ', 30), (' Income tax refund due ', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [('other current assets ', 44), (' other financial assets ', 44), (' Restricted deposits ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), (' Other investment including derivatives ', 40), (' other assets ', 39), (' income tax receivable from related parties ', 38), (' deferred operating expenditure ', 36), (' biological assets ', 35), (' Income tax receivable', 32), (' financial assets ', 30), (' Income tax refund due ', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' trade and other receivables ', 86), (' Income tax receivable', 53), (' income tax receivable from related parties ', 48), (' deferred operating expenditure ', 44), (' Restricted deposits ', 40), ('other current assets ', 38), (' other financial assets ', 38), (' Income tax refund due ', 37), (' Other investment including derivatives ', 37), (' other assets ', 35), (' Capitalised contract cost ', 35), (' financial assets ', 29), (' biological assets ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' income tax receivable from related parties ', 71), (' trade and other receivables ', 60), (' Income tax receivable', 59), (' Restricted deposits ', 41), (' Capitalised contract cost ', 39), ('other current assets ', 38), (' other financial assets ', 38), (' Other investment including derivatives ', 37), (' deferred operating expenditure ', 36), (' other assets ', 34), (' biological assets ', 33), (' financial assets ', 32), (' Income tax refund due ', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' Other investment including derivatives ', 41), (' other assets ', 40), (' Restricted deposits ', 40), (' Income tax receivable', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' Income tax refund due ', 34), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables ', 26), (' Capitalised contract cost ', 25), (' income tax receivable from related parties ', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial assets ', 38), (' other financial assets ', 27), (' Income tax receivable', 21), ('other current assets ', 18), (' Income tax refund due ', 17), (' trade and other receivables ', 16), (' Capitalised contract cost ', 15), (' other assets ', 14), (' Other investment including derivatives ', 14), (' biological assets ', 13), (' income tax receivable from related parties ', 11), (' deferred operating expenditure ', 8), (' Restricted deposits ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 86, 'value': 8904.0, 'line_item_label': ['Current assets', 'Trade, prepayments and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 8904.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments ', ' Capitalised contract cost ', ' Debtors retention ', ' Prepaid subscription ', ' Income tax refund due ', ' Fuel tax credits ', ' GST receivable ', ' Deposits ', ' Intercompany receivable ', ' Accrued income ', ' accrued interest receivable ', ' other receivables ', ' Forward exchange contracts used for hedging keyword'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' other', 100), (' other receivables ', 75), (' interest receivable', 73), (' GST receivable ', 70), (' other receivables - related party', 58), (' Intercompany receivable ', 58), (' income tax receivable from related parties', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' related party receivable', 56), (' Debtors retention ', 54), (' forward exchange contracts', 53), (' Fuel tax credits ', 53), (' long service leave receivable', 52), (' accrued interest receivable ', 52), (' electricity derivatives at fair value', 50), (' other debtors and prepayments ', 49), (' Forward exchange contracts used for hedging keyword', 48), ('other assets', 45), (' rental bond', 45), (' Income tax refund due ', 45), ('foreign exchange derivatives at fair value', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' related party disclosures', 43), (' deposits', 43), (' condensate', 43), (' Deposits ', 43), (' share of jv prepayments', 42), (' Capitalised contract cost ', 39), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' current investments', 36), (' accrued rebates', 36), (' Accrued income ', 36), (' Prepaid subscription ', 35), (' lng', 33), ('current', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' share of jv prepayments', 73), (' other debtors and prepayments ', 73), (' income tax receivable from related parties', 45), (' other receivables - related party', 45), (' other deposits receivable - related party', 45), (' amount receivable from controlling entity', 45), (' interest receivable', 45), (' forward exchange contracts', 45), (' Income tax refund due ', 45), (' Intercompany receivable ', 45), (' accrued interest receivable ', 45), (' other receivables ', 45), (' Forward exchange contracts used for hedging keyword', 45), (' condensate', 43), (' other', 40), ('other assets', 36), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' related party disclosures', 36), (' derivative contracts - fair value', 36), (' long service leave receivable', 36), (' bank guarantee', 36), (' related party receivable', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' Capitalised contract cost ', 36), (' Debtors retention ', 36), (' lng', 33), (' GST receivable ', 32), ('current', 29), (' deposits', 29), (' Prepaid subscription ', 29), (' Deposits ', 29), (' electricity derivatives at fair value', 27), (' rental bond', 27), (' current investments', 27), (' Fuel tax credits ', 27), (' Accrued income ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' other receivables ', 100), (' interest receivable', 73), (' GST receivable ', 70), ('other assets', 64), (' accrued interest receivable ', 62), (' related party receivable', 61), (' Intercompany receivable ', 58), (' Debtors retention ', 54), (' other receivables - related party', 50), (' Income tax refund due ', 50), (' long service leave receivable', 48), (' other debtors and prepayments ', 48), (' Fuel tax credits ', 47), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' Capitalised contract cost ', 43), (' Deposits ', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' Forward exchange contracts used for hedging keyword', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' Accrued income ', 36), (' Prepaid subscription ', 35), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' other', 100), (' other receivables ', 75), (' interest receivable', 73), (' GST receivable ', 70), (' other receivables - related party', 58), (' Intercompany receivable ', 58), (' income tax receivable from related parties', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' related party receivable', 56), (' Debtors retention ', 54), (' forward exchange contracts', 53), (' Fuel tax credits ', 53), (' long service leave receivable', 52), (' accrued interest receivable ', 52), (' electricity derivatives at fair value', 50), (' other debtors and prepayments ', 49), (' Forward exchange contracts used for hedging keyword', 48), ('other assets', 45), (' rental bond', 45), (' Income tax refund due ', 45), ('foreign exchange derivatives at fair value', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' related party disclosures', 43), (' deposits', 43), (' condensate', 43), (' Deposits ', 43), (' share of jv prepayments', 42), (' Capitalised contract cost ', 39), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' current investments', 36), (' accrued rebates', 36), (' Accrued income ', 36), (' Prepaid subscription ', 35), (' lng', 33), ('current', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' share of jv prepayments', 73), (' other debtors and prepayments ', 73), (' income tax receivable from related parties', 45), (' other receivables - related party', 45), (' other deposits receivable - related party', 45), (' amount receivable from controlling entity', 45), (' interest receivable', 45), (' forward exchange contracts', 45), (' Income tax refund due ', 45), (' Intercompany receivable ', 45), (' accrued interest receivable ', 45), (' other receivables ', 45), (' Forward exchange contracts used for hedging keyword', 45), (' condensate', 43), (' other', 40), ('other assets', 36), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' related party disclosures', 36), (' derivative contracts - fair value', 36), (' long service leave receivable', 36), (' bank guarantee', 36), (' related party receivable', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' Capitalised contract cost ', 36), (' Debtors retention ', 36), (' lng', 33), (' GST receivable ', 32), ('current', 29), (' deposits', 29), (' Prepaid subscription ', 29), (' Deposits ', 29), (' electricity derivatives at fair value', 27), (' rental bond', 27), (' current investments', 27), (' Fuel tax credits ', 27), (' Accrued income ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' other receivables ', 100), (' interest receivable', 73), (' GST receivable ', 70), ('other assets', 64), (' accrued interest receivable ', 62), (' related party receivable', 61), (' Intercompany receivable ', 58), (' Debtors retention ', 54), (' other receivables - related party', 50), (' Income tax refund due ', 50), (' long service leave receivable', 48), (' other debtors and prepayments ', 48), (' Fuel tax credits ', 47), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' Capitalised contract cost ', 43), (' Deposits ', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' Forward exchange contracts used for hedging keyword', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' Accrued income ', 36), (' Prepaid subscription ', 35), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 5], 'score': [100, 100, 100, 100], 'value': [8116.0, 8904.0, 20186.0, 20887.0], 'label': ['None Trade receivables and other', 'None Total trade and other receivables', 'None Trade receivables and other', 'None Total trade and other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [8116.0, 788.0, 8904.0, 20186.0, 701.0, 20887.0], 'label': ["$'000", "$'000", "$'000", "$'000", "$'000", "$'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_assets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciation', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' Property ', 40), ('plant property equipment', 31), ('property plant equipment', 31), ('plant and equipment ', 22), (' plant and equipment ', 22)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' Property ', 53), ('plant property equipment', 32), ('property plant equipment', 32), ('plant and equipment ', 23), (' plant and equipment ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('plant and equipment ', 33), (' plant and equipment ', 33), ('plant property equipment', 17), ('property plant equipment', 17), (' Property ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 33179.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [33179.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' Property ', 40), ('plant property equipment', 31), ('property plant equipment', 31), ('plant and equipment ', 22), (' plant and equipment ', 22)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' Property ', 53), ('plant property equipment', 32), ('property plant equipment', 32), ('plant and equipment ', 23), (' plant and equipment ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('plant and equipment ', 33), (' plant and equipment ', 33), ('plant property equipment', 17), ('property plant equipment', 17), (' Property ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 37204.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [37204.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['depreciation', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('depreciation', 29), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' Other assets ', 50), (' Assets under construction ', 50), (' Mine infrastructure ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Leasehold buildings', 50), ('depreciation', 25), ('accumulated depreciation ', 25), (' Asset Retirement Obligation ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Subsea ', 25), (' Marine ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), ('depreciation', 43), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Other assets ', 60), (' Assets under construction ', 60), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Capitalised pre stripping costs ', 40), (' Mine infrastructure ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine ', 40), (' Development properties ', 40), (' Workshop tooling ', 40), ('depreciation', 20), ('accumulated depreciation ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings', 20), (' Stripping WIP ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Marine ', 20), ('depreciation', 17), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets ', 17), (' Stripping WIP ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings', 17), (' Facilities ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), ('accumulated depreciation ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' land and improvement ', 67), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), ('accumulated depreciation ', 41), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Other assets ', 36), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' Leasehold buildings', 20), (' Development properties ', 19), (' Fishing vessels & equipment ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), ('depreciation', 57), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' Construction in progress ', 50), (' land and improvement ', 50), (' Stripping WIP ', 44), ('accumulated depreciation ', 43), (' Asset Retirement Obligation ', 43), (' Capitalised pre stripping costs ', 43), (' Assets under construction ', 43), (' Mining properties ', 38), (' Other assets ', 36), (' under construction ', 36), (' Development properties ', 36), (' Leasehold buildings', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Assets under construction ', 43), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 36), (' Other assets ', 36), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), ('accumulated depreciation ', 29), (' Asset Retirement Obligation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Leasehold buildings', 29), (' Mining properties ', 23), (' Development properties ', 21), (' Fishing vessels & equipment ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Construction in progress ', 47), (' Capitalised pre stripping costs ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Marine ', 40), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), ('depreciation', 29), ('accumulated depreciation ', 27), (' Mine infrastructure ', 27), (' Development properties ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' Marine ', 60), (' Construction in progress ', 56), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Other assets ', 45), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), ('depreciation', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Construction in progress ', 44), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciation', 100), (' land and improvement ', 67), ('accumulated depreciation ', 60), (' Marine ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Pipeline Asset ', 46), (' Other assets ', 45), (' Construction in progress ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Leasehold buildings', 33), (' Workshop tooling ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), ('accumulated depreciation ', 40), (' Construction in progress ', 39), (' Mining properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 34), (' Leasehold buildings', 34), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land and buildings ', 36), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' Development properties ', 19)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 20, 25, 26, 27, 28, 36, 37, 38, 39, 42, 43, 44, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 51, 52, 53, 54, 55, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 62, 67, 68, 69, 70, 78, 79, 80, 81, 88, 89, 90, 91, 99, 100, 101, 102, 109, 110, 111, 112, 120, 121, 122, 123], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [13183.0, 567.0, 0.0, 13750.0, 152.0, 152.0, 38.0, 38.0, 0.0, 0.0, 190.0, 190.0, 0.0, 13560.0, 0.0, 13019.0, 164.0, 0.0, 13183.0, 119.0, 119.0, 33.0, 33.0, 0.0, 0.0, 152.0, 152.0, 12900.0, 13031.0, 5605.0, 981.0, 0.0, 6586.0, 0.0, 1272.0, 0.0, 5605.0, 789.0, 203.0, -52.0, 940.0, 383.0, 383.0, 89.0, 89.0, -44.0, -44.0, 428.0, 428.0, 406.0, 512.0, 0.0, 725.0, 80.0, -16.0, 789.0, 333.0, 333.0, 59.0, 59.0, -9.0, -9.0, 383.0, 383.0, 392.0, 406.0, 683.0, 395.0, -120.0, 958.0, 563.0, 261.0, -141.0, 683.0, 398.0, 125.0, -58.0, 465.0, 333.0, 105.0, -40.0, 398.0, 7221.0, 1628.0, -222.0, 8627.0, 5681.0, 1730.0, -190.0, 7221.0], 'label': ['Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Depreciation and impairment losses at April 2022', 'Land and buildings', 'Depreciation and impairment losses Depreciation for the year', 'Land and buildings', 'Depreciation and impairment losses Disposals', 'Land and buildings', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Depreciation and impairment losses at 1 April 2021', 'Land and buildings', 'Depreciation and impairment losses Depreciation for the year', 'Land and buildings', 'Depreciation and impairment losses Disposals', 'Land and buildings', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Depreciation and impairment losses at April 2022', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses at 1 April 2021', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Depreciation and impairment losses at April 2022', 'Plant and Equipment', 'Depreciation and impairment losses Depreciation for the year', 'Plant and Equipment', 'Depreciation and impairment losses Disposals', 'Plant and Equipment', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Depreciation and impairment losses at 1 April 2021', 'Plant and Equipment', 'Depreciation and impairment losses Depreciation for the year', 'Plant and Equipment', 'Depreciation and impairment losses Disposals', 'Plant and Equipment', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Depreciation and impairment losses at April 2022', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses at 1 April 2021', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022', 'Depreciation and impairment losses at April 2022', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses at 1 April 2021', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022', 'Depreciation and impairment losses at April 2022', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses at 1 April 2021', 'Depreciation and impairment losses Depreciation for the year', 'Depreciation and impairment losses Disposals', 'Depreciation and impairment losses depreciation and impairment at 31 March 2022'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('gross', 50), ('cost', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('cost', 50), ('net book value', 40), ('gross', 20), ('net value', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost', 50), ('gross', 20), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 38), ('net value', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('cost', 50), ('net book value', 46), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 11, 12, 13, 14, 21, 22, 23, 24, 32, 33, 34, 35, 42, 43, 44, 45, 53, 54, 55, 56, 63, 64, 65, 66, 74, 75, 76, 77, 84, 85, 86, 87, 95, 96, 97, 98, 105, 106, 107, 108, 116, 117, 118, 119], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [13183.0, 567.0, 0.0, 13750.0, 13019.0, 164.0, 0.0, 13183.0, 24523.0, 4174.0, 0.0, 28697.0, 0.0, 0.0, 0.0, 24523.0, 789.0, 203.0, -52.0, 940.0, 725.0, 80.0, -16.0, 789.0, 1306.0, 678.0, -152.0, 1832.0, 1205.0, 304.0, -203.0, 1306.0, 599.0, 72.0, -59.0, 612.0, 423.0, 222.0, -46.0, 599.0, 40400.0, 5694.0, -263.0, 45831.0, 35273.0, 5392.0, -265.0, 40400.0], 'label': ['Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('plant property equipment', 17), ('property plant equipment', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 33179.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [33179.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('plant property equipment', 17), ('property plant equipment', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 37204.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [37204.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' plant property equipment ', 50), ('Work in progress ', 42), (' investment property', 42), (' property plant equipment ', 33), (' plant and equipment ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' investment property', 34), (' plant property equipment ', 33), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' investment property', 64), ('Work in progress ', 45), (' property plant equipment ', 45), (' plant property equipment ', 36), (' plant and equipment ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' plant property equipment ', 67), (' property plant equipment ', 67), (' plant and equipment ', 67), (' investment property', 33), ('Work in progress ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 33179.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [33179.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' plant property equipment ', 50), ('Work in progress ', 42), (' investment property', 42), (' property plant equipment ', 33), (' plant and equipment ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' investment property', 34), (' plant property equipment ', 33), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' investment property', 64), ('Work in progress ', 45), (' property plant equipment ', 45), (' plant property equipment ', 36), (' plant and equipment ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' plant property equipment ', 67), (' property plant equipment ', 67), (' plant and equipment ', 67), (' investment property', 33), ('Work in progress ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 37204.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [37204.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['construction in progress ', ' work in progress ', ' capital works in progress'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' capital works in progress', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 50), (' capital works in progress', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' capital works in progress', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' capital works in progress', 60), ('construction in progress ', 40), (' work in progress ', 40)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 50), (' work in progress ', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), ('construction in progress ', 44), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 39), ('construction in progress ', 33), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 43), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('construction in progress ', 36), (' capital works in progress', 29), (' work in progress ', 15)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress', 40), (' work in progress ', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('construction in progress ', 56), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 47), (' work in progress ', 46), ('construction in progress ', 44)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 23)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('tangible assets', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('tangible assets', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('tangible assets', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('tangible assets', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('tangible assets', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('tangible assets', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' goodwill on consolidation ', 25), (' intangible asset', 25), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 20), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' goodwill on consolidation ', 36), (' intangible asset', 18), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' intangible asset', 67), (' goodwill on consolidation ', 33), ('goodwill ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' goodwill on consolidation ', 25), (' intangible asset', 25), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 20), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' goodwill on consolidation ', 36), (' intangible asset', 18), ('goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' intangible asset', 67), (' goodwill on consolidation ', 33), ('goodwill ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' plant property equipment', 50), (' intangible under development ', 42), (' intangible assets under development ', 42), ('property plant equipment', 33), ('intangible assets ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 47), (' intangible under development ', 40), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('property plant equipment', 45), (' intangible under development ', 36), (' intangible assets under development ', 36), (' plant property equipment', 36), ('intangible assets ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('intangible assets ', 67), (' intangible under development ', 67), (' intangible assets under development ', 67), (' plant property equipment', 67), ('property plant equipment', 67)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 80, 'value': 33179.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [33179.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' plant property equipment', 50), (' intangible under development ', 42), (' intangible assets under development ', 42), ('property plant equipment', 33), ('intangible assets ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 47), (' intangible under development ', 40), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('property plant equipment', 45), (' intangible under development ', 36), (' intangible assets under development ', 36), (' plant property equipment', 36), ('intangible assets ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('intangible assets ', 67), (' intangible under development ', 67), (' intangible assets under development ', 67), (' plant property equipment', 67), ('property plant equipment', 67)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 80, 'value': 37204.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [37204.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' goodwill ', 43), (' carrying amounts ', 33), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' development and software ', 50), (' goodwill ', 50), (' consumer contracts ', 50), ('Other intangibles ', 25), (' software ', 25), (' carrying amounts ', 25), (' computer software ', 25), (' mining rights ', 25), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('Other intangibles ', 60), (' carrying amounts ', 60), (' consumer contracts ', 60), (' development and software ', 40), (' goodwill ', 40), (' software ', 40), (' computer software ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [(' computer software ', 100), (' carrying amounts ', 50), (' consumer contracts ', 50), (' development and software ', 33), (' software ', 33), ('Other intangibles ', 17), (' goodwill ', 17), (' mining rights ', 17), (' water licenses', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 35), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [(' development and software ', 57), (' goodwill ', 43), (' software ', 43), (' computer software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' carrying amounts ', 33), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [(' development and software ', 50), (' software ', 43), (' consumer contracts ', 43), ('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' development and software ', 37), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' development and software ', 53), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' carrying amounts ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' carrying amounts ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [(' carrying amounts ', 100), (' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' goodwill ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9, 10, 19, 20, 29, 30, 31, 40, 41, 50, 51, 52, 61, 62, 71, 72, 73, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 92, 93, 93, 94, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 103, 104, 104, 113, 114, 115, 124, 125], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 13560.0, 0.0, 12900.0, 13031.0, 18918.0, 22111.0, 0.0, 15568.0, 18918.0, 406.0, 512.0, 0.0, 392.0, 406.0, 623.0, 874.0, 0.0, 642.0, 623.0, 599.0, 72.0, -59.0, 612.0, 398.0, 125.0, -58.0, 465.0, 201.0, 201.0, 147.0, 147.0, 0.0, 0.0, 423.0, 222.0, -46.0, 599.0, 333.0, 105.0, -40.0, 398.0, 90.0, 90.0, 201.0, 201.0, 33179.0, 37204.0, 0.0, 29592.0, 33179.0], 'label': ['Carrying amounts Balance at 1 April 2022', 'Carrying amounts Balance as at 31 March 2023', 'Carrying amounts As at 31 March 2022', 'Carrying amounts Balance at 1 April 2021', 'Carrying amounts Balance as at 31 March 2022', 'Carrying amounts Balance at 1 April 2022', 'Carrying amounts Balance as at 31 March 2023', 'Carrying amounts As at 31 March 2022', 'Carrying amounts Balance at 1 April 2021', 'Carrying amounts Balance as at 31 March 2022', 'Carrying amounts Balance at 1 April 2022', 'Carrying amounts Balance as at 31 March 2023', 'Carrying amounts As at 31 March 2022', 'Carrying amounts Balance at 1 April 2021', 'Carrying amounts Balance as at 31 March 2022', 'Carrying amounts Balance at 1 April 2022', 'Carrying amounts Balance as at 31 March 2023', 'Carrying amounts As at 31 March 2022', 'Carrying amounts Balance at 1 April 2021', 'Carrying amounts Balance as at 31 March 2022', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Carrying amounts Balance at 1 April 2022', 'Computer', 'Carrying amounts Balance as at 31 March 2023', 'Computer', 'Carrying amounts As at 31 March 2022', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Computer', 'Carrying amounts Balance at 1 April 2021', 'Computer', 'Carrying amounts Balance as at 31 March 2022', 'Computer', 'Carrying amounts Balance at 1 April 2022', 'Carrying amounts Balance as at 31 March 2023', 'Carrying amounts As at 31 March 2022', 'Carrying amounts Balance at 1 April 2021', 'Carrying amounts Balance as at 31 March 2022'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('donations', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('donations', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('donations', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('donations', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('donations', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('donations', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('donations', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('donations', 50)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year ', ' Interest swap']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method ', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), (' Other investment including derivatives', 38), ('investment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' Other investment including derivatives', 67), (' investments accounted for using the equity method ', 50), ('joint ventures and associates', 42), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' investment in associate', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Other investment including derivatives', 50), ('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method ', 38), ('investment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' investments accounted for using the equity method ', 53), (' investment in associate', 46), ('joint ventures and associates', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' Other investment including derivatives', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('investment', 50), (' investment in joint venture', 45), (' investment in associate', 45), (' investments accounted for using the equity method ', 45), (' Other investment including derivatives', 45), ('joint ventures and associates', 27), ('derivative financial instruments', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('derivative financial instruments', 100), ('joint ventures and associates', 67), ('investment', 33), (' investment in joint venture', 33), (' investment in associate', 33), (' investments accounted for using the equity method ', 33), (' Other investment including derivatives', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 538637.0, 'line_item_label': [nan], 'note_numbers': [nan], 'line_item_value': [538637.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method ', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), (' Other investment including derivatives', 38), ('investment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' Other investment including derivatives', 67), (' investments accounted for using the equity method ', 50), ('joint ventures and associates', 42), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' investment in associate', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Other investment including derivatives', 50), ('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method ', 38), ('investment', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' investments accounted for using the equity method ', 53), (' investment in associate', 46), ('joint ventures and associates', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' Other investment including derivatives', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('investment', 50), (' investment in joint venture', 45), (' investment in associate', 45), (' investments accounted for using the equity method ', 45), (' Other investment including derivatives', 45), ('joint ventures and associates', 27), ('derivative financial instruments', 27)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('derivative financial instruments', 100), ('joint ventures and associates', 67), ('investment', 33), (' investment in joint venture', 33), (' investment in associate', 33), (' investments accounted for using the equity method ', 33), (' Other investment including derivatives', 33)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 512194.0, 'line_item_label': [nan], 'note_numbers': [nan], 'line_item_value': [512194.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('deferred charges', 43), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 38), ('deferred tax', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('deferred charges', 45), ('deferred tax assets', 31), ('deferred tax', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('deferred tax', 17), ('deferred charges', 14), ('deferred tax assets', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [('deferred charges', 43), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 38), ('deferred tax', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [('deferred charges', 45), ('deferred tax assets', 31), ('deferred tax', 30)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('deferred tax', 17), ('deferred charges', 14), ('deferred tax assets', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' loan receivables', 70), (' other assets', 43), ('non-current', 32), (' financial assets', 32), (' other non-current assets', 32), (' other non-current assets', 32), (' leased assets', 27), (' exploration and evaluation expenditure', 26), (' leases', 12)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' other assets', 62), (' leased assets', 56), (' other non-current assets', 53), (' other non-current assets', 53), (' financial assets', 50), (' exploration and evaluation expenditure', 33), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' loan receivables', 36), ('non-current', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 29), (' other assets', 27), (' leases', 27), (' exploration and evaluation expenditure', 21), (' financial assets', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('non-current', 40), (' financial assets', 38), (' loan receivables', 29), (' leases', 29), (' exploration and evaluation expenditure', 20), (' other non-current assets', 18), (' other non-current assets', 18), (' leased assets', 15), (' other assets', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' loan receivables', 70), (' other assets', 43), ('non-current', 32), (' financial assets', 32), (' other non-current assets', 32), (' other non-current assets', 32), (' leased assets', 27), (' exploration and evaluation expenditure', 26), (' leases', 12)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' other assets', 62), (' leased assets', 56), (' other non-current assets', 53), (' other non-current assets', 53), (' financial assets', 50), (' exploration and evaluation expenditure', 33), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' loan receivables', 36), ('non-current', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 29), (' other assets', 27), (' leases', 27), (' exploration and evaluation expenditure', 21), (' financial assets', 17)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('non-current', 40), (' financial assets', 38), (' loan receivables', 29), (' leases', 29), (' exploration and evaluation expenditure', 20), (' other non-current assets', 18), (' other non-current assets', 18), (' leased assets', 15), (' other assets', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_assets
2023-08-28 12:59:02+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation ']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 12:59:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' Lease obligation ', 50), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' cash ', 20), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' Lease obligation ', 33), (' cash and cash equivalents ', 29), ('  leases ', 22), (' cash ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' bank overdraft ', 100), (' loans and borrowings ', 48), (' borrowings ', 40), (' interest bearing liabilites ', 39), (' short-term debt ', 36), (' shortterm debt ', 36), ('short term debt ', 34), (' shortterm borrowings ', 33), (' cash and cash equivalents ', 29), (' Lease obligation ', 25), (' lease liabilities ', 24), ('  leases ', 22), (' cash ', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' cash and cash equivalents ', 43), (' loans and borrowings ', 34), (' interest bearing liabilites ', 33), (' lease liabilities ', 32), (' bank overdraft ', 30), (' Lease obligation ', 28), ('short term debt ', 20), (' short-term debt ', 15), (' shortterm debt ', 15), (' shortterm borrowings ', 14), ('  leases ', 13), (' cash ', 13), (' borrowings ', 12)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' interest bearing liabilites ', 40), (' loans and borrowings ', 36), (' cash and cash equivalents ', 36), (' lease liabilities ', 34), (' bank overdraft ', 31), (' Lease obligation ', 29), ('  leases ', 27), (' short-term debt ', 25), (' shortterm debt ', 25), ('short term debt ', 24), (' shortterm borrowings ', 24), (' borrowings ', 17), (' cash ', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation ', 67), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' loans and borrowings ', 31), (' cash ', 27), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' Lease obligation ', 32), (' lease liabilities ', 31), ('  leases ', 21), (' cash ', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' loans and borrowings ', 33), ('  leases ', 29), (' cash ', 29), (' bank overdraft ', 24), (' cash and cash equivalents ', 17), (' interest bearing liabilites ', 16), (' Lease obligation ', 15), (' lease liabilities ', 14), ('short term debt ', 0), (' short-term debt ', 0), (' borrowings ', 0), (' shortterm debt ', 0), (' shortterm borrowings ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5, 6], 'score': 100, 'value': 96271.0, 'line_item_label': ['Bank overdraft', 'Lease liabilities', 'Loans and borrowings'], 'note_numbers': [nan, '10', '14'], 'line_item_value': [36.0, 2485.0, 93750.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' Lease obligation ', 50), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' cash ', 20), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' Lease obligation ', 33), (' cash and cash equivalents ', 29), ('  leases ', 22), (' cash ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' bank overdraft ', 100), (' loans and borrowings ', 48), (' borrowings ', 40), (' interest bearing liabilites ', 39), (' short-term debt ', 36), (' shortterm debt ', 36), ('short term debt ', 34), (' shortterm borrowings ', 33), (' cash and cash equivalents ', 29), (' Lease obligation ', 25), (' lease liabilities ', 24), ('  leases ', 22), (' cash ', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' cash and cash equivalents ', 43), (' loans and borrowings ', 34), (' interest bearing liabilites ', 33), (' lease liabilities ', 32), (' bank overdraft ', 30), (' Lease obligation ', 28), ('short term debt ', 20), (' short-term debt ', 15), (' shortterm debt ', 15), (' shortterm borrowings ', 14), ('  leases ', 13), (' cash ', 13), (' borrowings ', 12)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' interest bearing liabilites ', 40), (' loans and borrowings ', 36), (' cash and cash equivalents ', 36), (' lease liabilities ', 34), (' bank overdraft ', 31), (' Lease obligation ', 29), ('  leases ', 27), (' short-term debt ', 25), (' shortterm debt ', 25), ('short term debt ', 24), (' shortterm borrowings ', 24), (' borrowings ', 17), (' cash ', 9)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation ', 67), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' loans and borrowings ', 31), (' cash ', 27), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' Lease obligation ', 32), (' lease liabilities ', 31), ('  leases ', 21), (' cash ', 11)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' loans and borrowings ', 33), ('  leases ', 29), (' cash ', 29), (' bank overdraft ', 24), (' cash and cash equivalents ', 17), (' interest bearing liabilites ', 16), (' Lease obligation ', 15), (' lease liabilities ', 14), ('short term debt ', 0), (' short-term debt ', 0), (' borrowings ', 0), (' shortterm debt ', 0), (' shortterm borrowings ', 0)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5, 6], 'score': 100, 'value': 86693.0, 'line_item_label': ['Bank overdraft', 'Lease liabilities', 'Loans and borrowings'], 'note_numbers': [nan, '10', '14'], 'line_item_value': [0.0, 2593.0, 84100.0]}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:02+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [(' not later than one year ', 70), (' leases ', 50), (' not later than 1 year ', 50), (' loans from related party ', 50), (' lease liabilities ', 50), (' balance at the end of period ', 50), (' secured long-term bank loans ', 40), (' lease liabilities - current ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' cash overdraft ', 30), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' not later than one year ', 60), (' leases ', 50), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' balance at the end of period ', 40), (' cash overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), (' current ', 29), ('bank borrowings ', 20), (' utilised bank borrowings ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loans', 56), (' lease liabilities ', 55), (' secured long-term bank loans ', 53), (' loans from related party ', 48), (' obligations under finance lease ', 48), (' balance at the end of period ', 47), (' not later than one year ', 42), (' not later than 1 year ', 41), ('bank borrowings ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loans', 56), (' secured long-term bank loans ', 53), (' obligations under finance lease ', 48), (' not later than 1 year ', 44), (' not later than one year ', 44), (' loans from related party ', 42), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' balance at the end of period ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' utilised bank borrowings ', 60), (' lease liabilities - current ', 60), (' lease liabilities ', 60), (' secured long-term bank loans ', 40), (' balance at the end of period ', 40), (' obligations under finance lease ', 40), (' leases ', 25), ('bank borrowings ', 20), (' not later than 1 year ', 20), (' not later than one year ', 20), (' loans from related party ', 20), (' bank overdraft ', 20), (' cash overdraft ', 20), (' current ', 20), (' bank loans', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [(' not later than one year ', 70), (' leases ', 50), (' not later than 1 year ', 50), (' loans from related party ', 50), (' lease liabilities ', 50), (' balance at the end of period ', 50), (' secured long-term bank loans ', 40), (' lease liabilities - current ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' cash overdraft ', 30), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' not later than one year ', 60), (' leases ', 50), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' balance at the end of period ', 40), (' cash overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), (' current ', 29), ('bank borrowings ', 20), (' utilised bank borrowings ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loans', 56), (' lease liabilities ', 55), (' secured long-term bank loans ', 53), (' loans from related party ', 48), (' obligations under finance lease ', 48), (' balance at the end of period ', 47), (' not later than one year ', 42), (' not later than 1 year ', 41), ('bank borrowings ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loans', 56), (' secured long-term bank loans ', 53), (' obligations under finance lease ', 48), (' not later than 1 year ', 44), (' not later than one year ', 44), (' loans from related party ', 42), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' balance at the end of period ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [(' loans from related party ', 55), (' leases ', 50), (' lease liabilities ', 50), (' not later than 1 year ', 45), (' not later than one year ', 45), (' lease liabilities - current ', 45), (' bank loans', 44), (' current ', 43), (' utilised bank borrowings ', 36), (' secured long-term bank loans ', 36), (' balance at the end of period ', 36), (' obligations under finance lease ', 36), (' bank overdraft ', 29), (' cash overdraft ', 29), ('bank borrowings ', 18)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [(' not later than one year ', 70), (' leases ', 50), (' not later than 1 year ', 50), (' loans from related party ', 50), (' lease liabilities ', 50), (' balance at the end of period ', 50), (' secured long-term bank loans ', 40), (' lease liabilities - current ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' cash overdraft ', 30), (' current ', 14)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' not later than one year ', 60), (' leases ', 50), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' balance at the end of period ', 40), (' cash overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), (' current ', 29), ('bank borrowings ', 20), (' utilised bank borrowings ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:02+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' not later than one year ', 70), (' not later than 1 year ', 50), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), (' bank loans', 33), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' lease liabilities - current ', 30), (' lease liabilities ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' leases ', 25), (' current ', 14)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loans', 56), (' lease liabilities ', 55), (' secured long-term bank loans ', 53), (' loans from related party ', 48), (' obligations under finance lease ', 48), (' balance at the end of period ', 47), (' not later than one year ', 42), (' not later than 1 year ', 41), ('bank borrowings ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' not later than one year ', 57), (' not later than 1 year ', 54), (' leases ', 50), (' bank overdraft ', 43), (' obligations under finance lease ', 43), (' loans from related party ', 40), (' balance at the end of period ', 38), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' current ', 29), (' utilised bank borrowings ', 28), ('bank borrowings ', 27), (' lease liabilities ', 27), (' lease liabilities - current ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' not later than one year ', 60), (' bank loans', 44), (' not later than 1 year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' bank overdraft ', 40), (' obligations under finance lease ', 40), ('bank borrowings ', 30), (' utilised bank borrowings ', 30), (' balance at the end of period ', 30), (' cash overdraft ', 30), (' current ', 29), (' leases ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loans', 56), (' secured long-term bank loans ', 53), (' obligations under finance lease ', 48), (' not later than 1 year ', 44), (' not later than one year ', 44), (' loans from related party ', 42), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' utilised bank borrowings ', 35), (' lease liabilities - current ', 35), (' balance at the end of period ', 35), (' current ', 29), (' leases ', 25), (' cash overdraft ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 1 year ', 60), (' utilised bank borrowings ', 40), (' not later than one year ', 40), (' secured long-term bank loans ', 40), (' loans from related party ', 40), (' lease liabilities - current ', 40), (' lease liabilities ', 40), (' obligations under finance lease ', 40), (' bank loans', 40), (' leases ', 25), ('bank borrowings ', 20), (' bank overdraft ', 20), (' balance at the end of period ', 20), (' cash overdraft ', 20), (' current ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = portion mufg bank money june* corporation , res_fuzz_match = [(' bank loans', 78), ('bank borrowings ', 55), (' utilised bank borrowings ', 50), (' secured long-term bank loans ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' balance at the end of period ', 48), (' loans from related party ', 43), (' current ', 43), (' obligations under finance lease ', 39), (' not later than 1 year ', 37), (' lease liabilities - current ', 32), (' cash overdraft ', 29), (' leases ', 25), (' lease liabilities ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2-years june 2022 corporation , res_fuzz_match = [(' leases ', 50), ('bank borrowings ', 45), (' loans from related party ', 43), (' bank overdraft ', 43), (' current ', 43), (' not later than 1 year ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2- years june 2023 corporation , res_fuzz_match = [(' leases ', 50), ('bank borrowings ', 45), (' loans from related party ', 43), (' bank overdraft ', 43), (' current ', 43), (' not later than 1 year ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") mitsui trust bank ltd short term loan mitsui trust bank ltd short term loan june* nan , res_fuzz_match = [(' bank loans', 67), (' not later than one year ', 62), (' not later than 1 year ', 58), (' bank overdraft ', 57), (' secured long-term bank loans ', 54), (' utilised bank borrowings ', 50), (' leases ', 50), (' loans from related party ', 48), ('bank borrowings ', 45), (' lease liabilities ', 45), (' balance at the end of period ', 43), (' cash overdraft ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' lease liabilities - current ', 42)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") ("smtb") fixed 3-1 years june 2023 sumitomo corporation , res_fuzz_match = [(' leases ', 50), (' current ', 43), (' obligations under finance lease ', 39), (' loans from related party ', 38), (' not later than 1 year ', 37), (' lease liabilities - current ', 37), ('bank borrowings ', 36), (' not later than one year ', 35), (' utilised bank borrowings ', 33), (' secured long-term bank loans ', 33), (' balance at the end of period ', 33), (' bank loans', 33), (' bank overdraft ', 29), (' cash overdraft ', 29), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") total nan nan nan , res_fuzz_match = [(' bank loans', 56), (' leases ', 50), (' not later than 1 year ', 47), (' not later than one year ', 45), (' secured long-term bank loans ', 45), (' obligations under finance lease ', 41), (' utilised bank borrowings ', 39), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' bank overdraft ', 29), (' current ', 29), ('bank borrowings ', 27), (' cash overdraft ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 2-1 years june 2023 sum corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' loans from related party ', 38), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2024 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2025 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mitsui trust bank ltd fixed 5-years mitsui trust bank ltd fixed 5-years july 2024 corporation , res_fuzz_match = [(' bank loans', 67), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' secured long-term bank loans ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' balance at the end of period ', 48), (' lease liabilities - current ', 47), ('bank borrowings ', 45), (' lease liabilities ', 45), (' loans from related party ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating july 2024 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' lease liabilities - current ', 49), (' loans from related party ', 48), ('bank borrowings ', 45), (' lease liabilities ', 45), (' utilised bank borrowings ', 44), (' current ', 43), (' obligations under finance lease ', 43), (' not later than 1 year ', 42), (' not later than one year ', 39), (' secured long-term bank loans ', 38), (' balance at the end of period ', 38), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3-years june 2023 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3- years june 2023 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 4 years june 2025 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2026 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2027 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mizuho bank fixed 5-years june 2027 corporation , res_fuzz_match = [(' bank loans', 56), ('bank borrowings ', 55), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' not later than 1 year ', 47), (' secured long-term bank loans ', 46), (' utilised bank borrowings ', 44), (' loans from related party ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 39), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = portion mufg bank money june* corporation , res_fuzz_match = [(' bank loans', 78), ('bank borrowings ', 55), (' utilised bank borrowings ', 50), (' secured long-term bank loans ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' balance at the end of period ', 48), (' loans from related party ', 43), (' current ', 43), (' obligations under finance lease ', 39), (' not later than 1 year ', 37), (' lease liabilities - current ', 32), (' cash overdraft ', 29), (' leases ', 25), (' lease liabilities ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2-years june 2022 corporation , res_fuzz_match = [(' leases ', 50), ('bank borrowings ', 45), (' loans from related party ', 43), (' bank overdraft ', 43), (' current ', 43), (' not later than 1 year ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2- years june 2023 corporation , res_fuzz_match = [(' leases ', 50), ('bank borrowings ', 45), (' loans from related party ', 43), (' bank overdraft ', 43), (' current ', 43), (' not later than 1 year ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' bank loans', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") mitsui trust bank ltd short term loan mitsui trust bank ltd short term loan june* nan , res_fuzz_match = [(' bank loans', 67), (' not later than one year ', 62), (' not later than 1 year ', 58), (' bank overdraft ', 57), (' secured long-term bank loans ', 54), (' utilised bank borrowings ', 50), (' leases ', 50), (' loans from related party ', 48), ('bank borrowings ', 45), (' lease liabilities ', 45), (' balance at the end of period ', 43), (' cash overdraft ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' lease liabilities - current ', 42)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") ("smtb") fixed 3-1 years june 2023 sumitomo corporation , res_fuzz_match = [(' leases ', 50), (' current ', 43), (' obligations under finance lease ', 39), (' loans from related party ', 38), (' not later than 1 year ', 37), (' lease liabilities - current ', 37), ('bank borrowings ', 36), (' not later than one year ', 35), (' utilised bank borrowings ', 33), (' secured long-term bank loans ', 33), (' balance at the end of period ', 33), (' bank loans', 33), (' bank overdraft ', 29), (' cash overdraft ', 29), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") total nan nan nan , res_fuzz_match = [(' bank loans', 56), (' leases ', 50), (' not later than 1 year ', 47), (' not later than one year ', 45), (' secured long-term bank loans ', 45), (' obligations under finance lease ', 41), (' utilised bank borrowings ', 39), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' bank overdraft ', 29), (' current ', 29), ('bank borrowings ', 27), (' cash overdraft ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 2-1 years june 2023 sum corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' loans from related party ', 38), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2024 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2025 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mitsui trust bank ltd fixed 5-years mitsui trust bank ltd fixed 5-years july 2024 corporation , res_fuzz_match = [(' bank loans', 67), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' secured long-term bank loans ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' balance at the end of period ', 48), (' lease liabilities - current ', 47), ('bank borrowings ', 45), (' lease liabilities ', 45), (' loans from related party ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating july 2024 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' lease liabilities - current ', 49), (' loans from related party ', 48), ('bank borrowings ', 45), (' lease liabilities ', 45), (' utilised bank borrowings ', 44), (' current ', 43), (' obligations under finance lease ', 43), (' not later than 1 year ', 42), (' not later than one year ', 39), (' secured long-term bank loans ', 38), (' balance at the end of period ', 38), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3-years june 2023 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3- years june 2023 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 4 years june 2025 corporation , res_fuzz_match = [(' bank loans', 78), (' not later than 1 year ', 53), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), ('bank borrowings ', 45), (' loans from related party ', 43), (' current ', 43), (' utilised bank borrowings ', 39), (' obligations under finance lease ', 39), (' balance at the end of period ', 38), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' secured long-term bank loans ', 33), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2026 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2027 corporation , res_fuzz_match = [(' bank loans', 78), (' bank overdraft ', 57), (' leases ', 50), (' loans from related party ', 48), (' not later than 1 year ', 47), ('bank borrowings ', 45), (' utilised bank borrowings ', 44), (' not later than one year ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 43), (' secured long-term bank loans ', 42), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' cash overdraft ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mizuho bank fixed 5-years june 2027 corporation , res_fuzz_match = [(' bank loans', 56), ('bank borrowings ', 55), (' leases ', 50), (' bank overdraft ', 50), (' not later than one year ', 48), (' not later than 1 year ', 47), (' secured long-term bank loans ', 46), (' utilised bank borrowings ', 44), (' loans from related party ', 43), (' balance at the end of period ', 43), (' current ', 43), (' obligations under finance lease ', 39), (' lease liabilities - current ', 37), (' cash overdraft ', 36), (' lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft ', 0), (' current ', 0), (' obligations under finance lease ', 0), (' bank loans', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', ' payables ', ' accounts payable - trade ', ' ', ' Related party payables ', ' trade payables - related parties ', ' Trade payable due to related partiees']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('trade and other payables', 44), ('trade payable', 31), ('other trade payables', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('trade and other payables', 46), ('other trade payables', 45), ('trade payable', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('other trade payables', 61), ('trade and other payables', 60), ('trade payable', 60)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('trade and other payables', 16), ('trade payable', 13), ('other trade payables', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('trade and other payables', 44), ('trade payable', 31), ('other trade payables', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('trade and other payables', 46), ('other trade payables', 45), ('trade payable', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('other trade payables', 61), ('trade and other payables', 60), ('trade payable', 60)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('trade and other payables', 16), ('trade payable', 13), ('other trade payables', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued ', ' accruals']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('trade and other payables', 44)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('trade and other payables', 46)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('trade and other payables', 60)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('trade and other payables', 16)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [('trade and other payables', 44)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [('trade and other payables', 46)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [('trade and other payables', 60)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('trade and other payables', 16)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' Current tax payables ', 50), (' Trade and other payables', 50), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' Current tax payables ', 64), (' income tax payable ', 43), (' Trade and other payables', 37), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' Trade and other payables', 50), (' tax ', 33), (' provision ', 33), ('current tax liabilities ', 21), (' income tax payable ', 21), (' Current tax payables ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' income tax payable ', 62), (' Current tax payables ', 61), ('current tax liabilities ', 50), (' Trade and other payables', 48), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' Current tax payables ', 67), (' Trade and other payables', 61), (' income tax payable ', 56), ('current tax liabilities ', 50), (' provision ', 50), (' tax ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' Current tax payables ', 48), (' Trade and other payables', 45), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' Trade and other payables', 53), ('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision ', 33), (' Current tax payables ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' Current tax payables ', 33), (' Trade and other payables', 33), (' provision ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' Current tax payables ', 50), (' Trade and other payables', 50), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' Current tax payables ', 64), (' income tax payable ', 43), (' Trade and other payables', 37), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' Trade and other payables', 50), (' tax ', 33), (' provision ', 33), ('current tax liabilities ', 21), (' income tax payable ', 21), (' Current tax payables ', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' income tax payable ', 62), (' Current tax payables ', 61), ('current tax liabilities ', 50), (' Trade and other payables', 48), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' Current tax payables ', 67), (' Trade and other payables', 61), (' income tax payable ', 56), ('current tax liabilities ', 50), (' provision ', 50), (' tax ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' Current tax payables ', 48), (' Trade and other payables', 45), (' tax ', 33), (' provision ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' Trade and other payables', 53), ('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision ', 33), (' Current tax payables ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' Current tax payables ', 33), (' Trade and other payables', 33), (' provision ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' derivative liabilities ', 67), (' financial liabilities', 60), (' Contract Liabilities ', 57), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability ', 32), (' employee benefits', 29), (' trade and other payables', 21), (' Derivative financial instruments ', 20), ('provisions', 17), (' Provision ', 17), (' Deferred income', 12), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' Contract Liabilities ', 69), (' derivative liabilities ', 62), (' financial liabilities', 57), (' foreign exchange contract liability ', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), (' Derivative financial instruments ', 26), (' Deferred income', 24), ('provisions', 20), (' Provision ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' trade and other payables', 44), (' other financial liabilities', 35), (' employee benefits', 34), ('other current liabilities', 29), (' financial liabilities', 29), (' other current liabilities', 29), (' Contract Liabilities ', 28), (' foreign exchange contract liability ', 27), (' Derivative financial instruments ', 26), (' deferred revenue', 23), (' derivative liabilities ', 23), (' customer deposits', 21), ('provisions', 20), (' Provision ', 20), (' Deferred income', 16)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' foreign exchange contract liability ', 49), (' Contract Liabilities ', 49), (' trade and other payables', 46), ('other current liabilities', 39), (' other current liabilities', 39), (' financial liabilities', 35), (' other financial liabilities', 30), (' customer deposits', 30), (' Derivative financial instruments ', 28), (' derivative liabilities ', 26), (' employee benefits', 24), (' deferred revenue', 16), (' Deferred income', 16), ('provisions', 6), (' Provision ', 6)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' trade and other payables', 60), ('other current liabilities', 42), (' other current liabilities', 42), (' other financial liabilities', 42), (' derivative liabilities ', 40), (' financial liabilities', 38), (' Derivative financial instruments ', 38), (' foreign exchange contract liability ', 37), (' Contract Liabilities ', 36), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 25), (' customer deposits', 25), (' Provision ', 25), (' Deferred income', 14)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' derivative liabilities ', 70), (' financial liabilities', 64), (' Contract Liabilities ', 62), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability ', 43), (' trade and other payables', 30), (' Derivative financial instruments ', 29), (' Deferred income', 27), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12), (' Provision ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' derivative liabilities ', 37), (' foreign exchange contract liability ', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' Contract Liabilities ', 33), (' Deferred income', 31), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' Derivative financial instruments ', 26), (' customer deposits', 21), ('provisions', 19), (' Provision ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial liabilities', 35), (' other financial liabilities', 26), (' Contract Liabilities ', 22), (' Derivative financial instruments ', 22), (' foreign exchange contract liability ', 18), ('other current liabilities', 17), (' other current liabilities', 17), (' trade and other payables', 16), (' Deferred income', 14), (' deferred revenue', 13), (' derivative liabilities ', 13), (' employee benefits', 11), ('provisions', 0), (' customer deposits', 0), (' Provision ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' derivative liabilities ', 67), (' financial liabilities', 60), (' Contract Liabilities ', 57), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability ', 32), (' employee benefits', 29), (' trade and other payables', 21), (' Derivative financial instruments ', 20), ('provisions', 17), (' Provision ', 17), (' Deferred income', 12), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' Contract Liabilities ', 69), (' derivative liabilities ', 62), (' financial liabilities', 57), (' foreign exchange contract liability ', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), (' Derivative financial instruments ', 26), (' Deferred income', 24), ('provisions', 20), (' Provision ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = bank overdraft , res_fuzz_match = [(' trade and other payables', 44), (' other financial liabilities', 35), (' employee benefits', 34), ('other current liabilities', 29), (' financial liabilities', 29), (' other current liabilities', 29), (' Contract Liabilities ', 28), (' foreign exchange contract liability ', 27), (' Derivative financial instruments ', 26), (' deferred revenue', 23), (' derivative liabilities ', 23), (' customer deposits', 21), ('provisions', 20), (' Provision ', 20), (' Deferred income', 16)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = accounts payable and accruals , res_fuzz_match = [(' foreign exchange contract liability ', 49), (' Contract Liabilities ', 49), (' trade and other payables', 46), ('other current liabilities', 39), (' other current liabilities', 39), (' financial liabilities', 35), (' other financial liabilities', 30), (' customer deposits', 30), (' Derivative financial instruments ', 28), (' derivative liabilities ', 26), (' employee benefits', 24), (' deferred revenue', 16), (' Deferred income', 16), ('provisions', 6), (' Provision ', 6)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party payables , res_fuzz_match = [(' trade and other payables', 60), ('other current liabilities', 42), (' other current liabilities', 42), (' other financial liabilities', 42), (' derivative liabilities ', 40), (' financial liabilities', 38), (' Derivative financial instruments ', 38), (' foreign exchange contract liability ', 37), (' Contract Liabilities ', 36), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 25), (' customer deposits', 25), (' Provision ', 25), (' Deferred income', 14)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' derivative liabilities ', 70), (' financial liabilities', 64), (' Contract Liabilities ', 62), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability ', 43), (' trade and other payables', 30), (' Derivative financial instruments ', 29), (' Deferred income', 27), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12), (' Provision ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' derivative liabilities ', 37), (' foreign exchange contract liability ', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' Contract Liabilities ', 33), (' Deferred income', 31), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' Derivative financial instruments ', 26), (' customer deposits', 21), ('provisions', 19), (' Provision ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial liabilities', 35), (' other financial liabilities', 26), (' Contract Liabilities ', 22), (' Derivative financial instruments ', 22), (' foreign exchange contract liability ', 18), ('other current liabilities', 17), (' other current liabilities', 17), (' trade and other payables', 16), (' Deferred income', 14), (' deferred revenue', 13), (' derivative liabilities ', 13), (' employee benefits', 11), ('provisions', 0), (' customer deposits', 0), (' Provision ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_liabilities
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('long term debt', 41)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term debt', 40)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('long term debt', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('long term debt', 41)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term debt', 40)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('long term debt', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 45), (' Lease obligation', 40)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation', 70), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [(' lease liabilities ', 73), ('interest bearing loans and borrowings ', 44), (' Lease obligation', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('interest bearing loans and borrowings ', 67), (' loans and borrowings', 67), (' lease liabilities ', 33), (' Lease obligation', 33), (' borrowings ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 170612.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['14', '10'], 'line_item_value': [145000.0, 25612.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 45), (' Lease obligation', 40)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation', 70), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [(' lease liabilities ', 73), ('interest bearing loans and borrowings ', 44), (' Lease obligation', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('interest bearing loans and borrowings ', 67), (' loans and borrowings', 67), (' lease liabilities ', 33), (' Lease obligation', 33), (' borrowings ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 196235.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['14', '10'], 'line_item_value': [170000.0, 26235.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = portion mufg bank money june* corporation , res_fuzz_match = [(' bank loan ', 78), (' Borrowings ', 50), (' non current ', 45), (' not later than 5 years ', 37), (' secured finance debt ', 35), (' later than 1 year ', 33), (' less : unexpired interest', 33), (' lease liabilities - non-current ', 32), (' Hire purchase liabilities ', 26), ('leases ', 25), (' lease liabilities ', 18), (' lease liability ', 18), (' Lease liabilities ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2-years june 2022 corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2- years june 2023 corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") mitsui trust bank ltd short term loan mitsui trust bank ltd short term loan june* nan , res_fuzz_match = [(' bank loan ', 67), (' not later than 5 years ', 58), (' later than 1 year ', 53), ('leases ', 50), (' secured finance debt ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' non current ', 45), (' Lease liabilities ', 45), (' less : unexpired interest', 43), (' lease liabilities - non-current ', 37), (' Hire purchase liabilities ', 37), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") ("smtb") fixed 3-1 years june 2023 sumitomo corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' less : unexpired interest', 43), (' lease liabilities - non-current ', 37), (' not later than 5 years ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") total nan nan nan , res_fuzz_match = [(' bank loan ', 56), ('leases ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' lease liabilities - non-current ', 37), (' lease liabilities ', 36), (' lease liability ', 36), (' non current ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 29), (' less : unexpired interest', 24), (' Hire purchase liabilities ', 21), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 2-1 years june 2023 sum corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' less : unexpired interest', 38), (' lease liabilities - non-current ', 37), (' non current ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2024 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2025 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mitsui trust bank ltd fixed 5-years mitsui trust bank ltd fixed 5-years july 2024 corporation , res_fuzz_match = [(' bank loan ', 67), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' secured finance debt ', 47), (' lease liabilities - non-current ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' less : unexpired interest', 43), (' Hire purchase liabilities ', 37), (' non current ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating july 2024 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' lease liabilities - non-current ', 49), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' not later than 5 years ', 42), (' later than 1 year ', 40), (' non current ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 32), (' less : unexpired interest', 29)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3-years june 2023 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3- years june 2023 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 4 years june 2025 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2026 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2027 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mizuho bank fixed 5-years june 2027 corporation , res_fuzz_match = [(' bank loan ', 56), (' later than 1 year ', 53), ('leases ', 50), (' Borrowings ', 50), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = portion mufg bank money june* corporation , res_fuzz_match = [(' bank loan ', 78), (' Borrowings ', 50), (' non current ', 45), (' not later than 5 years ', 37), (' secured finance debt ', 35), (' later than 1 year ', 33), (' less : unexpired interest', 33), (' lease liabilities - non-current ', 32), (' Hire purchase liabilities ', 26), ('leases ', 25), (' lease liabilities ', 18), (' lease liability ', 18), (' Lease liabilities ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2-years june 2022 corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") nan fixed 2- years june 2023 corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") mitsui trust bank ltd short term loan mitsui trust bank ltd short term loan june* nan , res_fuzz_match = [(' bank loan ', 67), (' not later than 5 years ', 58), (' later than 1 year ', 53), ('leases ', 50), (' secured finance debt ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' non current ', 45), (' Lease liabilities ', 45), (' less : unexpired interest', 43), (' lease liabilities - non-current ', 37), (' Hire purchase liabilities ', 37), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") ("smtb") fixed 3-1 years june 2023 sumitomo corporation , res_fuzz_match = [('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' non current ', 45), (' less : unexpired interest', 43), (' lease liabilities - non-current ', 37), (' not later than 5 years ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = ("mufg") total nan nan nan , res_fuzz_match = [(' bank loan ', 56), ('leases ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' lease liabilities - non-current ', 37), (' lease liabilities ', 36), (' lease liability ', 36), (' non current ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 29), (' less : unexpired interest', 24), (' Hire purchase liabilities ', 21), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 2-1 years june 2023 sum corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' less : unexpired interest', 38), (' lease liabilities - non-current ', 37), (' non current ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2024 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2025 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mitsui trust bank ltd fixed 5-years mitsui trust bank ltd fixed 5-years july 2024 corporation , res_fuzz_match = [(' bank loan ', 67), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' secured finance debt ', 47), (' lease liabilities - non-current ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' less : unexpired interest', 43), (' Hire purchase liabilities ', 37), (' non current ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating july 2024 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' lease liabilities - non-current ', 49), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' not later than 5 years ', 42), (' later than 1 year ', 40), (' non current ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 32), (' less : unexpired interest', 29)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3-years june 2023 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 3- years june 2023 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan fixed 4 years june 2025 corporation , res_fuzz_match = [(' bank loan ', 78), (' later than 1 year ', 53), (' not later than 5 years ', 53), ('leases ', 50), (' Borrowings ', 50), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2026 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank nan floating june 2027 corporation , res_fuzz_match = [(' bank loan ', 78), ('leases ', 50), (' Borrowings ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 42), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = mufg bank mizuho bank fixed 5-years june 2027 corporation , res_fuzz_match = [(' bank loan ', 56), (' later than 1 year ', 53), ('leases ', 50), (' Borrowings ', 50), (' not later than 5 years ', 47), (' non current ', 45), (' lease liabilities - non-current ', 37), (' secured finance debt ', 35), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' lease liabilities - non-current ', 50), (' non current ', 50), (' not later than 5 years ', 50), (' Lease liabilities ', 50), (' less : unexpired interest', 50), (' later than 1 year ', 40), (' Hire purchase liabilities ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('leases ', 50), (' secured finance debt ', 50), (' not later than 5 years ', 50), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' non current ', 40), (' Lease liabilities ', 40), (' less : unexpired interest', 40), (' bank loan ', 33), (' later than 1 year ', 30), (' Hire purchase liabilities ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loan ', 56), (' lease liabilities ', 55), (' lease liability ', 55), (' Lease liabilities ', 55), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 41), (' Hire purchase liabilities ', 41), (' lease liabilities - non-current ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 35), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loan ', 56), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 44), (' lease liabilities ', 36), (' lease liability ', 36), (' lease liabilities - non-current ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 29), (' less : unexpired interest', 29), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = building , res_fuzz_match = [(' lease liabilities ', 60), (' lease liability ', 60), (' lease liabilities - non-current ', 60), (' Lease liabilities ', 60), (' Hire purchase liabilities ', 60), ('leases ', 25), (' secured finance debt ', 20), (' bank loan ', 20), (' non current ', 20), (' not later than 5 years ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20), (' later than 1 year ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' lease liabilities - non-current ', 50), (' non current ', 50), (' not later than 5 years ', 50), (' Lease liabilities ', 50), (' less : unexpired interest', 50), (' later than 1 year ', 40), (' Hire purchase liabilities ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('leases ', 50), (' secured finance debt ', 50), (' not later than 5 years ', 50), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' non current ', 40), (' Lease liabilities ', 40), (' less : unexpired interest', 40), (' bank loan ', 33), (' later than 1 year ', 30), (' Hire purchase liabilities ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loan ', 56), (' lease liabilities ', 55), (' lease liability ', 55), (' Lease liabilities ', 55), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 41), (' Hire purchase liabilities ', 41), (' lease liabilities - non-current ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 35), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loan ', 56), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 44), (' lease liabilities ', 36), (' lease liability ', 36), (' lease liabilities - non-current ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 29), (' less : unexpired interest', 29), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = forest land , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' Lease liabilities ', 50), (' secured finance debt ', 45), (' lease liabilities - non-current ', 45), (' not later than 5 years ', 45), (' Hire purchase liabilities ', 45), (' bank loan ', 44), (' non current ', 36), (' later than 1 year ', 36), (' less : unexpired interest', 36), (' Borrowings ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 at 1 april 2022 , res_fuzz_match = [('leases ', 50), (' lease liabilities ', 50), (' lease liability ', 50), (' lease liabilities - non-current ', 50), (' non current ', 50), (' not later than 5 years ', 50), (' Lease liabilities ', 50), (' less : unexpired interest', 50), (' later than 1 year ', 40), (' Hire purchase liabilities ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('leases ', 50), (' secured finance debt ', 50), (' not later than 5 years ', 50), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' non current ', 40), (' Lease liabilities ', 40), (' less : unexpired interest', 40), (' bank loan ', 33), (' later than 1 year ', 30), (' Hire purchase liabilities ', 30), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2023 as at 31 march 2023 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none as at 31 march 2022 , res_fuzz_match = [(' non current ', 50), (' not later than 5 years ', 50), (' Hire purchase liabilities ', 50), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' bank loan ', 33), (' secured finance debt ', 30), (' lease liabilities ', 30), (' lease liability ', 30), (' Lease liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2021 , res_fuzz_match = [(' bank loan ', 56), (' lease liabilities ', 55), (' lease liability ', 55), (' Lease liabilities ', 55), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 41), (' Hire purchase liabilities ', 41), (' lease liabilities - non-current ', 36), (' secured finance debt ', 35), (' less : unexpired interest', 35), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none depreciation for the year , res_fuzz_match = [(' later than 1 year ', 62), (' non current ', 55), (' not later than 5 years ', 54), ('leases ', 50), (' less : unexpired interest', 48), (' Hire purchase liabilities ', 37), (' secured finance debt ', 35), (' bank loan ', 33), (' Borrowings ', 33), (' lease liabilities - non-current ', 32), (' lease liabilities ', 27), (' lease liability ', 27), (' Lease liabilities ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' bank loan ', 44), (' secured finance debt ', 42), (' lease liabilities ', 40), (' lease liability ', 40), (' non current ', 40), (' later than 1 year ', 40), (' not later than 5 years ', 40), (' Lease liabilities ', 40), (' lease liabilities - non-current ', 30), (' Hire purchase liabilities ', 30), (' less : unexpired interest', 30), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none 2022 balance as at 31 march 2022 , res_fuzz_match = [(' bank loan ', 56), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 44), (' lease liabilities ', 36), (' lease liability ', 36), (' lease liabilities - non-current ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' Hire purchase liabilities ', 29), (' less : unexpired interest', 29), ('leases ', 25), (' Borrowings ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' not later than 5 years ', 60), (' bank loan ', 40), (' lease liabilities ', 40), (' lease liability ', 40), (' lease liabilities - non-current ', 40), (' later than 1 year ', 40), (' Lease liabilities ', 40), (' Hire purchase liabilities ', 40), ('leases ', 25), (' secured finance debt ', 20), (' non current ', 20), (' Borrowings ', 20), (' less : unexpired interest', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('interest bearing loans and borrowings', 68), ('(bond)', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('(bond)', 29), ('interest bearing loans and borrowings', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('interest bearing loans and borrowings', 68), ('(bond)', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('(bond)', 29), ('interest bearing loans and borrowings', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' deferred tax liabilities', 27), ('deferred taxes ', 22)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('deferred taxes ', 100), (' deferred tax liabilities', 100)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 49058.0, 'line_item_label': ['Deferred tax liability'], 'note_numbers': ['5'], 'line_item_value': [49058.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' deferred tax liabilities', 27), ('deferred taxes ', 22)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('deferred taxes ', 100), (' deferred tax liabilities', 100)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 37893.0, 'line_item_label': ['Deferred tax liability'], 'note_numbers': ['5'], 'line_item_value': [37893.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none forest crop , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 62), ('deferred tax liabilities ', 54)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none other net , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 43), ('deferred tax liabilities ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none net deferred tax liability , res_fuzz_match = [('deferred tax liabilities ', 100), (' total deferred tax (assets) / liabilities', 68)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none forest crop , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 62), ('deferred tax liabilities ', 54)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none other net , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 43), ('deferred tax liabilities ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none net deferred tax liability , res_fuzz_match = [('deferred tax liabilities ', 100), (' total deferred tax (assets) / liabilities', 68)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7], 'score': [100, 100], 'value': [-37893.0, -49058.0], 'label': ['None Net deferred tax liability', 'None Net deferred tax liability'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 10), (' Provisions ', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables ', 49), (' other non-current liabilities ', 40), (' financial liabilities ', 34), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' Deferred income', 31), (' deferred revenue ', 30), (' employee benefits ', 27), (' provisions ', 19), (' Provisions ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' Deferred income', 27), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue ', 17), (' provisions ', 12), (' Provisions ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [(' other financial liabilities ', 56), (' trade and other payables ', 53), (' financial liabilities ', 53), (' Deferred income', 52), (' other non-current liabilities ', 44), (' deferred revenue ', 43), ('other long term liabilities ', 42), (' employee benefits ', 26), (' provision for associate funding ', 21), (' provisions ', 18), (' Provisions ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial liabilities ', 35), (' other financial liabilities ', 26), (' other non-current liabilities ', 17), ('other long term liabilities ', 16), (' trade and other payables ', 16), (' provision for associate funding ', 16), (' Deferred income', 14), (' deferred revenue ', 13), (' employee benefits ', 11), (' provisions ', 0), (' Provisions ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 10), (' Provisions ', 10)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables ', 49), (' other non-current liabilities ', 40), (' financial liabilities ', 34), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' Deferred income', 31), (' deferred revenue ', 30), (' employee benefits ', 27), (' provisions ', 19), (' Provisions ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' Deferred income', 27), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue ', 17), (' provisions ', 12), (' Provisions ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [(' other financial liabilities ', 56), (' trade and other payables ', 53), (' financial liabilities ', 53), (' Deferred income', 52), (' other non-current liabilities ', 44), (' deferred revenue ', 43), ('other long term liabilities ', 42), (' employee benefits ', 26), (' provision for associate funding ', 21), (' provisions ', 18), (' Provisions ', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' financial liabilities ', 35), (' other financial liabilities ', 26), (' other non-current liabilities ', 17), ('other long term liabilities ', 16), (' trade and other payables ', 16), (' provision for associate funding ', 16), (' Deferred income', 14), (' deferred revenue ', 13), (' employee benefits ', 11), (' provisions ', 0), (' Provisions ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_liabilities
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 137203.0, 'line_item_label': ['Issued capital'], 'note_numbers': [nan], 'line_item_value': [137203.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 137203.0, 'line_item_label': ['Issued capital'], 'note_numbers': [nan], 'line_item_value': [137203.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments ', ' movements in retained earnings']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 91604.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [91604.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 57731.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [57731.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity ', ' hedge reserve']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' property ', 40), (' investment property ', 37), (' oil and gas properties ', 32), ('plant property equipment ', 31), (' property plant equipment ', 31), (' Exploration and evaluation assets', 24), (' plant and equipment ', 22)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' Exploration and evaluation assets', 43), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' oil and gas properties ', 29), (' plant and equipment ', 27), (' property ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' property ', 53), (' investment property ', 38), (' oil and gas properties ', 33), ('plant property equipment ', 32), (' property plant equipment ', 32), (' plant and equipment ', 23), (' Exploration and evaluation assets', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' plant and equipment ', 33), (' oil and gas properties ', 18), ('plant property equipment ', 17), (' property plant equipment ', 17), (' Exploration and evaluation assets', 16), (' investment property ', 11), (' property ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 33179.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [33179.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = other receivables , res_fuzz_match = [(' property ', 40), (' investment property ', 37), (' oil and gas properties ', 32), ('plant property equipment ', 31), (' property plant equipment ', 31), (' Exploration and evaluation assets', 24), (' plant and equipment ', 22)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = right of use assets , res_fuzz_match = [(' Exploration and evaluation assets', 43), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' oil and gas properties ', 29), (' plant and equipment ', 27), (' property ', 26)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = forest crop , res_fuzz_match = [(' property ', 53), (' investment property ', 38), (' oil and gas properties ', 33), ('plant property equipment ', 32), (' property plant equipment ', 32), (' plant and equipment ', 23), (' Exploration and evaluation assets', 18)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' plant and equipment ', 33), (' oil and gas properties ', 18), ('plant property equipment ', 17), (' property plant equipment ', 17), (' Exploration and evaluation assets', 16), (' investment property ', 11), (' property ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 37204.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['9'], 'line_item_value': [37204.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', ''] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [(' gross ', 50), (' investment property ', 50), (' Freehold land and buildings ', 50), (' Plant and equipment ', 50), (' Mine infrastructure ', 50), (' Assets under construction ', 50), (' Other assets in progress ', 50), (' land and improvement ', 50), (' Building & mine infrastructure ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Freehold land ', 50), (' Leasehold buildings ', 50), ('cost ', 25), (' Asset Retirement Obligation ', 25), (' Construction ', 25), (' Capitalised pre stripping costs ', 25), (' Stripping WIP ', 25), (' Buildings ', 25), (' Subsea ', 25), (' Marine  Development properties ', 25), (' Pipeline Asset ', 25), (' Facilities ', 25), (' Workshop tooling ', 25), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [(' Assets under construction ', 60), (' Other assets in progress ', 60), ('cost ', 50), (' investment property ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Building & mine infrastructure ', 40), (' Mining properties ', 40), (' under construction ', 40), (' Marine  Development properties ', 40), (' Workshop tooling ', 40), (' gross ', 20), (' Freehold land and buildings ', 20), (' Plant and equipment ', 20), (' Freehold land ', 20), (' Pipeline Asset ', 20), (' Leasehold buildings ', 20), (' Stripping WIP ', 0), (' Buildings ', 0), (' Subsea ', 0), (' Facilities ', 0), (' Fishing vessels & equipment ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('cost ', 50), (' investment property ', 50), (' Construction ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Mining properties ', 50), (' under construction ', 50), (' Marine  Development properties ', 50), (' Workshop tooling ', 50), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' gross ', 20), (' Buildings ', 20), (' Freehold land and buildings ', 17), (' Plant and equipment ', 17), (' Asset Retirement Obligation ', 17), (' Other assets in progress ', 17), (' Stripping WIP ', 17), (' Freehold land ', 17), (' Subsea ', 17), (' Pipeline Asset ', 17), (' Fishing vessels & equipment ', 17), (' Leasehold buildings ', 17), (' Facilities ', 0), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' under construction ', 53), (' Assets under construction ', 52), (' Capitalised pre stripping costs ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Other assets in progress ', 45), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Freehold land and buildings ', 30), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Buildings ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [(' Construction ', 56), ('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Facilities ', 40), (' Assets under construction ', 39), (' Building & mine infrastructure ', 39), (' Marine  Development properties ', 39), (' investment property ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Freehold land and buildings ', 28), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), (' Fishing vessels & equipment ', 18), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' investment property ', 44), (' Construction ', 44), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 43), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 43), (' Other assets in progress ', 43), (' gross ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' under construction ', 36), (' Marine  Development properties ', 36), (' Leasehold buildings ', 36), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Building & mine infrastructure ', 29), (' Pipeline Asset ', 23), (' Fishing vessels & equipment ', 21), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('cost ', 100), (' Freehold land and buildings ', 57), (' Plant and equipment ', 50), (' land and improvement ', 50), (' Construction ', 44), (' Assets under construction ', 43), (' gross ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' under construction ', 36), (' Stripping WIP ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' investment property ', 30), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Other assets in progress ', 29), (' Building & mine infrastructure ', 29), (' Marine  Development properties ', 29), (' Leasehold buildings ', 29), (' Mining properties ', 23), (' Fishing vessels & equipment ', 21), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('cost ', 100), (' land and improvement ', 55), (' Plant and equipment ', 53), (' Assets under construction ', 53), (' Freehold land and buildings ', 47), (' Capitalised pre stripping costs ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' gross ', 40), (' Other assets in progress ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 33), (' Fishing vessels & equipment ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Mine infrastructure ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('cost ', 100), (' Other assets in progress ', 50), (' Assets under construction ', 48), (' under construction ', 47), (' Fishing vessels & equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Freehold land and buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' investment property ', 40), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Fishing vessels & equipment ', 35), (' Building & mine infrastructure ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 43), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Asset Retirement Obligation ', 47), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' investment property ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Construction ', 33), (' Leasehold buildings ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [(' Facilities ', 60), ('cost ', 50), (' Plant and equipment ', 47), (' land and improvement ', 47), (' Freehold land and buildings ', 44), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' investment property ', 40), (' Buildings ', 40), (' Mining properties ', 38), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 34), (' Leasehold buildings ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Pipeline Asset ', 31), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Asset Retirement Obligation ', 41), (' Plant and equipment ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Building & mine infrastructure ', 38), (' Freehold land ', 38), (' Freehold land and buildings ', 36), (' Marine  Development properties ', 36), (' Construction ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), (' Fishing vessels & equipment ', 24), (' Mining properties ', 23), (' gross ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35, 42, 42, 43, 43, 44, 44, 45, 45, 46, 47, 48, 49, 50, 51, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 77, 84, 85, 86, 87, 95, 96, 97, 98, 105, 106, 107, 108, 116, 117, 118, 119], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [13183.0, 13183.0, 567.0, 567.0, 0.0, 0.0, 13750.0, 13750.0, 152.0, 38.0, 0.0, 190.0, 0.0, 13560.0, 0.0, 13019.0, 13019.0, 164.0, 164.0, 0.0, 0.0, 13183.0, 13183.0, 119.0, 33.0, 0.0, 152.0, 12900.0, 13031.0, 24523.0, 4174.0, 0.0, 28697.0, 0.0, 0.0, 0.0, 24523.0, 789.0, 789.0, 203.0, 203.0, -52.0, -52.0, 940.0, 940.0, 383.0, 89.0, -44.0, 428.0, 406.0, 512.0, 0.0, 725.0, 725.0, 80.0, 80.0, -16.0, -16.0, 789.0, 789.0, 333.0, 59.0, -9.0, 383.0, 392.0, 406.0, 1306.0, 678.0, -152.0, 1832.0, 1205.0, 304.0, -203.0, 1306.0, 599.0, 72.0, -59.0, 612.0, 423.0, 222.0, -46.0, 599.0, 40400.0, 5694.0, -263.0, 45831.0, 35273.0, 5392.0, -265.0, 40400.0], 'label': ['Cost and at 1 April 2022', 'Land and buildings', 'Cost and Additions', 'Land and buildings', 'Cost and Disposals', 'Land and buildings', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Cost and at 1 April 2021', 'Land and buildings', 'Cost and Additions', 'Land and buildings', 'Cost and Disposals', 'Land and buildings', 'Cost and cost less disposals at 31 March', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Land and buildings', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Plant and Equipment', 'Cost and Additions', 'Plant and Equipment', 'Cost and Disposals', 'Plant and Equipment', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Cost and at 1 April 2021', 'Plant and Equipment', 'Cost and Additions', 'Plant and Equipment', 'Cost and Disposals', 'Plant and Equipment', 'Cost and cost less disposals at 31 March', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March', 'Cost and at 1 April 2022', 'Cost and Additions', 'Cost and Disposals', 'Cost and Historic cost les SS disposals at 31 March 2023', 'Cost and at 1 April 2021', 'Cost and Additions', 'Cost and Disposals', 'Cost and cost less disposals at 31 March'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = roads , res_fuzz_match = [('depreciatio', 25), ('accumulated depreciation', 25), ('net value', 25), ('net book value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = motor , res_fuzz_match = [('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = computer , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 33), ('net value', 17), ('net book value', 17)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and historic cost les ss disposals at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 40), ('net book value', 38), ('depreciatio', 36), ('net value', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at april 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses accumulated depreciation and impairment at 31 march 2023 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2023 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts as at 31 march 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('depreciatio', 36), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and at 1 april 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 43), ('net book value', 38), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and disposals , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27), ('net book value', 23)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = cost and cost less disposals at 31 march , res_fuzz_match = [('net value', 38), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses at 1 april 2021 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 40), ('net value', 38), ('net book value', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses disposals , res_fuzz_match = [('depreciatio', 73), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = depreciation and impairment losses depreciation and impairment at 31 march 2022 , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance at 1 april 2021 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('accumulated depreciation', 40), ('depreciatio', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = carrying amounts balance as at 31 march 2022 , res_fuzz_match = [('net value', 62), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 28, 49, 70, 91, 112], 'score': [100, 100, 100, 100, 100, 100], 'value': [190.0, 6586.0, 428.0, 958.0, 465.0, 8627.0], 'label': ['Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023', 'Depreciation and impairment losses Accumulated depreciation and impairment at 31 March 2023'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 12:59:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 50), (' trade receivables ', 42), ('account receivables ', 36), (' government subsidies receivable ', 33), (' receivable ', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 50), (' trade receivables ', 42), ('account receivables ', 36), (' government subsidies receivable ', 33), (' receivable ', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 86), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 67), ('account receivables ', 64), (' trade and other receivables', 61), (' government subsidies receivable ', 56), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' trade and other receivables', 67), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' unbilled ', 33), (' receivable ', 0), (' billed ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': 21364.0, 'line_item_label': ['Trade, prepayments and other receivables', 'Related party receivables'], 'note_numbers': ['7', '13'], 'line_item_value': [20887.0, 477.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 50), (' trade receivables ', 42), ('account receivables ', 36), (' government subsidies receivable ', 33), (' receivable ', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents short term deposits , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 50), (' trade receivables ', 42), ('account receivables ', 36), (' government subsidies receivable ', 33), (' receivable ', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = trade, prepayments and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 86), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = related party receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 67), ('account receivables ', 64), (' trade and other receivables', 61), (' government subsidies receivable ', 56), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' trade and other receivables', 67), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' unbilled ', 33), (' receivable ', 0), (' billed ', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': 9779.0, 'line_item_label': ['Trade, prepayments and other receivables', 'Related party receivables'], 'note_numbers': ['7', '13'], 'line_item_value': [8904.0, 875.0]}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [('trade receivables ', 100), (' net trade debtors ', 62), (' trade debtors ', 58), (' related party receivables ', 56), (' other debtors ', 50), (' share of joint venture receivables ', 48), (' receivables from related parties ', 43), ('charges paid in advance ', 41), (' trade debtors from contracts with customers ', 41), (' allowance for expected credit loss ', 37), (' Less allowance for impairment', 33), (' provision for impairment losses ', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' net trade debtors ', 45), (' receivables from related parties ', 45), (' allowance for expected credit loss ', 45), ('trade receivables ', 36), (' related party receivables ', 36), (' other debtors ', 36), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers ', 36), (' Less allowance for impairment', 36), (' trade debtors ', 27), ('charges paid in advance ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' net trade debtors ', 62), (' related party receivables ', 61), (' share of joint venture receivables ', 60), (' other debtors ', 58), (' Less allowance for impairment', 43), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' trade debtors from contracts with customers ', 39), (' allowance for expected credit loss ', 36), (' provision for impairment losses ', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none trade receivables and other , res_fuzz_match = [('trade receivables ', 100), (' net trade debtors ', 62), (' trade debtors ', 58), (' related party receivables ', 56), (' other debtors ', 50), (' share of joint venture receivables ', 48), (' receivables from related parties ', 43), ('charges paid in advance ', 41), (' trade debtors from contracts with customers ', 41), (' allowance for expected credit loss ', 37), (' Less allowance for impairment', 33), (' provision for impairment losses ', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' net trade debtors ', 45), (' receivables from related parties ', 45), (' allowance for expected credit loss ', 45), ('trade receivables ', 36), (' related party receivables ', 36), (' other debtors ', 36), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers ', 36), (' Less allowance for impairment', 36), (' trade debtors ', 27), ('charges paid in advance ', 27)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' net trade debtors ', 62), (' related party receivables ', 61), (' share of joint venture receivables ', 60), (' other debtors ', 58), (' Less allowance for impairment', 43), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' trade debtors from contracts with customers ', 39), (' allowance for expected credit loss ', 36), (' provision for impairment losses ', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [8116.0, 20186.0], 'label': ['None Trade receivables and other', 'None Trade receivables and other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:03+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none sale of product corporation , res_fuzz_match = [(' net trade debtors ', 50), (' Less allowance for impairment', 48), (' related party receivables ', 44), (' allowance for expected credit loss ', 44), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), (' receivables from related parties ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35), (' share of joint venture receivables ', 34), (' trade debtors ', 33)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none management fees and recharges corporation , res_fuzz_match = [('trade receivables ', 50), (' net trade debtors ', 44), (' receivables from related parties ', 43), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' related party receivables ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers ', 33), (' provision for impairment losses ', 32)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none marketing and sales support fees corporation (shanghai) limited , res_fuzz_match = [(' other debtors ', 50), (' Less allowance for impairment', 48), (' allowance for expected credit loss ', 46), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' share of joint venture receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' trade debtors from contracts with customers ', 39)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none management fees and recharges australia pty limited , res_fuzz_match = [('charges paid in advance ', 53), (' receivables from related parties ', 52), ('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 44), (' trade debtors ', 42), (' other debtors ', 42), (' Less allowance for impairment', 38), (' trade debtors from contracts with customers ', 37), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' net trade debtors ', 43), (' trade debtors from contracts with customers ', 43), (' other debtors ', 42), (' share of joint venture receivables ', 36), ('charges paid in advance ', 36), (' provision for impairment losses ', 36), (' receivables from related parties ', 36), (' Less allowance for impairment', 36), (' trade debtors ', 33), (' related party receivables ', 29), (' allowance for expected credit loss ', 29), ('trade receivables ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = party due from parties corporation , res_fuzz_match = [(' receivables from related parties ', 57), (' related party receivables ', 50), (' provision for impairment losses ', 50), (' trade debtors from contracts with customers ', 48), (' Less allowance for impairment', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 41), (' net trade debtors ', 38), (' share of joint venture receivables ', 36)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = party due from related parties juice new zealand limited , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 72), (' trade debtors from contracts with customers ', 45), (' Less allowance for impairment', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' net trade debtors ', 38)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = party total nan , res_fuzz_match = [(' share of joint venture receivables ', 47), ('charges paid in advance ', 47), (' provision for impairment losses ', 47), (' related party receivables ', 44), (' trade debtors from contracts with customers ', 40), (' trade debtors ', 33), (' other debtors ', 33), (' net trade debtors ', 33), (' receivables from related parties ', 33), (' allowance for expected credit loss ', 33), (' Less allowance for impairment', 33), ('trade receivables ', 25)]
2023-08-28 12:59:03+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due related parties corporation , res_fuzz_match = [(' related party receivables ', 72), (' receivables from related parties ', 65), ('trade receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 45), (' net trade debtors ', 44), (' trade debtors from contracts with customers ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due to related parties sumit itomo australia ptylimited , res_fuzz_match = [(' related party receivables ', 72), (' receivables from related parties ', 65), ('trade receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 45), (' trade debtors from contracts with customers ', 45), (' net trade debtors ', 44), (' other debtors ', 42), (' allowance for expected credit loss ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party total nan , res_fuzz_match = [(' share of joint venture receivables ', 47), ('charges paid in advance ', 47), (' provision for impairment losses ', 47), (' related party receivables ', 44), (' trade debtors from contracts with customers ', 40), (' trade debtors ', 33), (' other debtors ', 33), (' net trade debtors ', 33), (' receivables from related parties ', 33), (' allowance for expected credit loss ', 33), (' Less allowance for impairment', 33), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax receipt for sharing tax losses juice new limited march 2021 , res_fuzz_match = [('trade receivables ', 67), (' provision for impairment losses ', 59), (' receivables from related parties ', 57), (' related party receivables ', 56), (' trade debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 46), (' share of joint venture receivables ', 44), (' Less allowance for impairment', 43), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax receipt for sharing tax losses juice new limited march 2022 , res_fuzz_match = [('trade receivables ', 67), (' provision for impairment losses ', 59), (' receivables from related parties ', 57), (' related party receivables ', 56), (' trade debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 46), (' share of joint venture receivables ', 44), (' Less allowance for impairment', 43), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax total nan , res_fuzz_match = [(' net trade debtors ', 44), (' trade debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 37), (' provision for impairment losses ', 37), (' trade debtors from contracts with customers ', 37), (' related party receivables ', 33), (' other debtors ', 33), (' receivables from related parties ', 32), (' allowance for expected credit loss ', 32), (' Less allowance for impairment', 32), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none sale of product corporation , res_fuzz_match = [(' net trade debtors ', 50), (' Less allowance for impairment', 48), (' related party receivables ', 44), (' allowance for expected credit loss ', 44), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), (' receivables from related parties ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35), (' share of joint venture receivables ', 34), (' trade debtors ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none management fees and recharges corporation , res_fuzz_match = [('trade receivables ', 50), (' net trade debtors ', 44), (' receivables from related parties ', 43), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' related party receivables ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers ', 33), (' provision for impairment losses ', 32)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none marketing and sales support fees corporation (shanghai) limited , res_fuzz_match = [(' other debtors ', 50), (' Less allowance for impairment', 48), (' allowance for expected credit loss ', 46), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' share of joint venture receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' trade debtors from contracts with customers ', 39)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none management fees and recharges australia pty limited , res_fuzz_match = [('charges paid in advance ', 53), (' receivables from related parties ', 52), ('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 44), (' trade debtors ', 42), (' other debtors ', 42), (' Less allowance for impairment', 38), (' trade debtors from contracts with customers ', 37), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' net trade debtors ', 43), (' trade debtors from contracts with customers ', 43), (' other debtors ', 42), (' share of joint venture receivables ', 36), ('charges paid in advance ', 36), (' provision for impairment losses ', 36), (' receivables from related parties ', 36), (' Less allowance for impairment', 36), (' trade debtors ', 33), (' related party receivables ', 29), (' allowance for expected credit loss ', 29), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due from parties corporation , res_fuzz_match = [(' receivables from related parties ', 57), (' related party receivables ', 50), (' provision for impairment losses ', 50), (' trade debtors from contracts with customers ', 48), (' Less allowance for impairment', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 41), (' net trade debtors ', 38), (' share of joint venture receivables ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due from related parties juice new zealand limited , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 72), (' trade debtors from contracts with customers ', 45), (' Less allowance for impairment', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' net trade debtors ', 38)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party total nan , res_fuzz_match = [(' share of joint venture receivables ', 47), ('charges paid in advance ', 47), (' provision for impairment losses ', 47), (' related party receivables ', 44), (' trade debtors from contracts with customers ', 40), (' trade debtors ', 33), (' other debtors ', 33), (' net trade debtors ', 33), (' receivables from related parties ', 33), (' allowance for expected credit loss ', 33), (' Less allowance for impairment', 33), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due related parties corporation , res_fuzz_match = [(' related party receivables ', 72), (' receivables from related parties ', 65), ('trade receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 45), (' net trade debtors ', 44), (' trade debtors from contracts with customers ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party due to related parties sumit itomo australia ptylimited , res_fuzz_match = [(' related party receivables ', 72), (' receivables from related parties ', 65), ('trade receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 45), (' trade debtors from contracts with customers ', 45), (' net trade debtors ', 44), (' other debtors ', 42), (' allowance for expected credit loss ', 39), (' Less allowance for impairment', 38), (' share of joint venture receivables ', 36), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party total nan , res_fuzz_match = [(' share of joint venture receivables ', 47), ('charges paid in advance ', 47), (' provision for impairment losses ', 47), (' related party receivables ', 44), (' trade debtors from contracts with customers ', 40), (' trade debtors ', 33), (' other debtors ', 33), (' net trade debtors ', 33), (' receivables from related parties ', 33), (' allowance for expected credit loss ', 33), (' Less allowance for impairment', 33), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax receipt for sharing tax losses juice new limited march 2021 , res_fuzz_match = [('trade receivables ', 67), (' provision for impairment losses ', 59), (' receivables from related parties ', 57), (' related party receivables ', 56), (' trade debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 46), (' share of joint venture receivables ', 44), (' Less allowance for impairment', 43), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax receipt for sharing tax losses juice new limited march 2022 , res_fuzz_match = [('trade receivables ', 67), (' provision for impairment losses ', 59), (' receivables from related parties ', 57), (' related party receivables ', 56), (' trade debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 46), (' share of joint venture receivables ', 44), (' Less allowance for impairment', 43), (' other debtors ', 42), (' trade debtors from contracts with customers ', 42), ('charges paid in advance ', 35)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = party tax total nan , res_fuzz_match = [(' net trade debtors ', 44), (' trade debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 37), (' provision for impairment losses ', 37), (' trade debtors from contracts with customers ', 37), (' related party receivables ', 33), (' other debtors ', 33), (' receivables from related parties ', 32), (' allowance for expected credit loss ', 32), (' Less allowance for impairment', 32), ('trade receivables ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Sale of coal ', 43), (' sale of products ', 38), (' net sales ', 36), (' from trading business ', 34), (' revenue from continuing activities ', 31), (' revenue from contracts with customers ', 30), ('revenue from operations ', 27), (' Revenue from rendering of services', 26), (' transmission and distribution business ', 24), (' Sales revenue ', 24), (' Rendering of services ', 22), (' Revenue ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' revenue from continuing activities ', 56), (' revenue from contracts with customers ', 53), (' from trading business ', 50), (' transmission and distribution business ', 45), ('revenue from operations ', 44), (' Revenue from rendering of services', 36), (' sale of products ', 32), (' Rendering of services ', 32), (' net sales ', 30), (' Sale of coal ', 29), (' Sales revenue ', 28), (' Revenue ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' Rendering of services ', 32), (' net sales ', 29), ('revenue from operations ', 27), (' Revenue from rendering of services', 26), (' sale of products ', 22), (' revenue from continuing activities ', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities ', 44), (' Revenue from rendering of services', 39), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' Rendering of services ', 28), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' revenue from continuing activities ', 40), (' revenue from contracts with customers ', 38), (' Revenue from rendering of services', 36), (' transmission and distribution business ', 33), ('revenue from operations ', 32), (' Rendering of services ', 26), (' from trading business ', 25), (' sale of products ', 21), (' net sales ', 19), (' Sale of coal ', 19), (' Sales revenue ', 19), (' Revenue ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 40), (' Revenue from rendering of services', 35), ('revenue from operations ', 34), (' transmission and distribution business ', 32), (' sale of products ', 27), (' from trading business ', 26), (' Sale of coal ', 25), (' Sales revenue ', 25), (' Rendering of services ', 24), (' net sales ', 23), (' Revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 40), (' Revenue from rendering of services', 35), ('revenue from operations ', 34), (' transmission and distribution business ', 32), (' sale of products ', 27), (' from trading business ', 26), (' Sale of coal ', 25), (' Sales revenue ', 25), (' Rendering of services ', 24), (' net sales ', 23), (' Revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' revenue from continuing activities ', 42), (' transmission and distribution business ', 34), (' Revenue from rendering of services', 32), (' revenue from contracts with customers ', 31), (' Rendering of services ', 31), (' from trading business ', 29), ('revenue from operations ', 21), (' net sales ', 19), (' Sale of coal ', 18), (' Sales revenue ', 17), (' sale of products ', 16), (' Revenue ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Sales revenue ', 40), (' Rendering of services ', 37), (' transmission and distribution business ', 33), (' Revenue from rendering of services', 31), (' Revenue ', 30), (' from trading business ', 28), ('revenue from operations ', 27), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' sale of products ', 23), (' revenue from continuing activities ', 21), (' Sale of coal ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Revenue from rendering of services', 44), (' Sales revenue ', 39), (' revenue from contracts with customers ', 38), (' revenue from continuing activities ', 36), (' Rendering of services ', 36), (' from trading business ', 34), ('revenue from operations ', 33), (' Revenue ', 31), (' net sales ', 29), (' transmission and distribution business ', 29), (' Sale of coal ', 28), (' sale of products ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities ', 35), (' from trading business ', 33), (' Revenue from rendering of services', 30), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Rendering of services ', 21), (' Revenue ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' sale of products ', 31), (' Rendering of services ', 30), (' Sale of coal ', 28), (' revenue from continuing activities ', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' net sales ', 46), (' Revenue from rendering of services', 37), (' from trading business ', 36), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' revenue from continuing activities ', 28), (' sale of products ', 27), (' Revenue ', 25), (' Sale of coal ', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities ', 37), (' Revenue from rendering of services', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' Rendering of services ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 263810.0, 'line_item_label': ['Revenue'], 'note_numbers': ['1'], 'line_item_value': [263810.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Sale of coal ', 43), (' sale of products ', 38), (' net sales ', 36), (' from trading business ', 34), (' revenue from continuing activities ', 31), (' revenue from contracts with customers ', 30), ('revenue from operations ', 27), (' Revenue from rendering of services', 26), (' transmission and distribution business ', 24), (' Sales revenue ', 24), (' Rendering of services ', 22), (' Revenue ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' revenue from continuing activities ', 56), (' revenue from contracts with customers ', 53), (' from trading business ', 50), (' transmission and distribution business ', 45), ('revenue from operations ', 44), (' Revenue from rendering of services', 36), (' sale of products ', 32), (' Rendering of services ', 32), (' net sales ', 30), (' Sale of coal ', 29), (' Sales revenue ', 28), (' Revenue ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' Rendering of services ', 32), (' net sales ', 29), ('revenue from operations ', 27), (' Revenue from rendering of services', 26), (' sale of products ', 22), (' revenue from continuing activities ', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities ', 44), (' Revenue from rendering of services', 39), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' Rendering of services ', 28), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' revenue from continuing activities ', 40), (' revenue from contracts with customers ', 38), (' Revenue from rendering of services', 36), (' transmission and distribution business ', 33), ('revenue from operations ', 32), (' Rendering of services ', 26), (' from trading business ', 25), (' sale of products ', 21), (' net sales ', 19), (' Sale of coal ', 19), (' Sales revenue ', 19), (' Revenue ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 40), (' Revenue from rendering of services', 35), ('revenue from operations ', 34), (' transmission and distribution business ', 32), (' sale of products ', 27), (' from trading business ', 26), (' Sale of coal ', 25), (' Sales revenue ', 25), (' Rendering of services ', 24), (' net sales ', 23), (' Revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 40), (' Revenue from rendering of services', 35), ('revenue from operations ', 34), (' transmission and distribution business ', 32), (' sale of products ', 27), (' from trading business ', 26), (' Sale of coal ', 25), (' Sales revenue ', 25), (' Rendering of services ', 24), (' net sales ', 23), (' Revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' revenue from continuing activities ', 42), (' transmission and distribution business ', 34), (' Revenue from rendering of services', 32), (' revenue from contracts with customers ', 31), (' Rendering of services ', 31), (' from trading business ', 29), ('revenue from operations ', 21), (' net sales ', 19), (' Sale of coal ', 18), (' Sales revenue ', 17), (' sale of products ', 16), (' Revenue ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Sales revenue ', 40), (' Rendering of services ', 37), (' transmission and distribution business ', 33), (' Revenue from rendering of services', 31), (' Revenue ', 30), (' from trading business ', 28), ('revenue from operations ', 27), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' sale of products ', 23), (' revenue from continuing activities ', 21), (' Sale of coal ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Revenue from rendering of services', 44), (' Sales revenue ', 39), (' revenue from contracts with customers ', 38), (' revenue from continuing activities ', 36), (' Rendering of services ', 36), (' from trading business ', 34), ('revenue from operations ', 33), (' Revenue ', 31), (' net sales ', 29), (' transmission and distribution business ', 29), (' Sale of coal ', 28), (' sale of products ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities ', 35), (' from trading business ', 33), (' Revenue from rendering of services', 30), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Rendering of services ', 21), (' Revenue ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' sale of products ', 31), (' Rendering of services ', 30), (' Sale of coal ', 28), (' revenue from continuing activities ', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' net sales ', 46), (' Revenue from rendering of services', 37), (' from trading business ', 36), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' revenue from continuing activities ', 28), (' sale of products ', 27), (' Revenue ', 25), (' Sale of coal ', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities ', 37), (' Revenue from rendering of services', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' Rendering of services ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 205018.0, 'line_item_label': ['Revenue'], 'note_numbers': ['1'], 'line_item_value': [205018.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none domestic , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 45), (' Goods sold to customer direct from supplier ', 45), (' contribution from joint venture', 45), (' Condensate ', 43), (' Gas transportation income ', 38), (' Feed gas income ', 36), (' Sale of goods - Marine ', 36), (' Sale of goods - Spareparts ', 36), (' Goods sold to customer from warehouse ', 36), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Cars ', 27), (' Total Revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none export , res_fuzz_match = [(' Gas transportation income ', 45), (' Sale of goods - Spareparts ', 45), (' contribution from joint venture', 45), (' Condensate ', 43), (' Sale of goods - Cars ', 36), (' Sale of goods - Motorcycles ', 36), (' Sale of goods - Marine ', 36), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 27), (' Total Revenue ', 27), (' hedge loss / gain ', 27), (' Domgas ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none domestic , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 45), (' Goods sold to customer direct from supplier ', 45), (' contribution from joint venture', 45), (' Condensate ', 43), (' Gas transportation income ', 38), (' Feed gas income ', 36), (' Sale of goods - Marine ', 36), (' Sale of goods - Spareparts ', 36), (' Goods sold to customer from warehouse ', 36), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Cars ', 27), (' Total Revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none export , res_fuzz_match = [(' Gas transportation income ', 45), (' Sale of goods - Spareparts ', 45), (' contribution from joint venture', 45), (' Condensate ', 43), (' Sale of goods - Cars ', 36), (' Sale of goods - Motorcycles ', 36), (' Sale of goods - Marine ', 36), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 27), (' Total Revenue ', 27), (' hedge loss / gain ', 27), (' Domgas ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory ', 29), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' Premises cost ', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' cost of goods sold ', 100), (' Cost of product sold', 77), (' Cost of goods and services sold', 72), (' Cost of inventory sold', 67), (' cost of coal sold', 64), ('cost of sales', 61), ('Cost of sales', 61), (' Personnel costs', 57), (' Cost of rendering services', 50), (' Premises cost ', 48), ('purchase of stock-in-trade', 36), ('total expenses', 31), (' change in inventory ', 28), ('total expenditure', 27), ('expense', 10), ('expenditure', 8)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Cost of product sold', 43), (' Cost of rendering services', 42), (' Cost of inventory sold', 41), (' Personnel costs', 41), (' cost of goods sold ', 41), (' Premises cost ', 39), (' cost of coal sold', 36), (' Cost of goods and services sold', 36), ('cost of sales', 35), ('Cost of sales', 35), (' change in inventory ', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 27), ('expenditure', 23), ('total expenses', 22), ('expense', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Premises cost ', 35), (' Personnel costs', 30), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' change in inventory ', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), (' Premises cost ', 44), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of rendering services', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('purchase of stock-in-trade', 27), (' cost of goods sold ', 26), (' Premises cost ', 24), (' change in inventory ', 23), ('total expenditure', 22), ('cost of sales', 22), ('Cost of sales', 22), ('total expenses', 21), ('expenditure', 16), ('expense', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Cost of inventory sold', 36), (' Cost of goods and services sold', 35), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('cost of sales', 29), ('Cost of sales', 29), (' cost of goods sold ', 29), (' Premises cost ', 28), ('total expenses', 27), ('total expenditure', 26), (' change in inventory ', 23), ('expense', 13), ('expenditure', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Cost of inventory sold', 36), (' Cost of goods and services sold', 35), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('cost of sales', 29), ('Cost of sales', 29), (' cost of goods sold ', 29), (' Premises cost ', 28), ('total expenses', 27), ('total expenditure', 26), (' change in inventory ', 23), ('expense', 13), ('expenditure', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' change in inventory ', 43), (' Cost of inventory sold', 38), (' Cost of goods and services sold', 37), (' cost of coal sold', 30), ('total expenditure', 28), (' Cost of product sold', 27), (' Cost of rendering services', 26), ('purchase of stock-in-trade', 25), (' Premises cost ', 25), ('total expenses', 24), (' Personnel costs', 22), (' cost of goods sold ', 22), ('cost of sales', 18), ('Cost of sales', 18), ('expenditure', 17), ('expense', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('total expenses', 62), ('expense', 60), ('expenditure', 50), ('total expenditure', 47), (' change in inventory ', 41), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 36), (' Cost of rendering services', 31), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 26), (' Premises cost ', 24), (' Cost of product sold', 19), (' cost of coal sold', 14), (' cost of goods sold ', 14)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Cost of inventory sold', 41), (' Premises cost ', 39), (' Cost of rendering services', 37), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of coal sold', 35), (' change in inventory ', 34), (' Cost of product sold', 32), ('expense', 31), ('total expenses', 31), (' Personnel costs', 29), (' cost of goods sold ', 29), ('total expenditure', 28), ('cost of sales', 28), ('Cost of sales', 28), ('expenditure', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' change in inventory ', 47), (' Premises cost ', 46), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Premises cost ', 37), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' Cost of rendering services', 31), (' cost of goods sold ', 29), (' change in inventory ', 29), ('expenditure', 22), ('expense', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Premises cost ', 34), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), (' change in inventory ', 30), (' Cost of rendering services', 28), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19), (' cost of goods sold ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory ', 40), (' Cost of product sold', 38), (' Cost of rendering services', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), (' Premises cost ', 26), ('expense', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': -233452.0, 'line_item_label': ['Cost of goods sold', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-233452.0, 0.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory ', 29), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' Premises cost ', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' cost of goods sold ', 100), (' Cost of product sold', 77), (' Cost of goods and services sold', 72), (' Cost of inventory sold', 67), (' cost of coal sold', 64), ('cost of sales', 61), ('Cost of sales', 61), (' Personnel costs', 57), (' Cost of rendering services', 50), (' Premises cost ', 48), ('purchase of stock-in-trade', 36), ('total expenses', 31), (' change in inventory ', 28), ('total expenditure', 27), ('expense', 10), ('expenditure', 8)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Cost of product sold', 43), (' Cost of rendering services', 42), (' Cost of inventory sold', 41), (' Personnel costs', 41), (' cost of goods sold ', 41), (' Premises cost ', 39), (' cost of coal sold', 36), (' Cost of goods and services sold', 36), ('cost of sales', 35), ('Cost of sales', 35), (' change in inventory ', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 27), ('expenditure', 23), ('total expenses', 22), ('expense', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Premises cost ', 35), (' Personnel costs', 30), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' change in inventory ', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), (' Premises cost ', 44), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of rendering services', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('purchase of stock-in-trade', 27), (' cost of goods sold ', 26), (' Premises cost ', 24), (' change in inventory ', 23), ('total expenditure', 22), ('cost of sales', 22), ('Cost of sales', 22), ('total expenses', 21), ('expenditure', 16), ('expense', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Cost of inventory sold', 36), (' Cost of goods and services sold', 35), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('cost of sales', 29), ('Cost of sales', 29), (' cost of goods sold ', 29), (' Premises cost ', 28), ('total expenses', 27), ('total expenditure', 26), (' change in inventory ', 23), ('expense', 13), ('expenditure', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Cost of inventory sold', 36), (' Cost of goods and services sold', 35), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('cost of sales', 29), ('Cost of sales', 29), (' cost of goods sold ', 29), (' Premises cost ', 28), ('total expenses', 27), ('total expenditure', 26), (' change in inventory ', 23), ('expense', 13), ('expenditure', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' change in inventory ', 43), (' Cost of inventory sold', 38), (' Cost of goods and services sold', 37), (' cost of coal sold', 30), ('total expenditure', 28), (' Cost of product sold', 27), (' Cost of rendering services', 26), ('purchase of stock-in-trade', 25), (' Premises cost ', 25), ('total expenses', 24), (' Personnel costs', 22), (' cost of goods sold ', 22), ('cost of sales', 18), ('Cost of sales', 18), ('expenditure', 17), ('expense', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('total expenses', 62), ('expense', 60), ('expenditure', 50), ('total expenditure', 47), (' change in inventory ', 41), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 36), (' Cost of rendering services', 31), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 26), (' Premises cost ', 24), (' Cost of product sold', 19), (' cost of coal sold', 14), (' cost of goods sold ', 14)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Cost of inventory sold', 41), (' Premises cost ', 39), (' Cost of rendering services', 37), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of coal sold', 35), (' change in inventory ', 34), (' Cost of product sold', 32), ('expense', 31), ('total expenses', 31), (' Personnel costs', 29), (' cost of goods sold ', 29), ('total expenditure', 28), ('cost of sales', 28), ('Cost of sales', 28), ('expenditure', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' change in inventory ', 47), (' Premises cost ', 46), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Premises cost ', 37), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' Cost of rendering services', 31), (' cost of goods sold ', 29), (' change in inventory ', 29), ('expenditure', 22), ('expense', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Premises cost ', 34), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), (' change in inventory ', 30), (' Cost of rendering services', 28), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19), (' cost of goods sold ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory ', 40), (' Cost of product sold', 38), (' Cost of rendering services', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), (' Premises cost ', 26), ('expense', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': -183640.0, 'line_item_label': ['Cost of goods sold', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-183640.0, 0.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies ', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Servicing expenses', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' marketing and advertising expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Selling and marketting expenses ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13), (' Salaries and employee benefits ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' Selling Expenses ', 32), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' employee benefit espense ', 28), (' Selling and marketting expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' other expenses ', 23), (' Occupancy expenses ', 23), (' Other expenses ', 23), (' Management expenses ', 23), (' Other expenses ', 23), (' Servicing expenses', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' property espense ', 21), (' Royalties ', 19), (' Administration ', 17), (' Marketing expenses ', 15), (' Occupancy ', 11), (' levies ', 11), ('expenses ', 10), (' depreciation ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Logistics and distribution ', 49), (' Distribution expenses ', 44), (' Selling & distribution expenses ', 43), (' Administrative and other expenses ', 39), (' employee benefits expense ', 38), (' employee benefit espense ', 38), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' property espense ', 35), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Salaries and employee benefits ', 31), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' Occupancy expenses ', 27), (' marketing and advertising expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administration ', 24), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 22), (' Occupancy ', 20), (' Royalties ', 19), ('expenses ', 13), (' depreciation ', 12), (' levies ', 7)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Servicing expenses', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Selling and marketting expenses ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' marketing and advertising expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' Salaries and employee benefits ', 25), (' levies ', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' marketing and advertising expenses ', 52), (' Salaries and employee benefits ', 48), (' employee benefit espense ', 47), (' Selling and marketting expenses ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Servicing expenses', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 49), (' Administrative and other expenses ', 38), (' marketing and advertising expenses ', 38), (' Salaries and employee benefits ', 36), (' Selling and marketting expenses ', 35), (' Selling & distribution expenses ', 31), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Advertising expenses ', 28), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' employee benefit espense ', 28), (' Depreciation expenses ', 26), (' Distribution expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' other expenses ', 21), (' Occupancy expenses ', 21), (' Other expenses ', 21), (' Lease expenses ', 21), (' Selling Expenses ', 21), (' Other expenses ', 21), (' Servicing expenses', 21), (' Marketing expenses ', 18), (' Management expenses ', 16), (' depreciation ', 14), (' Occupancy ', 14), ('expenses ', 11), (' Royalties ', 11), (' levies ', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' marketing and advertising expenses ', 38), (' Administrative and other expenses ', 35), (' Amortisation expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' Logistics and distribution ', 30), (' Salaries and employee benefits ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' property espense ', 29), (' employee benefit espense ', 29), (' Distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling Expenses ', 25), (' other expenses ', 24), (' Other expenses ', 24), (' Depreciation expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 24), (' Lease expenses ', 22), (' Marketing expenses ', 21), (' Management expenses ', 21), (' Administration ', 19), (' Occupancy expenses ', 18), (' Royalties ', 16), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 13), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' marketing and advertising expenses ', 38), (' Administrative and other expenses ', 35), (' Amortisation expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' Logistics and distribution ', 30), (' Salaries and employee benefits ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' property espense ', 29), (' employee benefit espense ', 29), (' Distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling Expenses ', 25), (' other expenses ', 24), (' Other expenses ', 24), (' Depreciation expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 24), (' Lease expenses ', 22), (' Marketing expenses ', 21), (' Management expenses ', 21), (' Administration ', 19), (' Occupancy expenses ', 18), (' Royalties ', 16), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 13), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administrative and other expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' marketing and advertising expenses ', 31), (' Servicing expenses', 31), (' Depreciation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Distribution expenses ', 28), (' Administration ', 27), (' Salaries and employee benefits ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' Other expenses ', 24), (' Marketing expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Occupancy ', 22), (' property espense ', 21), (' depreciation ', 20), (' Royalties ', 20), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Management expenses ', 69), (' Servicing expenses', 67), (' Lease expenses ', 64), (' Occupancy expenses ', 62), ('expenses ', 60), (' Marketing expenses ', 59), (' Selling Expenses ', 56), (' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' depreciation ', 48), (' property espense ', 48), (' Selling and marketting expenses ', 44), (' Depreciation expenses ', 43), (' Amortisation expenses ', 43), (' Advertising expenses ', 41), (' Distribution expenses ', 40), (' Administrative expenses ', 40), (' Selling & distribution expenses ', 40), (' Administration expenses ', 40), (' marketing and advertising expenses ', 40), (' Administrative and other expenses ', 35), (' employee benefits expense ', 33), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' employee benefit espense ', 28), (' Administration ', 26), (' Logistics and distribution ', 24), (' levies ', 22), (' Sales and marketing ', 21), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' employee benefit espense ', 43), (' Depreciation expenses ', 41), (' Logistics and distribution ', 40), (' Lease expenses ', 39), (' employee benefits expense ', 38), (' Depreciation and amortisation expenses ', 35), (' Salaries and employee benefits ', 35), (' Sales and marketing ', 34), (' property espense ', 34), (' Selling and marketting expenses ', 33), (' Selling Expenses ', 32), ('expenses ', 31), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' depreciation ', 30), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Servicing expenses', 30), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Distribution expenses ', 28), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' marketing and advertising expenses ', 26), (' Management expenses ', 25), (' Royalties ', 22), (' Administration ', 21), (' levies ', 17), (' Occupancy ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' marketing and advertising expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Selling and marketting expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' Servicing expenses', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies ', 11), ('expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' marketing and advertising expenses ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Servicing expenses', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' employee benefits expense ', 70), (' employee benefit espense ', 65), (' Depreciation expenses ', 62), (' Administrative expenses ', 59), (' Administration expenses ', 59), (' Salaries and employee benefits ', 59), (' Administrative and other expenses ', 55), (' Lease expenses ', 55), (' Advertising expenses ', 55), (' other expenses ', 53), (' Distribution expenses ', 53), (' Other expenses ', 53), (' Management expenses ', 53), (' Other expenses ', 53), (' Marketing expenses ', 52), (' Selling & distribution expenses ', 51), ('expenses ', 50), (' Amortisation expenses ', 50), (' marketing and advertising expenses ', 50), (' Selling and marketting expenses ', 50), (' Selling Expenses ', 48), (' Occupancy expenses ', 47), (' Depreciation and amortisation expenses ', 45), (' Servicing expenses', 45), (' property espense ', 42), (' Sales and marketing ', 36), (' Logistics and distribution ', 32), (' Administration ', 30), (' depreciation ', 24), (' levies ', 18), (' Occupancy ', 9), (' Royalties ', 8)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Lease expenses ', 35), (' Selling and marketting expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Servicing expenses', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' marketing and advertising expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4], 'score': 100, 'value': -13328.0, 'line_item_label': ['Expenses', 'Administration expenses'], 'note_numbers': [nan, '2'], 'line_item_value': [0.0, -13328.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies ', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Servicing expenses', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' marketing and advertising expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Selling and marketting expenses ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13), (' Salaries and employee benefits ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' Selling Expenses ', 32), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' employee benefit espense ', 28), (' Selling and marketting expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' other expenses ', 23), (' Occupancy expenses ', 23), (' Other expenses ', 23), (' Management expenses ', 23), (' Other expenses ', 23), (' Servicing expenses', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' property espense ', 21), (' Royalties ', 19), (' Administration ', 17), (' Marketing expenses ', 15), (' Occupancy ', 11), (' levies ', 11), ('expenses ', 10), (' depreciation ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Logistics and distribution ', 49), (' Distribution expenses ', 44), (' Selling & distribution expenses ', 43), (' Administrative and other expenses ', 39), (' employee benefits expense ', 38), (' employee benefit espense ', 38), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' property espense ', 35), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Salaries and employee benefits ', 31), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' Occupancy expenses ', 27), (' marketing and advertising expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administration ', 24), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 22), (' Occupancy ', 20), (' Royalties ', 19), ('expenses ', 13), (' depreciation ', 12), (' levies ', 7)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Servicing expenses', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Selling and marketting expenses ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' marketing and advertising expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' Salaries and employee benefits ', 25), (' levies ', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' marketing and advertising expenses ', 52), (' Salaries and employee benefits ', 48), (' employee benefit espense ', 47), (' Selling and marketting expenses ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Servicing expenses', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 49), (' Administrative and other expenses ', 38), (' marketing and advertising expenses ', 38), (' Salaries and employee benefits ', 36), (' Selling and marketting expenses ', 35), (' Selling & distribution expenses ', 31), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Advertising expenses ', 28), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' employee benefit espense ', 28), (' Depreciation expenses ', 26), (' Distribution expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' other expenses ', 21), (' Occupancy expenses ', 21), (' Other expenses ', 21), (' Lease expenses ', 21), (' Selling Expenses ', 21), (' Other expenses ', 21), (' Servicing expenses', 21), (' Marketing expenses ', 18), (' Management expenses ', 16), (' depreciation ', 14), (' Occupancy ', 14), ('expenses ', 11), (' Royalties ', 11), (' levies ', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' marketing and advertising expenses ', 38), (' Administrative and other expenses ', 35), (' Amortisation expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' Logistics and distribution ', 30), (' Salaries and employee benefits ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' property espense ', 29), (' employee benefit espense ', 29), (' Distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling Expenses ', 25), (' other expenses ', 24), (' Other expenses ', 24), (' Depreciation expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 24), (' Lease expenses ', 22), (' Marketing expenses ', 21), (' Management expenses ', 21), (' Administration ', 19), (' Occupancy expenses ', 18), (' Royalties ', 16), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 13), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' marketing and advertising expenses ', 38), (' Administrative and other expenses ', 35), (' Amortisation expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' Logistics and distribution ', 30), (' Salaries and employee benefits ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' property espense ', 29), (' employee benefit espense ', 29), (' Distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling Expenses ', 25), (' other expenses ', 24), (' Other expenses ', 24), (' Depreciation expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 24), (' Lease expenses ', 22), (' Marketing expenses ', 21), (' Management expenses ', 21), (' Administration ', 19), (' Occupancy expenses ', 18), (' Royalties ', 16), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 13), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administrative and other expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' marketing and advertising expenses ', 31), (' Servicing expenses', 31), (' Depreciation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Distribution expenses ', 28), (' Administration ', 27), (' Salaries and employee benefits ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' Other expenses ', 24), (' Marketing expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Occupancy ', 22), (' property espense ', 21), (' depreciation ', 20), (' Royalties ', 20), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Management expenses ', 69), (' Servicing expenses', 67), (' Lease expenses ', 64), (' Occupancy expenses ', 62), ('expenses ', 60), (' Marketing expenses ', 59), (' Selling Expenses ', 56), (' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' depreciation ', 48), (' property espense ', 48), (' Selling and marketting expenses ', 44), (' Depreciation expenses ', 43), (' Amortisation expenses ', 43), (' Advertising expenses ', 41), (' Distribution expenses ', 40), (' Administrative expenses ', 40), (' Selling & distribution expenses ', 40), (' Administration expenses ', 40), (' marketing and advertising expenses ', 40), (' Administrative and other expenses ', 35), (' employee benefits expense ', 33), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' employee benefit espense ', 28), (' Administration ', 26), (' Logistics and distribution ', 24), (' levies ', 22), (' Sales and marketing ', 21), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' employee benefit espense ', 43), (' Depreciation expenses ', 41), (' Logistics and distribution ', 40), (' Lease expenses ', 39), (' employee benefits expense ', 38), (' Depreciation and amortisation expenses ', 35), (' Salaries and employee benefits ', 35), (' Sales and marketing ', 34), (' property espense ', 34), (' Selling and marketting expenses ', 33), (' Selling Expenses ', 32), ('expenses ', 31), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' depreciation ', 30), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Servicing expenses', 30), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Distribution expenses ', 28), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' marketing and advertising expenses ', 26), (' Management expenses ', 25), (' Royalties ', 22), (' Administration ', 21), (' levies ', 17), (' Occupancy ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' marketing and advertising expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Selling and marketting expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' Servicing expenses', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies ', 11), ('expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' marketing and advertising expenses ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Servicing expenses', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' employee benefits expense ', 70), (' employee benefit espense ', 65), (' Depreciation expenses ', 62), (' Administrative expenses ', 59), (' Administration expenses ', 59), (' Salaries and employee benefits ', 59), (' Administrative and other expenses ', 55), (' Lease expenses ', 55), (' Advertising expenses ', 55), (' other expenses ', 53), (' Distribution expenses ', 53), (' Other expenses ', 53), (' Management expenses ', 53), (' Other expenses ', 53), (' Marketing expenses ', 52), (' Selling & distribution expenses ', 51), ('expenses ', 50), (' Amortisation expenses ', 50), (' marketing and advertising expenses ', 50), (' Selling and marketting expenses ', 50), (' Selling Expenses ', 48), (' Occupancy expenses ', 47), (' Depreciation and amortisation expenses ', 45), (' Servicing expenses', 45), (' property espense ', 42), (' Sales and marketing ', 36), (' Logistics and distribution ', 32), (' Administration ', 30), (' depreciation ', 24), (' levies ', 18), (' Occupancy ', 9), (' Royalties ', 8)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Lease expenses ', 35), (' Selling and marketting expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Servicing expenses', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' marketing and advertising expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4], 'score': 100, 'value': -16054.0, 'line_item_label': ['Expenses', 'Administration expenses'], 'note_numbers': [nan, '2'], 'line_item_value': [0.0, -16054.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation 9 , res_fuzz_match = [(' Administrative expenses ', 69), (' csr ', 67), (' Included in administrative expenses ', 57), (' machinery ', 56), (' Distribution Expenses ', 56), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Facilities Expense ', 50), (' Depreciation expense ', 50), (' Superannuation expense ', 50), (' plant and equipment ', 47), (' Contractors, subcontractors and employee related expenses ', 46), (' Defined contribution plans ', 45), (' Depreciation property ', 44), (' Amortisation expense ', 43), (' Research and development expenses ', 43), (' Rental equipment expenses ', 42), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' Wages and salaries ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' depreciation and amortisation expenses ', 38), (' Depreciation and Amortisation Expenses ', 38), (' Other Expenses from Ordinary Activities ', 38), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' social ', 33), (' miscellaneous ', 33), (' Compulsory superannuation contributions ', 33), (' Staff welfare ', 33), (' Depreciation expense right-of-use asset ', 33), (' Other expenses ', 33), (' other administration', 33), (' loss allowance ', 30), (' Depreciation right-of-use assets ', 30), (' exchange ', 29), (' loss on ', 25), (' charges ', 20), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [(' Depreciation right-of-use assets ', 70), (' Administrative expenses ', 69), (' Depreciation expense ', 64), (' Depreciation expense right-of-use asset ', 63), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' exchange ', 57), (' machinery ', 56), (' Depreciation property ', 56), (' Distribution Expenses ', 56), (' plant and equipment ', 53), (' Wages and salaries ', 53), (' Included in administrative expenses ', 52), (' loss on ', 50), (' social ', 50), (' Facilities Expense ', 50), (' Superannuation expense ', 50), (' Rental equipment expenses ', 47), (' other administration', 47), (' Defined contribution plans ', 45), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Amortisation expense ', 43), (' Other expenses ', 42), (' Contractors, subcontractors and employee related expenses ', 41), (' Research and development expenses ', 41), (' Other Expenses from Ordinary Activities ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' miscellaneous ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [(' Depreciation right-of-use assets ', 70), (' Administrative expenses ', 69), (' Depreciation expense ', 64), (' Depreciation expense right-of-use asset ', 63), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' exchange ', 57), (' machinery ', 56), (' Depreciation property ', 56), (' Distribution Expenses ', 56), (' plant and equipment ', 53), (' Wages and salaries ', 53), (' Included in administrative expenses ', 52), (' loss on ', 50), (' social ', 50), (' Facilities Expense ', 50), (' Superannuation expense ', 50), (' Rental equipment expenses ', 47), (' other administration', 47), (' Defined contribution plans ', 45), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Amortisation expense ', 43), (' Other expenses ', 42), (' Contractors, subcontractors and employee related expenses ', 41), (' Research and development expenses ', 41), (' Other Expenses from Ordinary Activities ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' miscellaneous ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation 9 , res_fuzz_match = [(' Administrative expenses ', 69), (' csr ', 67), (' Included in administrative expenses ', 57), (' machinery ', 56), (' Distribution Expenses ', 56), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Facilities Expense ', 50), (' Depreciation expense ', 50), (' Superannuation expense ', 50), (' plant and equipment ', 47), (' Contractors, subcontractors and employee related expenses ', 46), (' Defined contribution plans ', 45), (' Depreciation property ', 44), (' Amortisation expense ', 43), (' Research and development expenses ', 43), (' Rental equipment expenses ', 42), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' Wages and salaries ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' depreciation and amortisation expenses ', 38), (' Depreciation and Amortisation Expenses ', 38), (' Other Expenses from Ordinary Activities ', 38), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' social ', 33), (' miscellaneous ', 33), (' Compulsory superannuation contributions ', 33), (' Staff welfare ', 33), (' Depreciation expense right-of-use asset ', 33), (' Other expenses ', 33), (' other administration', 33), (' loss allowance ', 30), (' Depreciation right-of-use assets ', 30), (' exchange ', 29), (' loss on ', 25), (' charges ', 20), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [(' Depreciation right-of-use assets ', 70), (' Administrative expenses ', 69), (' Depreciation expense ', 64), (' Depreciation expense right-of-use asset ', 63), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' exchange ', 57), (' machinery ', 56), (' Depreciation property ', 56), (' Distribution Expenses ', 56), (' plant and equipment ', 53), (' Wages and salaries ', 53), (' Included in administrative expenses ', 52), (' loss on ', 50), (' social ', 50), (' Facilities Expense ', 50), (' Superannuation expense ', 50), (' Rental equipment expenses ', 47), (' other administration', 47), (' Defined contribution plans ', 45), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Amortisation expense ', 43), (' Other expenses ', 42), (' Contractors, subcontractors and employee related expenses ', 41), (' Research and development expenses ', 41), (' Other Expenses from Ordinary Activities ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' miscellaneous ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [(' Depreciation right-of-use assets ', 70), (' Administrative expenses ', 69), (' Depreciation expense ', 64), (' Depreciation expense right-of-use asset ', 63), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' exchange ', 57), (' machinery ', 56), (' Depreciation property ', 56), (' Distribution Expenses ', 56), (' plant and equipment ', 53), (' Wages and salaries ', 53), (' Included in administrative expenses ', 52), (' loss on ', 50), (' social ', 50), (' Facilities Expense ', 50), (' Superannuation expense ', 50), (' Rental equipment expenses ', 47), (' other administration', 47), (' Defined contribution plans ', 45), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Amortisation expense ', 43), (' Other expenses ', 42), (' Contractors, subcontractors and employee related expenses ', 41), (' Research and development expenses ', 41), (' Other Expenses from Ordinary Activities ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Salary & wages expense ', 39), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' employee benefits expenses ', 36), (' Employee expenses ', 36), (' Other employement costs ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' miscellaneous ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), ('  ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1628.0, 2003.0, 6551.0, 1730.0, 1576.0, 5344.0], 'label': ["$'000", "$'000", "$'000", "$'000", "$'000", "$'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses ', ' Rental expense relating to operating leases lease expense']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses ', 44), (' Administration expenses ', 36), (' Other expense', 33), (' Rental expenses ', 32), (' Premises cost ', 24), (' Occupancy ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Premises cost ', 48), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Other expense', 23), (' Rental expenses ', 22), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Premises cost ', 39), (' Administration expenses ', 34), (' Other expense', 32), (' Occupancy expenses ', 27), (' Rental expenses ', 21), (' Occupancy ', 20), ('Rent ', 14)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses ', 67), (' Other expense', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Premises cost ', 35), (' Occupancy ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Premises cost ', 44), (' Occupancy expenses ', 43), (' Other expense', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Administration expenses ', 30), (' Premises cost ', 24), (' Rental expenses ', 23), (' Occupancy expenses ', 21), (' Other expense', 21), (' Occupancy ', 14), ('Rent ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Rental expenses ', 27), (' Other expense', 24), (' Occupancy expenses ', 18), (' Occupancy ', 14), ('Rent ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Rental expenses ', 27), (' Other expense', 24), (' Occupancy expenses ', 18), (' Occupancy ', 14), ('Rent ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administration expenses ', 34), (' Premises cost ', 25), (' Occupancy expenses ', 24), (' Other expense', 24), (' Rental expenses ', 23), (' Occupancy ', 22), ('Rent ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Rental expenses ', 67), (' Occupancy expenses ', 62), (' Other expense', 54), (' Administration expenses ', 40), (' Premises cost ', 24), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Rental expenses ', 42), (' Premises cost ', 39), (' Occupancy expenses ', 31), (' Other expense', 31), (' Administration expenses ', 28), ('Rent ', 25), (' Occupancy ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Premises cost ', 46), (' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses ', 22), (' Other expense', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Premises cost ', 37), (' Rental expenses ', 35), (' Other expense', 31), (' Administration expenses ', 28), (' Occupancy expenses ', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Administration expenses ', 59), (' Rental expenses ', 58), (' Other expense', 53), (' Occupancy expenses ', 47), (' Premises cost ', 34), ('Rent ', 27), (' Occupancy ', 9)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Other expense', 43), (' Rental expenses ', 42), (' Occupancy expenses ', 30), (' Administration expenses ', 27), (' Premises cost ', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': -13328.0, 'line_item_label': ['Administration expenses'], 'note_numbers': ['2'], 'line_item_value': [-13328.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses ', 44), (' Administration expenses ', 36), (' Other expense', 33), (' Rental expenses ', 32), (' Premises cost ', 24), (' Occupancy ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Premises cost ', 48), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Other expense', 23), (' Rental expenses ', 22), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Premises cost ', 39), (' Administration expenses ', 34), (' Other expense', 32), (' Occupancy expenses ', 27), (' Rental expenses ', 21), (' Occupancy ', 20), ('Rent ', 14)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses ', 67), (' Other expense', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Premises cost ', 35), (' Occupancy ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Premises cost ', 44), (' Occupancy expenses ', 43), (' Other expense', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Administration expenses ', 30), (' Premises cost ', 24), (' Rental expenses ', 23), (' Occupancy expenses ', 21), (' Other expense', 21), (' Occupancy ', 14), ('Rent ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Rental expenses ', 27), (' Other expense', 24), (' Occupancy expenses ', 18), (' Occupancy ', 14), ('Rent ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Rental expenses ', 27), (' Other expense', 24), (' Occupancy expenses ', 18), (' Occupancy ', 14), ('Rent ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administration expenses ', 34), (' Premises cost ', 25), (' Occupancy expenses ', 24), (' Other expense', 24), (' Rental expenses ', 23), (' Occupancy ', 22), ('Rent ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Rental expenses ', 67), (' Occupancy expenses ', 62), (' Other expense', 54), (' Administration expenses ', 40), (' Premises cost ', 24), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Rental expenses ', 42), (' Premises cost ', 39), (' Occupancy expenses ', 31), (' Other expense', 31), (' Administration expenses ', 28), ('Rent ', 25), (' Occupancy ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Premises cost ', 46), (' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses ', 22), (' Other expense', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Premises cost ', 37), (' Rental expenses ', 35), (' Other expense', 31), (' Administration expenses ', 28), (' Occupancy expenses ', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Administration expenses ', 59), (' Rental expenses ', 58), (' Other expense', 53), (' Occupancy expenses ', 47), (' Premises cost ', 34), ('Rent ', 27), (' Occupancy ', 9)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Other expense', 43), (' Rental expenses ', 42), (' Occupancy expenses ', 30), (' Administration expenses ', 27), (' Premises cost ', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': -16054.0, 'line_item_label': ['Administration expenses'], 'note_numbers': ['2'], 'line_item_value': [-16054.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses ', ' Rental expense relating to operating leases lease expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation 9 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Occupancy', 40), (' Rental expense relating to operating leases lease expense', 38)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Rental expense relating to operating leases lease expense', 44), (' Occupancy', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Rental expense relating to operating leases lease expense', 44), (' Occupancy', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation 9 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Occupancy', 40), (' Rental expense relating to operating leases lease expense', 38)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Rental expense relating to operating leases lease expense', 44), (' Occupancy', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = administration include: depreciation and impairment of right of use assets 10 , res_fuzz_match = [('Rent ', 50), (' Occupancy expenses ', 50), (' Rental expenses', 46), (' Rental expense relating to operating leases lease expense', 44), (' Occupancy', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue ', ' Other income']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Commission revenue ', ' Rent ', ' rental revenue']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue ', 67), ('other operating', 25), (' Other income', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Other income', 32), ('other operating', 25), ('Other revenue ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Other income', 39), ('other operating', 34), ('Other revenue ', 32)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue ', 33), ('other operating', 25), (' Other income', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue ', 43), (' Other income', 30), ('other operating', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('Other revenue ', 24), (' Other income', 24), ('other operating', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Other income', 42), ('other operating', 17), ('Other revenue ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('other operating', 25), (' Other income', 24), ('Other revenue ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Other income', 32), ('Other revenue ', 31), ('other operating', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Other income', 38), ('Other revenue ', 30), ('other operating', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('Other revenue ', 33), ('other operating', 29), (' Other income', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue ', 30)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': 363.0, 'line_item_label': ['Other income', 'Other income'], 'note_numbers': [nan, '6'], 'line_item_value': [0.0, 363.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue ', 67), ('other operating', 25), (' Other income', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Other income', 32), ('other operating', 25), ('Other revenue ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Other income', 39), ('other operating', 34), ('Other revenue ', 32)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue ', 33), ('other operating', 25), (' Other income', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue ', 43), (' Other income', 30), ('other operating', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('Other revenue ', 24), (' Other income', 24), ('other operating', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Other income', 42), ('other operating', 17), ('Other revenue ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('other operating', 25), (' Other income', 24), ('Other revenue ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Other income', 32), ('Other revenue ', 31), ('other operating', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Other income', 38), ('Other revenue ', 30), ('other operating', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('Other revenue ', 33), ('other operating', 29), (' Other income', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue ', 30)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': 148.0, 'line_item_label': ['Other income', 'Other income'], 'note_numbers': [nan, '6'], 'line_item_value': [0.0, 148.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 40), (' rental revenue', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 40), (' rental revenue', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 40), (' rental revenue', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 40), (' rental revenue', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Rent ', 75), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 38), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Other revenue', 67), (' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs ', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Net finance costs ', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 33), ('other income', 32), ('finance income', 23), (' Other revenue', 23), (' Interest revenue', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('other income', 39), (' Interest revenue', 35), (' Net finance costs ', 35), (' Other revenue', 32), ('Finance income and costs', 30), (' Finance income and finance costs', 30), ('finance income', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Other revenue', 33), (' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Other revenue', 43), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Finance income and finance costs', 41), ('Finance income and costs', 40), (' Net finance costs ', 35), (' Interest revenue', 30), ('finance income', 26), ('other income', 24), (' Other revenue', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs ', 29), (' Other revenue', 27), ('other income', 25), ('finance income', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs ', 29), (' Other revenue', 27), ('other income', 25), ('finance income', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('finance income', 96), ('Finance income and costs', 71), (' Finance income and finance costs', 63), (' Net finance costs ', 57), ('other income', 42), (' Interest revenue', 29), (' Other revenue', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('Finance income and costs', 57), (' Net finance costs ', 55), ('finance income', 54), (' Finance income and finance costs', 48), (' Interest revenue', 34), ('other income', 24), (' Other revenue', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('Finance income and costs', 39), ('finance income', 38), (' Finance income and finance costs', 38), (' Interest revenue', 34), (' Net finance costs ', 34), ('other income', 32), (' Other revenue', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Net finance costs ', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Other revenue', 30), (' Interest revenue', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs ', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24), (' Other revenue', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Interest revenue', 42), (' Other revenue', 33), (' Net finance costs ', 30), ('other income', 28), ('finance income', 27), ('Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Other revenue', 30), (' Interest revenue', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 10, 13], 'score': 100, 'value': -4768.0, 'line_item_label': ['Other income', 'Other income', 'Financial income', 'Net financing costs'], 'note_numbers': [nan, '6', '3', '3'], 'line_item_value': [0.0, 363.0, 382.0, -5513.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Other revenue', 67), (' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs ', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' Net finance costs ', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 33), ('other income', 32), ('finance income', 23), (' Other revenue', 23), (' Interest revenue', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('other income', 39), (' Interest revenue', 35), (' Net finance costs ', 35), (' Other revenue', 32), ('Finance income and costs', 30), (' Finance income and finance costs', 30), ('finance income', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Other revenue', 33), (' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Other revenue', 43), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Finance income and finance costs', 41), ('Finance income and costs', 40), (' Net finance costs ', 35), (' Interest revenue', 30), ('finance income', 26), ('other income', 24), (' Other revenue', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs ', 29), (' Other revenue', 27), ('other income', 25), ('finance income', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs ', 29), (' Other revenue', 27), ('other income', 25), ('finance income', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('finance income', 96), ('Finance income and costs', 71), (' Finance income and finance costs', 63), (' Net finance costs ', 57), ('other income', 42), (' Interest revenue', 29), (' Other revenue', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('Finance income and costs', 57), (' Net finance costs ', 55), ('finance income', 54), (' Finance income and finance costs', 48), (' Interest revenue', 34), ('other income', 24), (' Other revenue', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('Finance income and costs', 39), ('finance income', 38), (' Finance income and finance costs', 38), (' Interest revenue', 34), (' Net finance costs ', 34), ('other income', 32), (' Other revenue', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Net finance costs ', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Other revenue', 30), (' Interest revenue', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs ', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24), (' Other revenue', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Interest revenue', 42), (' Other revenue', 33), (' Net finance costs ', 30), ('other income', 28), ('finance income', 27), ('Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Other revenue', 30), (' Interest revenue', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 10, 13], 'score': 100, 'value': -11760.0, 'line_item_label': ['Other income', 'Other income', 'Financial income', 'Net financing costs'], 'note_numbers': [nan, '6', '3', '3'], 'line_item_value': [0.0, 148.0, 160.0, -12068.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('interest ', 62), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue ', 50), (' Interest income from cash and cash equivalents ', 50), (' Interest income from financial assets measured at amortised cost', 50), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest received - Bank ', 36), (' Interest received - Loan ', 36), (' Sublease interest income ', 35), (' Share of JV interest received/(paid) ', 35), (' Interest income from cash and cash equivalents ', 35), (' Interest income from financial assets measured at amortised cost', 35), (' Bank interest ', 31), (' Interest income ', 29), (' Bank Deposits - cash and cash equivalents ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 64), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Bank interest ', 54), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 49), (' interest revenue ', 47), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('interest ', 62), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue ', 50), (' Interest income from cash and cash equivalents ', 50), (' Interest income from financial assets measured at amortised cost', 50), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest received - Bank ', 36), (' Interest received - Loan ', 36), (' Sublease interest income ', 35), (' Share of JV interest received/(paid) ', 35), (' Interest income from cash and cash equivalents ', 35), (' Interest income from financial assets measured at amortised cost', 35), (' Bank interest ', 31), (' Interest income ', 29), (' Bank Deposits - cash and cash equivalents ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 64), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Bank interest ', 54), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 49), (' interest revenue ', 47), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('interest ', 62), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue ', 50), (' Interest income from cash and cash equivalents ', 50), (' Interest income from financial assets measured at amortised cost', 50), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest received - Bank ', 36), (' Interest received - Loan ', 36), (' Sublease interest income ', 35), (' Share of JV interest received/(paid) ', 35), (' Interest income from cash and cash equivalents ', 35), (' Interest income from financial assets measured at amortised cost', 35), (' Bank interest ', 31), (' Interest income ', 29), (' Bank Deposits - cash and cash equivalents ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 64), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Bank interest ', 54), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 49), (' interest revenue ', 47), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('interest ', 62), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue ', 50), (' Interest income from cash and cash equivalents ', 50), (' Interest income from financial assets measured at amortised cost', 50), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest received - Bank ', 36), (' Interest received - Loan ', 36), (' Sublease interest income ', 35), (' Share of JV interest received/(paid) ', 35), (' Interest income from cash and cash equivalents ', 35), (' Interest income from financial assets measured at amortised cost', 35), (' Bank interest ', 31), (' Interest income ', 29), (' Bank Deposits - cash and cash equivalents ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 64), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Bank interest ', 54), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 49), (' interest revenue ', 47), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Interest income from cash and cash equivalents ', 52), (' Interest income from financial assets measured at amortised cost', 52), ('interest ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 74), (' Interest income from cash and cash equivalents ', 58), (' Interest income ', 57), (' Sublease interest income ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 38), (' Interest received - Bank ', 32), (' Interest received - Loan ', 32), (' Bank Deposits - cash and cash equivalents ', 32), (' interest revenue ', 27), (' Share of JV interest received/(paid) ', 26), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 68), (' Interest income ', 57), (' Interest income from cash and cash equivalents ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 46), (' Sublease interest income ', 42), ('interest ', 38), (' Interest received - Loan ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Interest received - Bank ', 32), (' Share of JV interest received/(paid) ', 32), (' interest revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest ', 100), (' Interest income ', 81), (' Bank interest ', 77), (' Sublease interest income ', 70), (' interest revenue ', 64), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Loan ', 58), (' Interest received - Bank ', 53), (' Interest income from cash and cash equivalents ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 71), (' Interest income ', 67), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Sublease interest income ', 58), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42), (' Interest income from cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank interest ', 56), (' Interest received - Bank ', 43), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Interest income from financial assets measured at amortised cost', 43), ('interest ', 38), (' Interest received - Loan ', 36), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 36), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 36), (' interest revenue ', 36), (' Interest income ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 61), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income ', 50), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), ('interest ', 38), (' Bank interest ', 38), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Interest income from cash and cash equivalents ', 36), (' Interest received - Loan ', 29), (' Bank interest ', 27), (' Interest received - Bank ', 27), (' Sublease interest income ', 27), (' Share of JV interest received/(paid) ', 27), (' interest revenue ', 27), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Interest received - Bank ', 40), (' interest revenue ', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35), (' Interest income from cash and cash equivalents ', 35), (' Bank interest ', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 62), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 52), (' Sublease interest income ', 49), (' Interest income from cash and cash equivalents ', 48), (' Bank Deposits - cash and cash equivalents ', 43), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 74), (' Interest income from cash and cash equivalents ', 58), (' Interest income ', 57), (' Sublease interest income ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 38), (' Interest received - Bank ', 32), (' Interest received - Loan ', 32), (' Bank Deposits - cash and cash equivalents ', 32), (' interest revenue ', 27), (' Share of JV interest received/(paid) ', 26), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 68), (' Interest income ', 57), (' Interest income from cash and cash equivalents ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 46), (' Sublease interest income ', 42), ('interest ', 38), (' Interest received - Loan ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Interest received - Bank ', 32), (' Share of JV interest received/(paid) ', 32), (' interest revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest ', 100), (' Interest income ', 81), (' Bank interest ', 77), (' Sublease interest income ', 70), (' interest revenue ', 64), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Loan ', 58), (' Interest received - Bank ', 53), (' Interest income from cash and cash equivalents ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 71), (' Interest income ', 67), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Sublease interest income ', 58), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42), (' Interest income from cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank interest ', 56), (' Interest received - Bank ', 43), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Interest income from financial assets measured at amortised cost', 43), ('interest ', 38), (' Interest received - Loan ', 36), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 36), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 36), (' interest revenue ', 36), (' Interest income ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 61), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income ', 50), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), ('interest ', 38), (' Bank interest ', 38), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Interest income from cash and cash equivalents ', 36), (' Interest received - Loan ', 29), (' Bank interest ', 27), (' Interest received - Bank ', 27), (' Sublease interest income ', 27), (' Share of JV interest received/(paid) ', 27), (' interest revenue ', 27), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Interest received - Bank ', 40), (' interest revenue ', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35), (' Interest income from cash and cash equivalents ', 35), (' Bank interest ', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 62), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 52), (' Sublease interest income ', 49), (' Interest income from cash and cash equivalents ', 48), (' Bank Deposits - cash and cash equivalents ', 43), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 11, 12], 'score': [100, 100, 100, 100], 'value': [-8674.0, -1069.0, -3853.0, -900.0], 'label': ['Total Interest cost', 'Total Interest on lease', 'Total Interest cost', 'Total Interest on lease'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('Interest expense', 71), ('interest expense', 71)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('Interest expense', 79), ('interest expense', 79)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('Interest expense', 71), ('interest expense', 71)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('Interest expense', 79), ('interest expense', 79)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 74), (' Interest income from cash and cash equivalents ', 58), (' Interest income ', 57), (' Sublease interest income ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 38), (' Interest received - Bank ', 32), (' Interest received - Loan ', 32), (' Bank Deposits - cash and cash equivalents ', 32), (' interest revenue ', 27), (' Share of JV interest received/(paid) ', 26), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 68), (' Interest income ', 57), (' Interest income from cash and cash equivalents ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 46), (' Sublease interest income ', 42), ('interest ', 38), (' Interest received - Loan ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Interest received - Bank ', 32), (' Share of JV interest received/(paid) ', 32), (' interest revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest ', 100), (' Interest income ', 81), (' Bank interest ', 77), (' Sublease interest income ', 70), (' interest revenue ', 64), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Loan ', 58), (' Interest received - Bank ', 53), (' Interest income from cash and cash equivalents ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 71), (' Interest income ', 67), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Sublease interest income ', 58), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42), (' Interest income from cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank interest ', 56), (' Interest received - Bank ', 43), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Interest income from financial assets measured at amortised cost', 43), ('interest ', 38), (' Interest received - Loan ', 36), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 36), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 36), (' interest revenue ', 36), (' Interest income ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 61), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income ', 50), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), ('interest ', 38), (' Bank interest ', 38), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Interest income from cash and cash equivalents ', 36), (' Interest received - Loan ', 29), (' Bank interest ', 27), (' Interest received - Bank ', 27), (' Sublease interest income ', 27), (' Share of JV interest received/(paid) ', 27), (' interest revenue ', 27), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Interest received - Bank ', 40), (' interest revenue ', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35), (' Interest income from cash and cash equivalents ', 35), (' Bank interest ', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 62), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 52), (' Sublease interest income ', 49), (' Interest income from cash and cash equivalents ', 48), (' Bank Deposits - cash and cash equivalents ', 43), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 74), (' Interest income from cash and cash equivalents ', 58), (' Interest income ', 57), (' Sublease interest income ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 38), (' Interest received - Bank ', 32), (' Interest received - Loan ', 32), (' Bank Deposits - cash and cash equivalents ', 32), (' interest revenue ', 27), (' Share of JV interest received/(paid) ', 26), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 68), (' Interest income ', 57), (' Interest income from cash and cash equivalents ', 53), (' Interest income from financial assets measured at amortised cost', 53), (' Bank interest ', 46), (' Sublease interest income ', 42), ('interest ', 38), (' Interest received - Loan ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Interest received - Bank ', 32), (' Share of JV interest received/(paid) ', 32), (' interest revenue ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest ', 100), (' Interest income ', 81), (' Bank interest ', 77), (' Sublease interest income ', 70), (' interest revenue ', 64), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Loan ', 58), (' Interest received - Bank ', 53), (' Interest income from cash and cash equivalents ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 71), (' Interest income ', 67), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Sublease interest income ', 58), (' Interest income from financial assets measured at amortised cost', 47), (' Bank Deposits - cash and cash equivalents ', 42), (' Interest income from cash and cash equivalents ', 42)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank interest ', 56), (' Interest received - Bank ', 43), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Interest income from financial assets measured at amortised cost', 43), ('interest ', 38), (' Interest received - Loan ', 36), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 36), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 36), (' interest revenue ', 36), (' Interest income ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 61), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income ', 50), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), ('interest ', 38), (' Bank interest ', 38), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Interest income from cash and cash equivalents ', 36), (' Interest received - Loan ', 29), (' Bank interest ', 27), (' Interest received - Bank ', 27), (' Sublease interest income ', 27), (' Share of JV interest received/(paid) ', 27), (' interest revenue ', 27), ('interest ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Interest received - Bank ', 40), (' interest revenue ', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35), (' Interest income from cash and cash equivalents ', 35), (' Bank interest ', 31)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 62), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 52), (' Sublease interest income ', 49), (' Interest income from cash and cash equivalents ', 48), (' Bank Deposits - cash and cash equivalents ', 43), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 11, 12], 'score': [100, 100, 100, 100], 'value': [-8674.0, -1069.0, -3853.0, -900.0], 'label': ['Total Interest cost', 'Total Interest on lease', 'Total Interest cost', 'Total Interest on lease'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('Interest expense', 71), ('interest expense', 71)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('Interest expense', 79), ('interest expense', 79)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('Interest expense', 71), ('interest expense', 71)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('Interest expense', 79), ('interest expense', 79)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense ', 29), (' Interest on external debt ', 23), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' Interest in finance leases', 29), (' Interest on external debt ', 24), (' interest expense ', 21), (' finance expenses ', 15)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' net finance costs ', 35), (' Interest on external debt ', 31), (' Interest in finance leases', 31), ('finance cost ', 28), (' interest expense ', 25), (' finance expenses ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense ', 57), (' Interest on external debt ', 38), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' finance expenses ', 41), (' interest expense ', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Interest in finance leases', 38), (' net finance costs ', 35), (' Interest on external debt ', 31), ('finance cost ', 29), (' interest expense ', 25), (' finance expenses ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest in finance leases', 35), (' Interest on external debt ', 30), (' net finance costs ', 29), ('finance cost ', 28), (' interest expense ', 26), (' finance expenses ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest in finance leases', 35), (' Interest on external debt ', 30), (' net finance costs ', 29), ('finance cost ', 28), (' interest expense ', 26), (' finance expenses ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' net finance costs ', 57), (' Interest in finance leases', 55), ('finance cost ', 50), (' finance expenses ', 46), (' interest expense ', 29), (' Interest on external debt ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses ', 96), ('finance cost ', 64), (' interest expense ', 62), (' net finance costs ', 55), (' Interest on external debt ', 41), (' Interest in finance leases', 41)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Interest in finance leases', 40), (' finance expenses ', 36), (' net finance costs ', 34), (' interest expense ', 34), ('finance cost ', 32), (' Interest on external debt ', 30)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' Interest in finance leases', 57), (' interest expense ', 40), (' Interest on external debt ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' net finance costs ', 38), (' Interest in finance leases', 38), ('finance cost ', 37), (' finance expenses ', 35), (' Interest on external debt ', 34), (' interest expense ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' finance expenses ', 52), (' interest expense ', 48), (' Interest on external debt ', 47), (' Interest in finance leases', 42), (' net finance costs ', 30), ('finance cost ', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense ', 40), (' Interest in finance leases', 40), (' finance expenses ', 38), ('finance cost ', 35), (' Interest on external debt ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [11, 13], 'score': 100, 'value': -11063.0, 'line_item_label': ['Financial expenses', 'Net financing costs'], 'note_numbers': ['3', '3'], 'line_item_value': [-5550.0, -5513.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense ', 29), (' Interest on external debt ', 23), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' Interest in finance leases', 29), (' Interest on external debt ', 24), (' interest expense ', 21), (' finance expenses ', 15)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' net finance costs ', 35), (' Interest on external debt ', 31), (' Interest in finance leases', 31), ('finance cost ', 28), (' interest expense ', 25), (' finance expenses ', 16)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense ', 57), (' Interest on external debt ', 38), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' finance expenses ', 41), (' interest expense ', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Interest in finance leases', 38), (' net finance costs ', 35), (' Interest on external debt ', 31), ('finance cost ', 29), (' interest expense ', 25), (' finance expenses ', 23)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest in finance leases', 35), (' Interest on external debt ', 30), (' net finance costs ', 29), ('finance cost ', 28), (' interest expense ', 26), (' finance expenses ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Interest in finance leases', 35), (' Interest on external debt ', 30), (' net finance costs ', 29), ('finance cost ', 28), (' interest expense ', 26), (' finance expenses ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' net finance costs ', 57), (' Interest in finance leases', 55), ('finance cost ', 50), (' finance expenses ', 46), (' interest expense ', 29), (' Interest on external debt ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses ', 96), ('finance cost ', 64), (' interest expense ', 62), (' net finance costs ', 55), (' Interest on external debt ', 41), (' Interest in finance leases', 41)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Interest in finance leases', 40), (' finance expenses ', 36), (' net finance costs ', 34), (' interest expense ', 34), ('finance cost ', 32), (' Interest on external debt ', 30)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' Interest in finance leases', 57), (' interest expense ', 40), (' Interest on external debt ', 40)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' net finance costs ', 38), (' Interest in finance leases', 38), ('finance cost ', 37), (' finance expenses ', 35), (' Interest on external debt ', 34), (' interest expense ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' finance expenses ', 52), (' interest expense ', 48), (' Interest on external debt ', 47), (' Interest in finance leases', 42), (' net finance costs ', 30), ('finance cost ', 28)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense ', 40), (' Interest in finance leases', 40), (' finance expenses ', 38), ('finance cost ', 35), (' Interest on external debt ', 33)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [11, 13], 'score': 100, 'value': -22737.0, 'line_item_label': ['Financial expenses', 'Net financing costs'], 'note_numbers': ['3', '3'], 'line_item_value': [-10669.0, -12068.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 53), (' Unwind of discount on decommissioning provision ', 53), ('loan ', 50), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 37), (' Lease liabilities interest expense ', 37), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 32), (' Interest accrued on lease liabilities ', 32), (' Lease interest expense ', 32), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' bonds ', 25), (' interest ', 25), (' Interest on leases ', 23), (' borrowings ', 17), (' debenture ', 12), (' debt ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), ('loan ', 50), (' Interest accrued on loans ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 42), (' Unwind of discount on decommissioning provision ', 42), (' Unwind of discount on Lease Liability', 42), (' bank facilities ', 40), (' interest ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 37), (' Interest accrued on lease liabilities ', 37), (' cash credit ', 36), (' borrowings ', 33), (' Lease interest expense ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' debt ', 25), (' bonds ', 25), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' interest ', 100), (' interest income ', 81), (' Interest on leases ', 77), (' Interest expenses ', 71), (' Interest accrued on loans ', 69), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), (' Lease liabilities interest expense ', 63), (' Interest accrued on lease liabilities ', 58), (' Interest on lease liabilities ', 53), ('loan ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Unwind of discount on decommissioning provision ', 42), (' debenture ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest expenses ', 79), (' Interest accrued on loans ', 69), (' Other interest expense ', 68), (' Interest accrued on lease liabilities ', 68), (' Lease interest expense ', 68), (' Lease liabilities interest expense ', 68), (' Interest on lease liabilities ', 68), (' interest income ', 67), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), ('loan ', 50), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Unwind of discount on Lease Liability', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' bank facilities ', 30), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' bank facilities ', 67), (' Interest on bank overdrafts and loans (other than those from related parties) ', 57), ('loan ', 50), (' bonds ', 50), (' Other interest expense ', 43), (' Lease liabilities interest expense ', 43), (' interest ', 38), (' Interest expenses ', 36), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on loans ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease interest expense ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' Interest on lease liabilities ', 36), (' Interest expense from financial liabilities measured at amortised cost ', 36), (' Interest on leases ', 31), (' interest income ', 29), (' Unwind of discount on decommissioning provision ', 29), (' Unwind of discount on Lease Liability', 29), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), ('loan ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' bank facilities ', 40), (' Interest accrued on loans ', 40), (' Interest accrued on lease liabilities ', 39), (' Lease interest expense ', 39), (' Lease liabilities interest expense ', 39), (' Interest on lease liabilities ', 39), (' Unwind of discount on Lease Liability', 39), (' interest ', 38), (' Interest on leases ', 38), (' Interest expenses ', 33), (' Unwind of discount on decommissioning provision ', 28), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('loan ', 50), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Other interest expense ', 36), (' Interest on leases ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' interest income ', 36), (' Interest on lease liabilities ', 36), (' Unwind of discount on Lease Liability', 36), (' cash credit ', 27), (' Interest expenses ', 27), (' Lease interest expense ', 27), (' Unwind of discount on decommissioning provision ', 27), (' debt ', 25), (' bonds ', 25), (' interest ', 25), (' borrowings ', 17), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' interest income ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Other interest expense ', 40), (' interest ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 38), (' Interest expense from financial liabilities measured at amortised cost ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Lease interest expense ', 37), (' Interest on lease liabilities ', 37), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 35), (' Unwind of discount on Lease Liability', 35), (' borrowings ', 33), (' Interest expenses ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 52), ('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Lease liabilities interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' interest ', 38), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Interest on leases ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' cash credit ', 36), (' Interest on lease liabilities ', 35), (' Unwind of discount on Lease Liability', 33), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 53), (' Unwind of discount on decommissioning provision ', 53), ('loan ', 50), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 37), (' Lease liabilities interest expense ', 37), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 32), (' Interest accrued on lease liabilities ', 32), (' Lease interest expense ', 32), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' bonds ', 25), (' interest ', 25), (' Interest on leases ', 23), (' borrowings ', 17), (' debenture ', 12), (' debt ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), ('loan ', 50), (' Interest accrued on loans ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 42), (' Unwind of discount on decommissioning provision ', 42), (' Unwind of discount on Lease Liability', 42), (' bank facilities ', 40), (' interest ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 37), (' Interest accrued on lease liabilities ', 37), (' cash credit ', 36), (' borrowings ', 33), (' Lease interest expense ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' debt ', 25), (' bonds ', 25), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' interest ', 100), (' interest income ', 81), (' Interest on leases ', 77), (' Interest expenses ', 71), (' Interest accrued on loans ', 69), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), (' Lease liabilities interest expense ', 63), (' Interest accrued on lease liabilities ', 58), (' Interest on lease liabilities ', 53), ('loan ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Unwind of discount on decommissioning provision ', 42), (' debenture ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest expenses ', 79), (' Interest accrued on loans ', 69), (' Other interest expense ', 68), (' Interest accrued on lease liabilities ', 68), (' Lease interest expense ', 68), (' Lease liabilities interest expense ', 68), (' Interest on lease liabilities ', 68), (' interest income ', 67), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), ('loan ', 50), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Unwind of discount on Lease Liability', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' bank facilities ', 30), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' bank facilities ', 67), (' Interest on bank overdrafts and loans (other than those from related parties) ', 57), ('loan ', 50), (' bonds ', 50), (' Other interest expense ', 43), (' Lease liabilities interest expense ', 43), (' interest ', 38), (' Interest expenses ', 36), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on loans ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease interest expense ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' Interest on lease liabilities ', 36), (' Interest expense from financial liabilities measured at amortised cost ', 36), (' Interest on leases ', 31), (' interest income ', 29), (' Unwind of discount on decommissioning provision ', 29), (' Unwind of discount on Lease Liability', 29), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), ('loan ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' bank facilities ', 40), (' Interest accrued on loans ', 40), (' Interest accrued on lease liabilities ', 39), (' Lease interest expense ', 39), (' Lease liabilities interest expense ', 39), (' Interest on lease liabilities ', 39), (' Unwind of discount on Lease Liability', 39), (' interest ', 38), (' Interest on leases ', 38), (' Interest expenses ', 33), (' Unwind of discount on decommissioning provision ', 28), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('loan ', 50), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Other interest expense ', 36), (' Interest on leases ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' interest income ', 36), (' Interest on lease liabilities ', 36), (' Unwind of discount on Lease Liability', 36), (' cash credit ', 27), (' Interest expenses ', 27), (' Lease interest expense ', 27), (' Unwind of discount on decommissioning provision ', 27), (' debt ', 25), (' bonds ', 25), (' interest ', 25), (' borrowings ', 17), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' interest income ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Other interest expense ', 40), (' interest ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 38), (' Interest expense from financial liabilities measured at amortised cost ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Lease interest expense ', 37), (' Interest on lease liabilities ', 37), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 35), (' Unwind of discount on Lease Liability', 35), (' borrowings ', 33), (' Interest expenses ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 52), ('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Lease liabilities interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' interest ', 38), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Interest on leases ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' cash credit ', 36), (' Interest on lease liabilities ', 35), (' Unwind of discount on Lease Liability', 33), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 11, 12], 'score': [100, 100, 100, 100], 'value': [-8674.0, -1069.0, -3853.0, -900.0], 'label': ['Total Interest cost', 'Total Interest on lease', 'Total Interest cost', 'Total Interest on lease'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest income', 81)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest income', 67)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('interest income', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('interest income', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('interest income', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('interest income', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest income', 81)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest income', 67)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('interest income', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('interest income', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('interest income', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('interest income', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 11], 'score': [81, 81], 'value': [-8674.0, -3853.0], 'label': ['Total Interest cost', 'Total Interest cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 53), (' Unwind of discount on decommissioning provision ', 53), ('loan ', 50), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 37), (' Lease liabilities interest expense ', 37), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 32), (' Interest accrued on lease liabilities ', 32), (' Lease interest expense ', 32), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' bonds ', 25), (' interest ', 25), (' Interest on leases ', 23), (' borrowings ', 17), (' debenture ', 12), (' debt ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), ('loan ', 50), (' Interest accrued on loans ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 42), (' Unwind of discount on decommissioning provision ', 42), (' Unwind of discount on Lease Liability', 42), (' bank facilities ', 40), (' interest ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 37), (' Interest accrued on lease liabilities ', 37), (' cash credit ', 36), (' borrowings ', 33), (' Lease interest expense ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' debt ', 25), (' bonds ', 25), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' interest ', 100), (' interest income ', 81), (' Interest on leases ', 77), (' Interest expenses ', 71), (' Interest accrued on loans ', 69), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), (' Lease liabilities interest expense ', 63), (' Interest accrued on lease liabilities ', 58), (' Interest on lease liabilities ', 53), ('loan ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Unwind of discount on decommissioning provision ', 42), (' debenture ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest expenses ', 79), (' Interest accrued on loans ', 69), (' Other interest expense ', 68), (' Interest accrued on lease liabilities ', 68), (' Lease interest expense ', 68), (' Lease liabilities interest expense ', 68), (' Interest on lease liabilities ', 68), (' interest income ', 67), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), ('loan ', 50), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Unwind of discount on Lease Liability', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' bank facilities ', 30), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' bank facilities ', 67), (' Interest on bank overdrafts and loans (other than those from related parties) ', 57), ('loan ', 50), (' bonds ', 50), (' Other interest expense ', 43), (' Lease liabilities interest expense ', 43), (' interest ', 38), (' Interest expenses ', 36), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on loans ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease interest expense ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' Interest on lease liabilities ', 36), (' Interest expense from financial liabilities measured at amortised cost ', 36), (' Interest on leases ', 31), (' interest income ', 29), (' Unwind of discount on decommissioning provision ', 29), (' Unwind of discount on Lease Liability', 29), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), ('loan ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' bank facilities ', 40), (' Interest accrued on loans ', 40), (' Interest accrued on lease liabilities ', 39), (' Lease interest expense ', 39), (' Lease liabilities interest expense ', 39), (' Interest on lease liabilities ', 39), (' Unwind of discount on Lease Liability', 39), (' interest ', 38), (' Interest on leases ', 38), (' Interest expenses ', 33), (' Unwind of discount on decommissioning provision ', 28), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('loan ', 50), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Other interest expense ', 36), (' Interest on leases ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' interest income ', 36), (' Interest on lease liabilities ', 36), (' Unwind of discount on Lease Liability', 36), (' cash credit ', 27), (' Interest expenses ', 27), (' Lease interest expense ', 27), (' Unwind of discount on decommissioning provision ', 27), (' debt ', 25), (' bonds ', 25), (' interest ', 25), (' borrowings ', 17), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' interest income ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Other interest expense ', 40), (' interest ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 38), (' Interest expense from financial liabilities measured at amortised cost ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Lease interest expense ', 37), (' Interest on lease liabilities ', 37), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 35), (' Unwind of discount on Lease Liability', 35), (' borrowings ', 33), (' Interest expenses ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 52), ('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Lease liabilities interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' interest ', 38), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Interest on leases ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' cash credit ', 36), (' Interest on lease liabilities ', 35), (' Unwind of discount on Lease Liability', 33), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 53), (' Unwind of discount on decommissioning provision ', 53), ('loan ', 50), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 37), (' Lease liabilities interest expense ', 37), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 32), (' Interest accrued on lease liabilities ', 32), (' Lease interest expense ', 32), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' bonds ', 25), (' interest ', 25), (' Interest on leases ', 23), (' borrowings ', 17), (' debenture ', 12), (' debt ', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' interest income ', 57), ('loan ', 50), (' Interest accrued on loans ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 42), (' Unwind of discount on decommissioning provision ', 42), (' Unwind of discount on Lease Liability', 42), (' bank facilities ', 40), (' interest ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 37), (' Interest accrued on lease liabilities ', 37), (' cash credit ', 36), (' borrowings ', 33), (' Lease interest expense ', 32), (' Interest on lease liabilities ', 32), (' Interest expenses ', 27), (' Other interest expense ', 26), (' debt ', 25), (' bonds ', 25), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' interest ', 100), (' interest income ', 81), (' Interest on leases ', 77), (' Interest expenses ', 71), (' Interest accrued on loans ', 69), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), (' Lease liabilities interest expense ', 63), (' Interest accrued on lease liabilities ', 58), (' Interest on lease liabilities ', 53), ('loan ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Unwind of discount on decommissioning provision ', 42), (' debenture ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest expenses ', 79), (' Interest accrued on loans ', 69), (' Other interest expense ', 68), (' Interest accrued on lease liabilities ', 68), (' Lease interest expense ', 68), (' Lease liabilities interest expense ', 68), (' Interest on lease liabilities ', 68), (' interest income ', 67), (' Interest expense on financial liabilities using the effective interest rate method - other ', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 63), ('loan ', 50), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest expense from financial liabilities measured at amortised cost ', 47), (' Unwind of discount on Lease Liability', 47), (' Discount unwind on the provision for asset retirement obligation ', 42), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' bank facilities ', 30), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' bank facilities ', 67), (' Interest on bank overdrafts and loans (other than those from related parties) ', 57), ('loan ', 50), (' bonds ', 50), (' Other interest expense ', 43), (' Lease liabilities interest expense ', 43), (' interest ', 38), (' Interest expenses ', 36), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on loans ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease interest expense ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' Interest on lease liabilities ', 36), (' Interest expense from financial liabilities measured at amortised cost ', 36), (' Interest on leases ', 31), (' interest income ', 29), (' Unwind of discount on decommissioning provision ', 29), (' Unwind of discount on Lease Liability', 29), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), ('loan ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' bank facilities ', 40), (' Interest accrued on loans ', 40), (' Interest accrued on lease liabilities ', 39), (' Lease interest expense ', 39), (' Lease liabilities interest expense ', 39), (' Interest on lease liabilities ', 39), (' Unwind of discount on Lease Liability', 39), (' interest ', 38), (' Interest on leases ', 38), (' Interest expenses ', 33), (' Unwind of discount on decommissioning provision ', 28), (' cash credit ', 27), (' debt ', 25), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('loan ', 50), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' bank facilities ', 40), (' Interest accrued on loans ', 38), (' Other interest expense ', 36), (' Interest on leases ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' interest income ', 36), (' Interest on lease liabilities ', 36), (' Unwind of discount on Lease Liability', 36), (' cash credit ', 27), (' Interest expenses ', 27), (' Lease interest expense ', 27), (' Unwind of discount on decommissioning provision ', 27), (' debt ', 25), (' bonds ', 25), (' interest ', 25), (' borrowings ', 17), (' debenture ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' interest income ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Other interest expense ', 40), (' interest ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 38), (' Interest expense from financial liabilities measured at amortised cost ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Lease interest expense ', 37), (' Interest on lease liabilities ', 37), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 35), (' Unwind of discount on Lease Liability', 35), (' borrowings ', 33), (' Interest expenses ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 52), ('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Other interest expense ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Lease liabilities interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' interest ', 38), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Interest on leases ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' cash credit ', 36), (' Interest on lease liabilities ', 35), (' Unwind of discount on Lease Liability', 33), (' debenture ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 11, 12], 'score': [100, 100, 100, 100], 'value': [-8674.0, -1069.0, -3853.0, -900.0], 'label': ['Total Interest cost', 'Total Interest on lease', 'Total Interest cost', 'Total Interest on lease'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest income', 81)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest income', 67)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('interest income', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('interest income', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('interest income', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('interest income', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [('interest income', 81)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [('interest income', 67)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [('interest income', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [('interest income', 50)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [('interest income', 36)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [('interest income', 43)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 11], 'score': [81, 81], 'value': [-8674.0, -3853.0], 'label': ['Total Interest cost', 'Total Interest cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:04+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax ']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 12:59:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories ', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' Profit from discontinued operation ', 39), (' other opertaing income ', 38), (' finance income and finance cost ', 33), (' share of profit of equity accounted investees ', 33), (' Finance income and finance costs ', 33), (' other income ', 32), (' Other income ', 32), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories ', 29), (' other gains/losses ', 28), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 26), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' interest revenue ', 21), (' net of tax ', 19), (' net of tax ', 19), (' finance expenses', 15), (' expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' other gains/losses ', 45), (' Loss on revaluation of inventories ', 43), (' other opertaing income ', 42), (' share of profit of equity accounted investees ', 40), (' other income ', 39), (' Other income ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 35), (' interest revenue ', 35), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairment loss ', 33), (' Share of profit of equity-accounted investees, net of income tax ', 33), (' Impairement (expenses)/reversal ', 31), (' finance income and finance cost ', 30), (' finance income and costs ', 30), (' Finance income and finance costs ', 30), (' Finance income and costs ', 30), ('finance cost ', 28), (' net of tax ', 19), (' net of tax ', 19), (' finance expenses', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories ', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 31), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' finance income and costs ', 40), (' other income and revenue ', 40), (' Finance income and costs ', 40), (' Loss on revaluation of inventories ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 38), (' interest gains and losses ', 37), (' Profit from discontinued operation ', 37), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 35), (' Share of gain/(loss) of joint venture ', 35), (' other opertaing income ', 32), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' other gains/losses ', 28), (' other income ', 24), (' Other income ', 24), (' finance expenses', 23), (' Impairment loss ', 19), (' net of tax ', 17), (' net of tax ', 17), (' expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Loss on revaluation of inventories ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 39), (' Share of gain/(loss) of joint venture ', 39), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' interest revenue ', 35), (' Profit from discontinued operation ', 35), (' finance income and finance cost ', 34), (' Finance income and finance costs ', 34), (' other gains/losses ', 32), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 29), ('finance cost ', 28), (' Impairment loss ', 28), (' Impairement (expenses)/reversal ', 27), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Loss on revaluation of inventories ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 39), (' Share of gain/(loss) of joint venture ', 39), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' interest revenue ', 35), (' Profit from discontinued operation ', 35), (' finance income and finance cost ', 34), (' Finance income and finance costs ', 34), (' other gains/losses ', 32), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 29), ('finance cost ', 28), (' Impairment loss ', 28), (' Impairement (expenses)/reversal ', 27), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' finance income and costs ', 71), (' Finance income and costs ', 71), (' finance income and finance cost ', 63), (' Finance income and finance costs ', 63), (' net finance costs ', 57), ('finance cost ', 50), (' finance expenses', 46), (' other income and revenue ', 46), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' interest gains and losses ', 40), (' Loss on revaluation of inventories ', 35), (' other opertaing income ', 32), (' Profit from discontinued operation ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' interest revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Impairement (expenses)/reversal ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses', 96), ('finance cost ', 64), (' expenses ', 60), (' Impairement (expenses)/reversal ', 59), (' finance income and costs ', 57), (' Finance income and costs ', 57), (' net finance costs ', 55), (' finance income and finance cost ', 48), (' Finance income and finance costs ', 48), (' interest revenue ', 34), (' share of profit of equity accounted investees ', 29), (' Share of gain/(loss) of joint venture ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on revaluation of inventories ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' other income ', 24), (' Other income ', 24), (' Impairment loss ', 24), (' Profit from discontinued operation ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' other gains/losses ', 21), (' other opertaing income ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Loss on revaluation of inventories ', 49), (' interest gains and losses ', 43), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 40), (' finance income and costs ', 39), (' Impairment loss ', 39), (' Finance income and costs ', 39), (' finance income and finance cost ', 38), (' Finance income and finance costs ', 38), (' other opertaing income ', 37), (' finance expenses', 36), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' other income and revenue ', 33), ('finance cost ', 32), (' other income ', 32), (' Other income ', 32), (' expenses ', 31), (' Impairement (expenses)/reversal ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 29), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories ', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 56), (' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories ', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' net of tax ', 56), (' net of tax ', 56), (' finance expenses', 52), (' expenses ', 50), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 36), (' interest gains and losses ', 35), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' net finance costs ', 30), (' other gains/losses ', 30), ('finance cost ', 28), (' other income ', 28), (' Other income ', 28), (' finance income and finance cost ', 26), (' finance income and costs ', 26), (' Finance income and finance costs ', 26), (' Finance income and costs ', 26), (' Impairment loss ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5, 6, 11, 13], 'score': 100, 'value': -10700.0, 'line_item_label': ['Expenses', 'Other income', 'Other income', 'Financial expenses', 'Net financing costs'], 'note_numbers': [nan, nan, '6', '3', '3'], 'line_item_value': [0.0, 0.0, 363.0, -5550.0, -5513.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories ', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' Profit from discontinued operation ', 39), (' other opertaing income ', 38), (' finance income and finance cost ', 33), (' share of profit of equity accounted investees ', 33), (' Finance income and finance costs ', 33), (' other income ', 32), (' Other income ', 32), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories ', 29), (' other gains/losses ', 28), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 26), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' interest revenue ', 21), (' net of tax ', 19), (' net of tax ', 19), (' finance expenses', 15), (' expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' other gains/losses ', 45), (' Loss on revaluation of inventories ', 43), (' other opertaing income ', 42), (' share of profit of equity accounted investees ', 40), (' other income ', 39), (' Other income ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 35), (' interest revenue ', 35), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairment loss ', 33), (' Share of profit of equity-accounted investees, net of income tax ', 33), (' Impairement (expenses)/reversal ', 31), (' finance income and finance cost ', 30), (' finance income and costs ', 30), (' Finance income and finance costs ', 30), (' Finance income and costs ', 30), ('finance cost ', 28), (' net of tax ', 19), (' net of tax ', 19), (' finance expenses', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories ', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 31), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' finance income and costs ', 40), (' other income and revenue ', 40), (' Finance income and costs ', 40), (' Loss on revaluation of inventories ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 38), (' interest gains and losses ', 37), (' Profit from discontinued operation ', 37), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 35), (' Share of gain/(loss) of joint venture ', 35), (' other opertaing income ', 32), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' other gains/losses ', 28), (' other income ', 24), (' Other income ', 24), (' finance expenses', 23), (' Impairment loss ', 19), (' net of tax ', 17), (' net of tax ', 17), (' expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Loss on revaluation of inventories ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 39), (' Share of gain/(loss) of joint venture ', 39), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' interest revenue ', 35), (' Profit from discontinued operation ', 35), (' finance income and finance cost ', 34), (' Finance income and finance costs ', 34), (' other gains/losses ', 32), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 29), ('finance cost ', 28), (' Impairment loss ', 28), (' Impairement (expenses)/reversal ', 27), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Loss on revaluation of inventories ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 39), (' Share of gain/(loss) of joint venture ', 39), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' interest revenue ', 35), (' Profit from discontinued operation ', 35), (' finance income and finance cost ', 34), (' Finance income and finance costs ', 34), (' other gains/losses ', 32), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 29), ('finance cost ', 28), (' Impairment loss ', 28), (' Impairement (expenses)/reversal ', 27), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' finance income and costs ', 71), (' Finance income and costs ', 71), (' finance income and finance cost ', 63), (' Finance income and finance costs ', 63), (' net finance costs ', 57), ('finance cost ', 50), (' finance expenses', 46), (' other income and revenue ', 46), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' interest gains and losses ', 40), (' Loss on revaluation of inventories ', 35), (' other opertaing income ', 32), (' Profit from discontinued operation ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' interest revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Impairement (expenses)/reversal ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 11)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses', 96), ('finance cost ', 64), (' expenses ', 60), (' Impairement (expenses)/reversal ', 59), (' finance income and costs ', 57), (' Finance income and costs ', 57), (' net finance costs ', 55), (' finance income and finance cost ', 48), (' Finance income and finance costs ', 48), (' interest revenue ', 34), (' share of profit of equity accounted investees ', 29), (' Share of gain/(loss) of joint venture ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on revaluation of inventories ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' other income ', 24), (' Other income ', 24), (' Impairment loss ', 24), (' Profit from discontinued operation ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' other gains/losses ', 21), (' other opertaing income ', 19)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Loss on revaluation of inventories ', 49), (' interest gains and losses ', 43), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 40), (' finance income and costs ', 39), (' Impairment loss ', 39), (' Finance income and costs ', 39), (' finance income and finance cost ', 38), (' Finance income and finance costs ', 38), (' other opertaing income ', 37), (' finance expenses', 36), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' other income and revenue ', 33), ('finance cost ', 32), (' other income ', 32), (' Other income ', 32), (' expenses ', 31), (' Impairement (expenses)/reversal ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 29), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories ', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 56), (' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories ', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' net of tax ', 56), (' net of tax ', 56), (' finance expenses', 52), (' expenses ', 50), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 36), (' interest gains and losses ', 35), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' net finance costs ', 30), (' other gains/losses ', 30), ('finance cost ', 28), (' other income ', 28), (' Other income ', 28), (' finance income and finance cost ', 26), (' finance income and costs ', 26), (' Finance income and finance costs ', 26), (' Finance income and costs ', 26), (' Impairment loss ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5, 6, 11, 13], 'score': 100, 'value': -22589.0, 'line_item_label': ['Expenses', 'Other income', 'Other income', 'Financial expenses', 'Net financing costs'], 'note_numbers': [nan, nan, '6', '3', '3'], 'line_item_value': [0.0, 0.0, 148.0, -10669.0, -12068.0]}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' other ', 60), (' Commision rebate ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' government grants ', 50), (' dividend from other parties ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' Investment in joint venture ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Loss on loan refinancing ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Arising from inventory of cranes ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Other income - Bank guarantee ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' commission revenue ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' japan recoveries ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' plant and equipment ', 40), (' Net PPE disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of spare parts ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' other income ', 30), (' margin charge income ', 30), (' Asset impairment ', 30), (' Accretion expense ', 30), (' Bank charges', 30), (' share of jv income ', 20), (' sundry income ', 20), (' Miscellanous income ', 20), (' Impairment loss ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' government grants ', 100), (' other ', 60), (' Other income - Bank guarantee ', 59), (' other miscellaneous - net (loss)/gain ', 53), (' net other foreign exchange (losses)/gains ', 53), (' net gain / loss on disposal of property plant and equipment  ', 53), (' other miscellaneous - net (loss)/gain ', 53), (' Net other foreign exchange (losses)/gains ', 53), (' Other expense - Net loss on sale or property, plant and equipment ', 53), ('other revenue ', 50), (' foreign exchange gain ', 48), (' dividend from other parties ', 48), (' net foreign exchange gain ', 48), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' Investment in joint venture ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Loss on loan refinancing ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' other income ', 45), (' Net foreign losses ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' secondment income (tw recovery) ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of spare parts ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 35), (' paid by customers - at amortised cost ', 35), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' Loss on sale of disposal of assets ', 35), (' Interest on unwinding of discount in provisions ', 35), (' Profit from discontinued operation ', 35), (' Net loss on disposal of property ', 35), (' quota lease income ', 31), (' Bank charges', 30), (' margin charge income ', 29), (' share of jv income ', 27), (' plant and equipment ', 27), (' Miscellanous income ', 27), (' sundry income ', 25), (' Asset impairment ', 25), (' Accretion expense ', 23), (' Impairment loss ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' other ', 100), (' sundry income ', 75), (' other income ', 73), (' share of jv income ', 73), ('other revenue ', 67), (' net other foreign exchange (losses)/gains ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Net foreign losses ', 56), (' Sub-lease rental income ', 55), (' government grants ', 50), (' net foreign exchange gain ', 50), (' margin charge income ', 50), (' Other income - Bank guarantee ', 49), (' dividend from other parties ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' net (loss)/profit on disposal of non-current assets ', 48), (' Remuneration from services linked to newly acquired entities ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Investment in joint venture ', 47), (' Miscellanous income ', 47), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' secondment income (tw recovery) ', 43), (' paid by customers - at amortised cost ', 43), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Arising from inventory of cranes ', 41), (' foreign exchange gain ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Bank charges', 40), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' japan recoveries ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Impairment loss ', 36), (' Arising from inventory of spare parts ', 36), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' plant and equipment ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 64), (' dividend from other parties ', 62), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Other expense - Loss on inventory obsolescence ', 57), (' Sub-lease rental income ', 55), (' government grants ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other income - Bank guarantee ', 48), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Miscellanous income ', 47), (' Accretion expense ', 46), (' Net foreign losses ', 45), (' net foreign exchange gain ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' net foreign exchange gains/(losses) ', 43), (' net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Net foreign exchange gains/(losses) ', 43), (' Net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' secondment income (tw recovery) ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net ppe disposal (loss)/gain ', 39), (' Profit from discontinued operation ', 39), (' Net loss on disposal of property ', 39), (' Loss on loan refinancing ', 39), (' Net PPE disposal (loss)/gain ', 39), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Profit on sale of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Arising from inventory of cranes ', 35), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 30), (' commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' other ', 60), (' Commision rebate ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' government grants ', 50), (' dividend from other parties ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' Investment in joint venture ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Loss on loan refinancing ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Arising from inventory of cranes ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Other income - Bank guarantee ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' commission revenue ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' japan recoveries ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' plant and equipment ', 40), (' Net PPE disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of spare parts ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' other income ', 30), (' margin charge income ', 30), (' Asset impairment ', 30), (' Accretion expense ', 30), (' Bank charges', 30), (' share of jv income ', 20), (' sundry income ', 20), (' Miscellanous income ', 20), (' Impairment loss ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' government grants ', 100), (' other ', 60), (' Other income - Bank guarantee ', 59), (' other miscellaneous - net (loss)/gain ', 53), (' net other foreign exchange (losses)/gains ', 53), (' net gain / loss on disposal of property plant and equipment  ', 53), (' other miscellaneous - net (loss)/gain ', 53), (' Net other foreign exchange (losses)/gains ', 53), (' Other expense - Net loss on sale or property, plant and equipment ', 53), ('other revenue ', 50), (' foreign exchange gain ', 48), (' dividend from other parties ', 48), (' net foreign exchange gain ', 48), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' Investment in joint venture ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Loss on loan refinancing ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' other income ', 45), (' Net foreign losses ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' secondment income (tw recovery) ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of spare parts ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 35), (' paid by customers - at amortised cost ', 35), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' Loss on sale of disposal of assets ', 35), (' Interest on unwinding of discount in provisions ', 35), (' Profit from discontinued operation ', 35), (' Net loss on disposal of property ', 35), (' quota lease income ', 31), (' Bank charges', 30), (' margin charge income ', 29), (' share of jv income ', 27), (' plant and equipment ', 27), (' Miscellanous income ', 27), (' sundry income ', 25), (' Asset impairment ', 25), (' Accretion expense ', 23), (' Impairment loss ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' other ', 100), (' sundry income ', 75), (' other income ', 73), (' share of jv income ', 73), ('other revenue ', 67), (' net other foreign exchange (losses)/gains ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Net foreign losses ', 56), (' Sub-lease rental income ', 55), (' government grants ', 50), (' net foreign exchange gain ', 50), (' margin charge income ', 50), (' Other income - Bank guarantee ', 49), (' dividend from other parties ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' net (loss)/profit on disposal of non-current assets ', 48), (' Remuneration from services linked to newly acquired entities ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Investment in joint venture ', 47), (' Miscellanous income ', 47), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' secondment income (tw recovery) ', 43), (' paid by customers - at amortised cost ', 43), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Arising from inventory of cranes ', 41), (' foreign exchange gain ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Bank charges', 40), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' japan recoveries ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Impairment loss ', 36), (' Arising from inventory of spare parts ', 36), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' plant and equipment ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 64), (' dividend from other parties ', 62), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Other expense - Loss on inventory obsolescence ', 57), (' Sub-lease rental income ', 55), (' government grants ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other income - Bank guarantee ', 48), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Miscellanous income ', 47), (' Accretion expense ', 46), (' Net foreign losses ', 45), (' net foreign exchange gain ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' net foreign exchange gains/(losses) ', 43), (' net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Net foreign exchange gains/(losses) ', 43), (' Net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' secondment income (tw recovery) ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net ppe disposal (loss)/gain ', 39), (' Profit from discontinued operation ', 39), (' Net loss on disposal of property ', 39), (' Loss on loan refinancing ', 39), (' Net PPE disposal (loss)/gain ', 39), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Profit on sale of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Arising from inventory of cranes ', 35), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 30), (' commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 3, 4, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 94.0, 52.0, 148.0, 234.0, 98.0, 27.0, 363.0], 'label': ['None Government grant', 'None Other forestry income', 'None Other export income', 'None Total other income', 'None Government grant', 'None Other forestry income', 'None Other export income', 'None Total other income'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' other ', 60), (' Commision rebate ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' government grants ', 50), (' dividend from other parties ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' Investment in joint venture ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Loss on loan refinancing ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Arising from inventory of cranes ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Other income - Bank guarantee ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' commission revenue ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' japan recoveries ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' plant and equipment ', 40), (' Net PPE disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of spare parts ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' other income ', 30), (' margin charge income ', 30), (' Asset impairment ', 30), (' Accretion expense ', 30), (' Bank charges', 30), (' share of jv income ', 20), (' sundry income ', 20), (' Miscellanous income ', 20), (' Impairment loss ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' government grants ', 100), (' other ', 60), (' Other income - Bank guarantee ', 59), (' other miscellaneous - net (loss)/gain ', 53), (' net other foreign exchange (losses)/gains ', 53), (' net gain / loss on disposal of property plant and equipment  ', 53), (' other miscellaneous - net (loss)/gain ', 53), (' Net other foreign exchange (losses)/gains ', 53), (' Other expense - Net loss on sale or property, plant and equipment ', 53), ('other revenue ', 50), (' foreign exchange gain ', 48), (' dividend from other parties ', 48), (' net foreign exchange gain ', 48), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' Investment in joint venture ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Loss on loan refinancing ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' other income ', 45), (' Net foreign losses ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' secondment income (tw recovery) ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of spare parts ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 35), (' paid by customers - at amortised cost ', 35), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' Loss on sale of disposal of assets ', 35), (' Interest on unwinding of discount in provisions ', 35), (' Profit from discontinued operation ', 35), (' Net loss on disposal of property ', 35), (' quota lease income ', 31), (' Bank charges', 30), (' margin charge income ', 29), (' share of jv income ', 27), (' plant and equipment ', 27), (' Miscellanous income ', 27), (' sundry income ', 25), (' Asset impairment ', 25), (' Accretion expense ', 23), (' Impairment loss ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' other ', 100), (' sundry income ', 75), (' other income ', 73), (' share of jv income ', 73), ('other revenue ', 67), (' net other foreign exchange (losses)/gains ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Net foreign losses ', 56), (' Sub-lease rental income ', 55), (' government grants ', 50), (' net foreign exchange gain ', 50), (' margin charge income ', 50), (' Other income - Bank guarantee ', 49), (' dividend from other parties ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' net (loss)/profit on disposal of non-current assets ', 48), (' Remuneration from services linked to newly acquired entities ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Investment in joint venture ', 47), (' Miscellanous income ', 47), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' secondment income (tw recovery) ', 43), (' paid by customers - at amortised cost ', 43), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Arising from inventory of cranes ', 41), (' foreign exchange gain ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Bank charges', 40), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' japan recoveries ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Impairment loss ', 36), (' Arising from inventory of spare parts ', 36), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' plant and equipment ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 64), (' dividend from other parties ', 62), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Other expense - Loss on inventory obsolescence ', 57), (' Sub-lease rental income ', 55), (' government grants ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other income - Bank guarantee ', 48), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Miscellanous income ', 47), (' Accretion expense ', 46), (' Net foreign losses ', 45), (' net foreign exchange gain ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' net foreign exchange gains/(losses) ', 43), (' net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Net foreign exchange gains/(losses) ', 43), (' Net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' secondment income (tw recovery) ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net ppe disposal (loss)/gain ', 39), (' Profit from discontinued operation ', 39), (' Net loss on disposal of property ', 39), (' Loss on loan refinancing ', 39), (' Net PPE disposal (loss)/gain ', 39), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Profit on sale of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Arising from inventory of cranes ', 35), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 30), (' commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none rebate , res_fuzz_match = [(' other ', 60), (' Commision rebate ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' government grants ', 50), (' dividend from other parties ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' Investment in joint venture ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Loss on loan refinancing ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Arising from inventory of cranes ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Other income - Bank guarantee ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' commission revenue ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' japan recoveries ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' plant and equipment ', 40), (' Net PPE disposal (loss)/gain ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of spare parts ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' other income ', 30), (' margin charge income ', 30), (' Asset impairment ', 30), (' Accretion expense ', 30), (' Bank charges', 30), (' share of jv income ', 20), (' sundry income ', 20), (' Miscellanous income ', 20), (' Impairment loss ', 10)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none government grant , res_fuzz_match = [(' government grants ', 100), (' other ', 60), (' Other income - Bank guarantee ', 59), (' other miscellaneous - net (loss)/gain ', 53), (' net other foreign exchange (losses)/gains ', 53), (' net gain / loss on disposal of property plant and equipment  ', 53), (' other miscellaneous - net (loss)/gain ', 53), (' Net other foreign exchange (losses)/gains ', 53), (' Other expense - Net loss on sale or property, plant and equipment ', 53), ('other revenue ', 50), (' foreign exchange gain ', 48), (' dividend from other parties ', 48), (' net foreign exchange gain ', 48), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' Investment in joint venture ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Loss on loan refinancing ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' other income ', 45), (' Net foreign losses ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' secondment income (tw recovery) ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of spare parts ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 35), (' paid by customers - at amortised cost ', 35), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' Loss on sale of disposal of assets ', 35), (' Interest on unwinding of discount in provisions ', 35), (' Profit from discontinued operation ', 35), (' Net loss on disposal of property ', 35), (' quota lease income ', 31), (' Bank charges', 30), (' margin charge income ', 29), (' share of jv income ', 27), (' plant and equipment ', 27), (' Miscellanous income ', 27), (' sundry income ', 25), (' Asset impairment ', 25), (' Accretion expense ', 23), (' Impairment loss ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other forestry income , res_fuzz_match = [(' other ', 100), (' sundry income ', 75), (' other income ', 73), (' share of jv income ', 73), ('other revenue ', 67), (' net other foreign exchange (losses)/gains ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Net foreign losses ', 56), (' Sub-lease rental income ', 55), (' government grants ', 50), (' net foreign exchange gain ', 50), (' margin charge income ', 50), (' Other income - Bank guarantee ', 49), (' dividend from other parties ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' net (loss)/profit on disposal of non-current assets ', 48), (' Remuneration from services linked to newly acquired entities ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Investment in joint venture ', 47), (' Miscellanous income ', 47), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' secondment income (tw recovery) ', 43), (' paid by customers - at amortised cost ', 43), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Arising from inventory of cranes ', 41), (' foreign exchange gain ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Bank charges', 40), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' japan recoveries ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Impairment loss ', 36), (' Arising from inventory of spare parts ', 36), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' plant and equipment ', 27)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none other export income , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 64), (' dividend from other parties ', 62), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Other expense - Loss on inventory obsolescence ', 57), (' Sub-lease rental income ', 55), (' government grants ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' Other income - Bank guarantee ', 48), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Miscellanous income ', 47), (' Accretion expense ', 46), (' Net foreign losses ', 45), (' net foreign exchange gain ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' net foreign exchange gains/(losses) ', 43), (' net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Net foreign exchange gains/(losses) ', 43), (' Net foreign exchange (loss)/gain ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' secondment income (tw recovery) ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net ppe disposal (loss)/gain ', 39), (' Profit from discontinued operation ', 39), (' Net loss on disposal of property ', 39), (' Loss on loan refinancing ', 39), (' Net PPE disposal (loss)/gain ', 39), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Profit on sale of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Arising from inventory of cranes ', 35), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 30), (' commission revenue ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 3, 4, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 94.0, 52.0, 148.0, 234.0, 98.0, 27.0, 363.0], 'label': ['None Government grant', 'None Other forestry income', 'None Other export income', 'None Total other income', 'None Government grant', 'None Other forestry income', 'None Other export income', 'None Total other income'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' Miscellanous income ', 60), (' margin charge income ', 57), (' share of jv income ', 55), (' secondment income (tw recovery) ', 53), (' quota lease income ', 50), (' profit from discontinued operation ', 47), (' net foreign exchange gains/(losses) ', 47), (' Sub-lease rental income ', 47), (' Profit from discontinued operation ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Other income - Bank guarantee ', 42), (' plant and equipment ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' Net foreign losses ', 39), (' Investment in joint venture ', 38), (' Accretion expense ', 38), (' foreign exchange gain ', 37), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' Other expense - Loss on inventory obsolescence ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' Asset impairment ', 33), (' Commision rebate ', 33), (' net ppe disposal (loss)/gain ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net PPE disposal (loss)/gain ', 32), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on sale of disposal of assets ', 26), (' Net loss on disposal of property ', 26), ('other revenue ', 25), (' government grants ', 25), (' other ', 20), (' Profit on sale of assets ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' other income ', 55), (' margin charge income ', 51), (' effective portion of changes in fair value of cash flow ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' paid by customers - at amortised cost ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' quota lease income ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' dividend from other parties ', 42), (' profit from discontinued operation ', 42), (' Sub-lease rental income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Profit from discontinued operation ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Derivaties at FVTPL- net change in fair value ', 42), (' Other income - Bank guarantee ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Bank charges', 40), (' Investment in joint venture ', 38), (' Net foreign losses ', 38), (' foreign exchange gain ', 37), (' net foreign exchange gain ', 37), (' net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net other foreign exchange (losses)/gains ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' net ppe disposal (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net loss on disposal of property ', 32), (' Net PPE disposal (loss)/gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 24), ('other revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' other ', 60), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' quota lease income ', 50), (' Interest on unwinding of discount in provisions ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 44), (' Net foreign losses ', 44), (' net of tax ', 43), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Loss on sale of disposal of assets ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' margin charge income ', 40), (' Miscellanous income ', 40), (' Accretion expense ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Net loss on disposal of property ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other income - Bank guarantee ', 37), (' Impairment loss ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' net foreign exchange gain ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' plant and equipment ', 27), (' foreign exchange gain ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on sale of disposal of assets ', 47), (' Power purchase agreement realised gain ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), ('other revenue ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Investment in joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Other income - Bank guarantee ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Asset impairment ', 36), (' Impairment loss ', 36), (' government grants ', 35), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' foreign exchange gain ', 32), (' Sub-lease rental income ', 32), (' Net loss on disposal of property ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 29), (' Miscellanous income ', 28), (' sundry income ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank charges', 56), (' effective portion of changes in fair value of cash flow ', 50), (' Other income - Bank guarantee ', 50), (' net of tax ', 43), (' japan recoveries ', 43), (' quota lease income ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Profit on sale of assets ', 43), (' Power purchase agreement realised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' net of tax ', 43), (' net of tax ', 43), (' plant and equipment ', 43), (' Loss on loan refinancing ', 43), (' Arising from inventory of cranes ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Derivaties at FVTPL- net change in fair value ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' other ', 40), (' other income ', 36), (' net foreign exchange gain ', 36), (' profit from discontinued operation ', 36), (' secondment income (tw recovery) ', 36), (' net foreign exchange gains/(losses) ', 36), (' paid by customers - at amortised cost ', 36), (' net foreign exchange (loss)/gain ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Sub-lease rental income ', 36), (' Remuneration from services linked to newly acquired entities ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Net foreign exchange (loss)/gain ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of spare parts ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33), (' government grants ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' foreign exchange gain ', 29), (' dividend from other parties ', 29), (' margin charge income ', 29), (' net (loss)/profit on disposal of non-current assets ', 29), (' Loss on sale of disposal of assets ', 29), (' Net (loss)/profit on disposal of non-current assets ', 29), (' Miscellanous income ', 29), (' Net foreign losses ', 29), (' insurance proceeds ', 27), (' share of jv income ', 27), (' Asset impairment ', 25), (' Net loss on disposal of property ', 21), (' Impairment loss ', 18), (' sundry income ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' Loss on loan refinancing ', 56), (' Other income - Bank guarantee ', 56), (' share of jv income ', 55), (' dividend from other parties ', 51), (' government grants ', 50), (' quota lease income ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' net foreign exchange gain ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' margin charge income ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' Sub-lease rental income ', 39), (' Loss on sale of disposal of assets ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Interest on unwinding of discount in provisions ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of cranes ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' Net foreign losses ', 38), (' foreign exchange gain ', 33), (' secondment income (tw recovery) ', 33), (' net ppe disposal (loss)/gain ', 33), (' Asset impairment ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Investment in joint venture ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Miscellanous income ', 33), (' Accretion expense ', 31), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25), (' commission revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' paid by customers - at amortised cost ', 45), (' quota lease income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Profit on sale of assets ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Derivaties at FVTPL- net change in fair value ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other ', 40), (' other income ', 38), (' dividend from other parties ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' profit from discontinued operation ', 36), (' net foreign exchange gains/(losses) ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Loss on sale of disposal of assets ', 36), (' Power purchase agreement realised gain ', 36), (' net gain / loss on disposal of property plant and equipment  ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net loss on disposal of property ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Loss on loan refinancing ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Net foreign losses ', 36), (' Other expense - Net loss on sale or property, plant and equipment ', 36), (' Bank charges', 30), ('other revenue ', 27), (' government grants ', 27), (' foreign exchange gain ', 27), (' net foreign exchange gain ', 27), (' share of jv income ', 27), (' secondment income (tw recovery) ', 27), (' japan recoveries ', 27), (' margin charge income ', 27), (' net foreign exchange (loss)/gain ', 27), (' net (loss)/profit on disposal of non-current assets ', 27), (' Asset impairment ', 27), (' Remuneration from services linked to newly acquired entities ', 27), (' Power purchase agreement unrelaised gain ', 27), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Net foreign exchange (loss)/gain ', 27), (' Net (loss)/profit on disposal of non-current assets ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 27), (' Other income - Bank guarantee ', 27), (' commission revenue ', 18), (' insurance proceeds ', 18), (' sundry income ', 18), (' Accretion expense ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' net other foreign exchange (losses)/gains ', 69), (' Net other foreign exchange (losses)/gains ', 69), (' net foreign exchange (loss)/gain ', 65), (' Net foreign exchange (loss)/gain ', 65), (' net foreign exchange gains/(losses) ', 62), (' Net foreign exchange gains/(losses) ', 62), (' Net foreign losses ', 62), (' insurance proceeds ', 55), (' foreign exchange gain ', 55), (' Impairment loss ', 55), (' net foreign exchange gain ', 54), ('other revenue ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Loss on loan refinancing ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' other miscellaneous - net (loss)/gain ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' sundry income ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 38), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement realised gain ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Profit from discontinued operation ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 38), (' Profit on sale of assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Other income - Bank guarantee ', 36), (' net gain / loss on disposal of property plant and equipment  ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Net loss on disposal of property ', 29), (' Asset impairment ', 25), (' dividend from other parties ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Derivaties at FVTPL- net change in fair value ', 52), (' Asset impairment ', 50), (' net foreign exchange gain ', 48), (' paid by customers - at amortised cost ', 48), (' net foreign exchange (loss)/gain ', 48), (' net other foreign exchange (losses)/gains ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net other foreign exchange (losses)/gains ', 48), (' plant and equipment ', 47), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' Impairment loss ', 45), (' effective portion of changes in fair value of cash flow ', 43), (' profit from discontinued operation ', 43), (' secondment income (tw recovery) ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Loss on sale of disposal of assets ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Investment in joint venture ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Profit from discontinued operation ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Other income - Bank guarantee ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' Other expense - Loss on inventory obsolescence ', 43), ('other revenue ', 42), (' sundry income ', 42), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' insurance proceeds ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of cranes ', 38), (' Arising from inventory of spare parts ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' government grants ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Net loss on disposal of property ', 33), (' Commision rebate ', 33), (' commission revenue ', 29), (' dividend from other parties ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' Miscellanous income ', 60), (' margin charge income ', 57), (' share of jv income ', 55), (' secondment income (tw recovery) ', 53), (' quota lease income ', 50), (' profit from discontinued operation ', 47), (' net foreign exchange gains/(losses) ', 47), (' Sub-lease rental income ', 47), (' Profit from discontinued operation ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Other income - Bank guarantee ', 42), (' plant and equipment ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' Net foreign losses ', 39), (' Investment in joint venture ', 38), (' Accretion expense ', 38), (' foreign exchange gain ', 37), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' Other expense - Loss on inventory obsolescence ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' Asset impairment ', 33), (' Commision rebate ', 33), (' net ppe disposal (loss)/gain ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net PPE disposal (loss)/gain ', 32), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on sale of disposal of assets ', 26), (' Net loss on disposal of property ', 26), ('other revenue ', 25), (' government grants ', 25), (' other ', 20), (' Profit on sale of assets ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' other income ', 55), (' margin charge income ', 51), (' effective portion of changes in fair value of cash flow ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' paid by customers - at amortised cost ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' quota lease income ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' dividend from other parties ', 42), (' profit from discontinued operation ', 42), (' Sub-lease rental income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Profit from discontinued operation ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Derivaties at FVTPL- net change in fair value ', 42), (' Other income - Bank guarantee ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Bank charges', 40), (' Investment in joint venture ', 38), (' Net foreign losses ', 38), (' foreign exchange gain ', 37), (' net foreign exchange gain ', 37), (' net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net other foreign exchange (losses)/gains ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' net ppe disposal (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net loss on disposal of property ', 32), (' Net PPE disposal (loss)/gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 24), ('other revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' other ', 60), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' quota lease income ', 50), (' Interest on unwinding of discount in provisions ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 44), (' Net foreign losses ', 44), (' net of tax ', 43), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Loss on sale of disposal of assets ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' margin charge income ', 40), (' Miscellanous income ', 40), (' Accretion expense ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Net loss on disposal of property ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other income - Bank guarantee ', 37), (' Impairment loss ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' net foreign exchange gain ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' plant and equipment ', 27), (' foreign exchange gain ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on sale of disposal of assets ', 47), (' Power purchase agreement realised gain ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), ('other revenue ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Investment in joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Other income - Bank guarantee ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Asset impairment ', 36), (' Impairment loss ', 36), (' government grants ', 35), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' foreign exchange gain ', 32), (' Sub-lease rental income ', 32), (' Net loss on disposal of property ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 29), (' Miscellanous income ', 28), (' sundry income ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank charges', 56), (' effective portion of changes in fair value of cash flow ', 50), (' Other income - Bank guarantee ', 50), (' net of tax ', 43), (' japan recoveries ', 43), (' quota lease income ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Profit on sale of assets ', 43), (' Power purchase agreement realised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' net of tax ', 43), (' net of tax ', 43), (' plant and equipment ', 43), (' Loss on loan refinancing ', 43), (' Arising from inventory of cranes ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Derivaties at FVTPL- net change in fair value ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' other ', 40), (' other income ', 36), (' net foreign exchange gain ', 36), (' profit from discontinued operation ', 36), (' secondment income (tw recovery) ', 36), (' net foreign exchange gains/(losses) ', 36), (' paid by customers - at amortised cost ', 36), (' net foreign exchange (loss)/gain ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Sub-lease rental income ', 36), (' Remuneration from services linked to newly acquired entities ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Net foreign exchange (loss)/gain ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of spare parts ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33), (' government grants ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' foreign exchange gain ', 29), (' dividend from other parties ', 29), (' margin charge income ', 29), (' net (loss)/profit on disposal of non-current assets ', 29), (' Loss on sale of disposal of assets ', 29), (' Net (loss)/profit on disposal of non-current assets ', 29), (' Miscellanous income ', 29), (' Net foreign losses ', 29), (' insurance proceeds ', 27), (' share of jv income ', 27), (' Asset impairment ', 25), (' Net loss on disposal of property ', 21), (' Impairment loss ', 18), (' sundry income ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' Loss on loan refinancing ', 56), (' Other income - Bank guarantee ', 56), (' share of jv income ', 55), (' dividend from other parties ', 51), (' government grants ', 50), (' quota lease income ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' net foreign exchange gain ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' margin charge income ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' Sub-lease rental income ', 39), (' Loss on sale of disposal of assets ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Interest on unwinding of discount in provisions ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of cranes ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' Net foreign losses ', 38), (' foreign exchange gain ', 33), (' secondment income (tw recovery) ', 33), (' net ppe disposal (loss)/gain ', 33), (' Asset impairment ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Investment in joint venture ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Miscellanous income ', 33), (' Accretion expense ', 31), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25), (' commission revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' paid by customers - at amortised cost ', 45), (' quota lease income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Profit on sale of assets ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Derivaties at FVTPL- net change in fair value ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other ', 40), (' other income ', 38), (' dividend from other parties ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' profit from discontinued operation ', 36), (' net foreign exchange gains/(losses) ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Loss on sale of disposal of assets ', 36), (' Power purchase agreement realised gain ', 36), (' net gain / loss on disposal of property plant and equipment  ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net loss on disposal of property ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Loss on loan refinancing ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Net foreign losses ', 36), (' Other expense - Net loss on sale or property, plant and equipment ', 36), (' Bank charges', 30), ('other revenue ', 27), (' government grants ', 27), (' foreign exchange gain ', 27), (' net foreign exchange gain ', 27), (' share of jv income ', 27), (' secondment income (tw recovery) ', 27), (' japan recoveries ', 27), (' margin charge income ', 27), (' net foreign exchange (loss)/gain ', 27), (' net (loss)/profit on disposal of non-current assets ', 27), (' Asset impairment ', 27), (' Remuneration from services linked to newly acquired entities ', 27), (' Power purchase agreement unrelaised gain ', 27), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Net foreign exchange (loss)/gain ', 27), (' Net (loss)/profit on disposal of non-current assets ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 27), (' Other income - Bank guarantee ', 27), (' commission revenue ', 18), (' insurance proceeds ', 18), (' sundry income ', 18), (' Accretion expense ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' net other foreign exchange (losses)/gains ', 69), (' Net other foreign exchange (losses)/gains ', 69), (' net foreign exchange (loss)/gain ', 65), (' Net foreign exchange (loss)/gain ', 65), (' net foreign exchange gains/(losses) ', 62), (' Net foreign exchange gains/(losses) ', 62), (' Net foreign losses ', 62), (' insurance proceeds ', 55), (' foreign exchange gain ', 55), (' Impairment loss ', 55), (' net foreign exchange gain ', 54), ('other revenue ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Loss on loan refinancing ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' other miscellaneous - net (loss)/gain ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' sundry income ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 38), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement realised gain ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Profit from discontinued operation ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 38), (' Profit on sale of assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Other income - Bank guarantee ', 36), (' net gain / loss on disposal of property plant and equipment  ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Net loss on disposal of property ', 29), (' Asset impairment ', 25), (' dividend from other parties ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Derivaties at FVTPL- net change in fair value ', 52), (' Asset impairment ', 50), (' net foreign exchange gain ', 48), (' paid by customers - at amortised cost ', 48), (' net foreign exchange (loss)/gain ', 48), (' net other foreign exchange (losses)/gains ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net other foreign exchange (losses)/gains ', 48), (' plant and equipment ', 47), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' Impairment loss ', 45), (' effective portion of changes in fair value of cash flow ', 43), (' profit from discontinued operation ', 43), (' secondment income (tw recovery) ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Loss on sale of disposal of assets ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Investment in joint venture ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Profit from discontinued operation ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Other income - Bank guarantee ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' Other expense - Loss on inventory obsolescence ', 43), ('other revenue ', 42), (' sundry income ', 42), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' insurance proceeds ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of cranes ', 38), (' Arising from inventory of spare parts ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' government grants ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Net loss on disposal of property ', 33), (' Commision rebate ', 33), (' commission revenue ', 29), (' dividend from other parties ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 14], 'score': [100, 100], 'value': [-832.0, -756.0], 'label': ['Total Other finance', 'Total Other finance'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:04+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' Miscellanous income ', 60), (' margin charge income ', 57), (' share of jv income ', 55), (' secondment income (tw recovery) ', 53), (' quota lease income ', 50), (' profit from discontinued operation ', 47), (' net foreign exchange gains/(losses) ', 47), (' Sub-lease rental income ', 47), (' Profit from discontinued operation ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Other income - Bank guarantee ', 42), (' plant and equipment ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' Net foreign losses ', 39), (' Investment in joint venture ', 38), (' Accretion expense ', 38), (' foreign exchange gain ', 37), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' Other expense - Loss on inventory obsolescence ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' Asset impairment ', 33), (' Commision rebate ', 33), (' net ppe disposal (loss)/gain ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net PPE disposal (loss)/gain ', 32), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on sale of disposal of assets ', 26), (' Net loss on disposal of property ', 26), ('other revenue ', 25), (' government grants ', 25), (' other ', 20), (' Profit on sale of assets ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' other income ', 55), (' margin charge income ', 51), (' effective portion of changes in fair value of cash flow ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' paid by customers - at amortised cost ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' quota lease income ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' dividend from other parties ', 42), (' profit from discontinued operation ', 42), (' Sub-lease rental income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Profit from discontinued operation ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Derivaties at FVTPL- net change in fair value ', 42), (' Other income - Bank guarantee ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Bank charges', 40), (' Investment in joint venture ', 38), (' Net foreign losses ', 38), (' foreign exchange gain ', 37), (' net foreign exchange gain ', 37), (' net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net other foreign exchange (losses)/gains ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' net ppe disposal (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net loss on disposal of property ', 32), (' Net PPE disposal (loss)/gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 24), ('other revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' other ', 60), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' quota lease income ', 50), (' Interest on unwinding of discount in provisions ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 44), (' Net foreign losses ', 44), (' net of tax ', 43), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Loss on sale of disposal of assets ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' margin charge income ', 40), (' Miscellanous income ', 40), (' Accretion expense ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Net loss on disposal of property ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other income - Bank guarantee ', 37), (' Impairment loss ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' net foreign exchange gain ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' plant and equipment ', 27), (' foreign exchange gain ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on sale of disposal of assets ', 47), (' Power purchase agreement realised gain ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), ('other revenue ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Investment in joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Other income - Bank guarantee ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Asset impairment ', 36), (' Impairment loss ', 36), (' government grants ', 35), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' foreign exchange gain ', 32), (' Sub-lease rental income ', 32), (' Net loss on disposal of property ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 29), (' Miscellanous income ', 28), (' sundry income ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank charges', 56), (' effective portion of changes in fair value of cash flow ', 50), (' Other income - Bank guarantee ', 50), (' net of tax ', 43), (' japan recoveries ', 43), (' quota lease income ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Profit on sale of assets ', 43), (' Power purchase agreement realised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' net of tax ', 43), (' net of tax ', 43), (' plant and equipment ', 43), (' Loss on loan refinancing ', 43), (' Arising from inventory of cranes ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Derivaties at FVTPL- net change in fair value ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' other ', 40), (' other income ', 36), (' net foreign exchange gain ', 36), (' profit from discontinued operation ', 36), (' secondment income (tw recovery) ', 36), (' net foreign exchange gains/(losses) ', 36), (' paid by customers - at amortised cost ', 36), (' net foreign exchange (loss)/gain ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Sub-lease rental income ', 36), (' Remuneration from services linked to newly acquired entities ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Net foreign exchange (loss)/gain ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of spare parts ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33), (' government grants ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' foreign exchange gain ', 29), (' dividend from other parties ', 29), (' margin charge income ', 29), (' net (loss)/profit on disposal of non-current assets ', 29), (' Loss on sale of disposal of assets ', 29), (' Net (loss)/profit on disposal of non-current assets ', 29), (' Miscellanous income ', 29), (' Net foreign losses ', 29), (' insurance proceeds ', 27), (' share of jv income ', 27), (' Asset impairment ', 25), (' Net loss on disposal of property ', 21), (' Impairment loss ', 18), (' sundry income ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' Loss on loan refinancing ', 56), (' Other income - Bank guarantee ', 56), (' share of jv income ', 55), (' dividend from other parties ', 51), (' government grants ', 50), (' quota lease income ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' net foreign exchange gain ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' margin charge income ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' Sub-lease rental income ', 39), (' Loss on sale of disposal of assets ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Interest on unwinding of discount in provisions ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of cranes ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' Net foreign losses ', 38), (' foreign exchange gain ', 33), (' secondment income (tw recovery) ', 33), (' net ppe disposal (loss)/gain ', 33), (' Asset impairment ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Investment in joint venture ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Miscellanous income ', 33), (' Accretion expense ', 31), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25), (' commission revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' paid by customers - at amortised cost ', 45), (' quota lease income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Profit on sale of assets ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Derivaties at FVTPL- net change in fair value ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other ', 40), (' other income ', 38), (' dividend from other parties ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' profit from discontinued operation ', 36), (' net foreign exchange gains/(losses) ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Loss on sale of disposal of assets ', 36), (' Power purchase agreement realised gain ', 36), (' net gain / loss on disposal of property plant and equipment  ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net loss on disposal of property ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Loss on loan refinancing ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Net foreign losses ', 36), (' Other expense - Net loss on sale or property, plant and equipment ', 36), (' Bank charges', 30), ('other revenue ', 27), (' government grants ', 27), (' foreign exchange gain ', 27), (' net foreign exchange gain ', 27), (' share of jv income ', 27), (' secondment income (tw recovery) ', 27), (' japan recoveries ', 27), (' margin charge income ', 27), (' net foreign exchange (loss)/gain ', 27), (' net (loss)/profit on disposal of non-current assets ', 27), (' Asset impairment ', 27), (' Remuneration from services linked to newly acquired entities ', 27), (' Power purchase agreement unrelaised gain ', 27), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Net foreign exchange (loss)/gain ', 27), (' Net (loss)/profit on disposal of non-current assets ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 27), (' Other income - Bank guarantee ', 27), (' commission revenue ', 18), (' insurance proceeds ', 18), (' sundry income ', 18), (' Accretion expense ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' net other foreign exchange (losses)/gains ', 69), (' Net other foreign exchange (losses)/gains ', 69), (' net foreign exchange (loss)/gain ', 65), (' Net foreign exchange (loss)/gain ', 65), (' net foreign exchange gains/(losses) ', 62), (' Net foreign exchange gains/(losses) ', 62), (' Net foreign losses ', 62), (' insurance proceeds ', 55), (' foreign exchange gain ', 55), (' Impairment loss ', 55), (' net foreign exchange gain ', 54), ('other revenue ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Loss on loan refinancing ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' other miscellaneous - net (loss)/gain ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' sundry income ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 38), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement realised gain ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Profit from discontinued operation ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 38), (' Profit on sale of assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Other income - Bank guarantee ', 36), (' net gain / loss on disposal of property plant and equipment  ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Net loss on disposal of property ', 29), (' Asset impairment ', 25), (' dividend from other parties ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Derivaties at FVTPL- net change in fair value ', 52), (' Asset impairment ', 50), (' net foreign exchange gain ', 48), (' paid by customers - at amortised cost ', 48), (' net foreign exchange (loss)/gain ', 48), (' net other foreign exchange (losses)/gains ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net other foreign exchange (losses)/gains ', 48), (' plant and equipment ', 47), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' Impairment loss ', 45), (' effective portion of changes in fair value of cash flow ', 43), (' profit from discontinued operation ', 43), (' secondment income (tw recovery) ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Loss on sale of disposal of assets ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Investment in joint venture ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Profit from discontinued operation ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Other income - Bank guarantee ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' Other expense - Loss on inventory obsolescence ', 43), ('other revenue ', 42), (' sundry income ', 42), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' insurance proceeds ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of cranes ', 38), (' Arising from inventory of spare parts ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' government grants ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Net loss on disposal of property ', 33), (' Commision rebate ', 33), (' commission revenue ', 29), (' dividend from other parties ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' Miscellanous income ', 60), (' margin charge income ', 57), (' share of jv income ', 55), (' secondment income (tw recovery) ', 53), (' quota lease income ', 50), (' profit from discontinued operation ', 47), (' net foreign exchange gains/(losses) ', 47), (' Sub-lease rental income ', 47), (' Profit from discontinued operation ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Other income - Bank guarantee ', 42), (' plant and equipment ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' Net foreign losses ', 39), (' Investment in joint venture ', 38), (' Accretion expense ', 38), (' foreign exchange gain ', 37), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' Other expense - Loss on inventory obsolescence ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' Asset impairment ', 33), (' Commision rebate ', 33), (' net ppe disposal (loss)/gain ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net PPE disposal (loss)/gain ', 32), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on sale of disposal of assets ', 26), (' Net loss on disposal of property ', 26), ('other revenue ', 25), (' government grants ', 25), (' other ', 20), (' Profit on sale of assets ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = financial income total , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' other income ', 55), (' margin charge income ', 51), (' effective portion of changes in fair value of cash flow ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' paid by customers - at amortised cost ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Impairment loss ', 45), (' quota lease income ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' dividend from other parties ', 42), (' profit from discontinued operation ', 42), (' Sub-lease rental income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Profit from discontinued operation ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Derivaties at FVTPL- net change in fair value ', 42), (' Other income - Bank guarantee ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Bank charges', 40), (' Investment in joint venture ', 38), (' Net foreign losses ', 38), (' foreign exchange gain ', 37), (' net foreign exchange gain ', 37), (' net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net other foreign exchange (losses)/gains ', 37), (' net gain / loss on disposal of property plant and equipment  ', 37), (' Net foreign exchange (loss)/gain ', 37), (' other miscellaneous - net (loss)/gain ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' net ppe disposal (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Net loss on disposal of property ', 32), (' Net PPE disposal (loss)/gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 24), ('other revenue ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest cost , res_fuzz_match = [(' other ', 60), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' quota lease income ', 50), (' Interest on unwinding of discount in provisions ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 44), (' Net foreign losses ', 44), (' net of tax ', 43), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Loss on sale of disposal of assets ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' margin charge income ', 40), (' Miscellanous income ', 40), (' Accretion expense ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Net loss on disposal of property ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other income - Bank guarantee ', 37), (' Impairment loss ', 36), (' government grants ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' net foreign exchange gain ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' plant and equipment ', 27), (' foreign exchange gain ', 26)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total interest on lease , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on sale of disposal of assets ', 47), (' Power purchase agreement realised gain ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), ('other revenue ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net other foreign exchange (losses)/gains ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Net other foreign exchange (losses)/gains ', 42), (' Profit on sale of assets ', 41), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' dividend from other parties ', 37), (' net foreign exchange gain ', 37), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' net foreign exchange (loss)/gain ', 37), (' net ppe disposal (loss)/gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Investment in joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' Net foreign exchange (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Other income - Bank guarantee ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Asset impairment ', 36), (' Impairment loss ', 36), (' government grants ', 35), (' plant and equipment ', 33), (' Loss on loan refinancing ', 33), (' Commision rebate ', 33), (' foreign exchange gain ', 32), (' Sub-lease rental income ', 32), (' Net loss on disposal of property ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 29), (' Miscellanous income ', 28), (' sundry income ', 25)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total bank fees , res_fuzz_match = [(' Bank charges', 56), (' effective portion of changes in fair value of cash flow ', 50), (' Other income - Bank guarantee ', 50), (' net of tax ', 43), (' japan recoveries ', 43), (' quota lease income ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Profit on sale of assets ', 43), (' Power purchase agreement realised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' net of tax ', 43), (' net of tax ', 43), (' plant and equipment ', 43), (' Loss on loan refinancing ', 43), (' Arising from inventory of cranes ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Derivaties at FVTPL- net change in fair value ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' other ', 40), (' other income ', 36), (' net foreign exchange gain ', 36), (' profit from discontinued operation ', 36), (' secondment income (tw recovery) ', 36), (' net foreign exchange gains/(losses) ', 36), (' paid by customers - at amortised cost ', 36), (' net foreign exchange (loss)/gain ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Sub-lease rental income ', 36), (' Remuneration from services linked to newly acquired entities ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Net foreign exchange (loss)/gain ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of spare parts ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33), (' government grants ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' foreign exchange gain ', 29), (' dividend from other parties ', 29), (' margin charge income ', 29), (' net (loss)/profit on disposal of non-current assets ', 29), (' Loss on sale of disposal of assets ', 29), (' Net (loss)/profit on disposal of non-current assets ', 29), (' Miscellanous income ', 29), (' Net foreign losses ', 29), (' insurance proceeds ', 27), (' share of jv income ', 27), (' Asset impairment ', 25), (' Net loss on disposal of property ', 21), (' Impairment loss ', 18), (' sundry income ', 17)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total other finance , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' net other foreign exchange (losses)/gains ', 61), (' Net other foreign exchange (losses)/gains ', 61), ('other revenue ', 58), (' Loss on loan refinancing ', 56), (' Other income - Bank guarantee ', 56), (' share of jv income ', 55), (' dividend from other parties ', 51), (' government grants ', 50), (' quota lease income ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' net foreign exchange gain ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' margin charge income ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Bank charges', 40), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' Sub-lease rental income ', 39), (' Loss on sale of disposal of assets ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Interest on unwinding of discount in provisions ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of cranes ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' Net foreign losses ', 38), (' foreign exchange gain ', 33), (' secondment income (tw recovery) ', 33), (' net ppe disposal (loss)/gain ', 33), (' Asset impairment ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Investment in joint venture ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Miscellanous income ', 33), (' Accretion expense ', 31), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25), (' commission revenue ', 21)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total total , res_fuzz_match = [(' paid by customers - at amortised cost ', 45), (' quota lease income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Profit on sale of assets ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Derivaties at FVTPL- net change in fair value ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other ', 40), (' other income ', 38), (' dividend from other parties ', 36), (' effective portion of changes in fair value of cash flow ', 36), (' profit from discontinued operation ', 36), (' net foreign exchange gains/(losses) ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Loss on sale of disposal of assets ', 36), (' Power purchase agreement realised gain ', 36), (' net gain / loss on disposal of property plant and equipment  ', 36), (' Investment in joint venture ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 36), (' Profit from discontinued operation ', 36), (' Net loss on disposal of property ', 36), (' Net foreign exchange gains/(losses) ', 36), (' Loss on loan refinancing ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Net foreign losses ', 36), (' Other expense - Net loss on sale or property, plant and equipment ', 36), (' Bank charges', 30), ('other revenue ', 27), (' government grants ', 27), (' foreign exchange gain ', 27), (' net foreign exchange gain ', 27), (' share of jv income ', 27), (' secondment income (tw recovery) ', 27), (' japan recoveries ', 27), (' margin charge income ', 27), (' net foreign exchange (loss)/gain ', 27), (' net (loss)/profit on disposal of non-current assets ', 27), (' Asset impairment ', 27), (' Remuneration from services linked to newly acquired entities ', 27), (' Power purchase agreement unrelaised gain ', 27), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Net foreign exchange (loss)/gain ', 27), (' Net (loss)/profit on disposal of non-current assets ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 27), (' Other income - Bank guarantee ', 27), (' commission revenue ', 18), (' insurance proceeds ', 18), (' sundry income ', 18), (' Accretion expense ', 18)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total foreign currency losses , res_fuzz_match = [(' net other foreign exchange (losses)/gains ', 69), (' Net other foreign exchange (losses)/gains ', 69), (' net foreign exchange (loss)/gain ', 65), (' Net foreign exchange (loss)/gain ', 65), (' net foreign exchange gains/(losses) ', 62), (' Net foreign exchange gains/(losses) ', 62), (' Net foreign losses ', 62), (' insurance proceeds ', 55), (' foreign exchange gain ', 55), (' Impairment loss ', 55), (' net foreign exchange gain ', 54), ('other revenue ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Loss on loan refinancing ', 50), (' net (loss)/profit on disposal of non-current assets ', 48), (' Net (loss)/profit on disposal of non-current assets ', 48), (' other miscellaneous - net (loss)/gain ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' sundry income ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 38), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement realised gain ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Profit from discontinued operation ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 38), (' Profit on sale of assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Other income - Bank guarantee ', 36), (' net gain / loss on disposal of property plant and equipment  ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' net of tax ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Net loss on disposal of property ', 29), (' Asset impairment ', 25), (' dividend from other parties ', 24)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = total net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Derivaties at FVTPL- net change in fair value ', 52), (' Asset impairment ', 50), (' net foreign exchange gain ', 48), (' paid by customers - at amortised cost ', 48), (' net foreign exchange (loss)/gain ', 48), (' net other foreign exchange (losses)/gains ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Net other foreign exchange (losses)/gains ', 48), (' plant and equipment ', 47), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' Impairment loss ', 45), (' effective portion of changes in fair value of cash flow ', 43), (' profit from discontinued operation ', 43), (' secondment income (tw recovery) ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Loss on sale of disposal of assets ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Investment in joint venture ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Profit from discontinued operation ', 43), (' other miscellaneous - net (loss)/gain ', 43), (' Other income - Bank guarantee ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' Other expense - Loss on inventory obsolescence ', 43), ('other revenue ', 42), (' sundry income ', 42), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' insurance proceeds ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Accretion expense ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Arising from inventory of cranes ', 38), (' Arising from inventory of spare parts ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' government grants ', 33), (' Power purchase agreement realised gain ', 33), (' Power purchase agreement unrelaised gain ', 33), (' Net loss on disposal of property ', 33), (' Commision rebate ', 33), (' commission revenue ', 29), (' dividend from other parties ', 29)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 12:59:04+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 14], 'score': [100, 100], 'value': [-832.0, -756.0], 'label': ['Total Other finance', 'Total Other finance'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:05+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('NULL', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('NULL', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('NULL', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('NULL', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' income tax expense', 27), (' income tax', 26), (' income tax benefit', 26), ('current tax', 24), ('amount transferred to retained earnings', 24), ('provision for taxation previous year', 23), ('minimum alternate tax credit entitlement', 22), (' income tax benefit/(expense)', 21), (' tax (expense)/benefit', 19), ('deferred tax', 17), ('prior year ', 17), ('earlier year', 8)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 42), ('prior year ', 40), (' income tax benefit', 33), ('earlier year', 32), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), (' income tax expense', 24), (' income tax', 24), ('deferred tax', 18)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 40), ('provision for taxation previous year', 32), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' income tax benefit', 27), ('earlier year', 24), (' tax (expense)/benefit', 24), ('prior year ', 22), (' income tax expense', 22), ('current tax', 19), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 40), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 31), (' income tax benefit', 28), ('earlier year', 27), (' income tax expense', 26), ('current tax', 25), ('prior year ', 25), (' tax (expense)/benefit', 25), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 40), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 31), (' income tax benefit', 28), ('earlier year', 27), (' income tax expense', 26), ('current tax', 25), ('prior year ', 25), (' tax (expense)/benefit', 25), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' income tax benefit', 53), (' income tax benefit/(expense)', 49), (' income tax expense', 48), (' income tax', 45), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 30), (' tax (expense)/benefit', 26), ('earlier year', 24), ('provision for taxation previous year', 19), ('deferred tax', 18), ('current tax', 17), ('prior year ', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' income tax expense', 67), (' income tax benefit/(expense)', 53), (' tax (expense)/benefit', 50), (' income tax benefit', 39), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 32), ('earlier year', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 26), ('prior year ', 25), ('provision for taxation previous year', 23)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('current tax', 45), ('amount transferred to retained earnings', 43), ('provision for taxation previous year', 33), (' income tax expense', 33), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 28), (' income tax', 28), ('prior year ', 27), ('earlier year', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 100, 'value': -5479.0, 'line_item_label': ['Tax benefit / (expense)'], 'note_numbers': ['4'], 'line_item_value': [-5479.0]}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' income tax expense', 27), (' income tax', 26), (' income tax benefit', 26), ('current tax', 24), ('amount transferred to retained earnings', 24), ('provision for taxation previous year', 23), ('minimum alternate tax credit entitlement', 22), (' income tax benefit/(expense)', 21), (' tax (expense)/benefit', 19), ('deferred tax', 17), ('prior year ', 17), ('earlier year', 8)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 42), ('prior year ', 40), (' income tax benefit', 33), ('earlier year', 32), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), (' income tax expense', 24), (' income tax', 24), ('deferred tax', 18)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 40), ('provision for taxation previous year', 32), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' income tax benefit', 27), ('earlier year', 24), (' tax (expense)/benefit', 24), ('prior year ', 22), (' income tax expense', 22), ('current tax', 19), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 40), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 31), (' income tax benefit', 28), ('earlier year', 27), (' income tax expense', 26), ('current tax', 25), ('prior year ', 25), (' tax (expense)/benefit', 25), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 40), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 31), (' income tax benefit', 28), ('earlier year', 27), (' income tax expense', 26), ('current tax', 25), ('prior year ', 25), (' tax (expense)/benefit', 25), ('deferred tax', 19), (' income tax', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' income tax benefit', 53), (' income tax benefit/(expense)', 49), (' income tax expense', 48), (' income tax', 45), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 30), (' tax (expense)/benefit', 26), ('earlier year', 24), ('provision for taxation previous year', 19), ('deferred tax', 18), ('current tax', 17), ('prior year ', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' income tax expense', 67), (' income tax benefit/(expense)', 53), (' tax (expense)/benefit', 50), (' income tax benefit', 39), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 32), ('earlier year', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 26), ('prior year ', 25), ('provision for taxation previous year', 23)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('current tax', 45), ('amount transferred to retained earnings', 43), ('provision for taxation previous year', 33), (' income tax expense', 33), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 28), (' income tax', 28), ('prior year ', 27), ('earlier year', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 100, 'value': 11697.0, 'line_item_label': ['Tax benefit / (expense)'], 'note_numbers': ['4'], 'line_item_value': [11697.0]}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = deferred tax benefit / (expense) origination and reversal of temporary differences , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 56), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' current income tax', 41)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = deferred tax benefit / (expense) total tax benefit/ (expense) , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 57), ('income tax expense', 56), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 49), (' current income tax', 47)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate (loss)/ profit before tax , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 50), (' current income tax', 47), (' deferred income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 38), (' total income tax expense / (benefit)', 37)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate income tax using the company tax rate of 28% (2022: 28%) , res_fuzz_match = [(' deferred income tax', 73), (' current income tax', 71), ('income tax expense', 69), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total tax (expense)/benefit in income statement', 48)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate prior period adjustment , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total tax (expense)/benefit in income statement', 43), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' deferred income tax', 40), ('income tax expense', 38), (' total income tax expense / (benefit)', 36)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate non expenses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' total income tax expense / (benefit)', 58), (' total tax (expense)/benefit in income statement', 58), ('income tax expense', 56), (' income tax expense on continuing operations', 53), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate total income tax / (expense) , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 85), (' current income tax', 71), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 71), (' deferred income tax', 67), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = deferred tax benefit / (expense) origination and reversal of temporary differences , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 56), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' current income tax', 41)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = deferred tax benefit / (expense) total tax benefit/ (expense) , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 57), ('income tax expense', 56), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 49), (' current income tax', 47)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate (loss)/ profit before tax , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 50), (' current income tax', 47), (' deferred income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 38), (' total income tax expense / (benefit)', 37)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate income tax using the company tax rate of 28% (2022: 28%) , res_fuzz_match = [(' deferred income tax', 73), (' current income tax', 71), ('income tax expense', 69), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total tax (expense)/benefit in income statement', 48)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate prior period adjustment , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total tax (expense)/benefit in income statement', 43), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' deferred income tax', 40), ('income tax expense', 38), (' total income tax expense / (benefit)', 36)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate non expenses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' total income tax expense / (benefit)', 58), (' total tax (expense)/benefit in income statement', 58), ('income tax expense', 56), (' income tax expense on continuing operations', 53), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = of tax rate total income tax / (expense) , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 85), (' current income tax', 71), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 71), (' deferred income tax', 67), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 13], 'score': [100, 100], 'value': [11697.0, -5479.0], 'label': ['of tax rate Total income tax / (expense)', 'of tax rate Total income tax / (expense)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 12:59:05+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 38), ('exceptional ', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 40), (' prior period ', 21), ('exceptional ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 27), ('exceptional ', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 27), ('exceptional ', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 28), ('exceptional ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' prior period ', 31), ('exceptional ', 30), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 23)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), ('exceptional ', 33), (' prior period ', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 38), ('exceptional ', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 40), (' prior period ', 21), ('exceptional ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 27), ('exceptional ', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 27), ('exceptional ', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 28), ('exceptional ', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' prior period ', 31), ('exceptional ', 30), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 23)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), ('exceptional ', 33), (' prior period ', 27)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 12:59:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 12:59:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('NULL', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('NULL', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 12:59:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 12:59:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = cost of goods sold , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = gross contribution from operations , res_fuzz_match = [('NULL', 14)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = operating surplus before financing costs and forest crop revaluation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = revaluation (loss) / gain on forest crop amortisation of estate forest crop , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = foreign currency losses , res_fuzz_match = [('NULL', 17)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = (loss) / profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = tax benefit / (expense) , res_fuzz_match = [('NULL', 9)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 12:59:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
