2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 26), ('cash and bank balances', 22), ('cash and cash equivalents', 21), ('other bank balances', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('bank balances other than above', 33), ('bank balances other than cash and cash equivalents', 31), ('other bank balances', 25), ('cash and cash equivalents', 22), ('cash and bank balances', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('other bank balances', 39), ('cash and bank balances', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and cash equivalents', 22), ('other bank balances', 19), ('cash and bank balances', 17), ('bank balances other than cash and cash equivalents', 14), ('bank balances other than above', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('cash and cash equivalents', 31), ('cash and bank balances', 26), ('bank balances other than above', 21), ('bank balances other than cash and cash equivalents', 15), ('other bank balances', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('bank balances other than above', 32), ('bank balances other than cash and cash equivalents', 26), ('cash and bank balances', 22), ('cash and cash equivalents', 21), ('other bank balances', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('bank balances other than above', 33), ('bank balances other than cash and cash equivalents', 31), ('other bank balances', 25), ('cash and cash equivalents', 22), ('cash and bank balances', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('other bank balances', 39), ('cash and bank balances', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and cash equivalents', 22), ('other bank balances', 19), ('cash and bank balances', 17), ('bank balances other than cash and cash equivalents', 14), ('bank balances other than above', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('cash and cash equivalents', 31), ('cash and bank balances', 26), ('bank balances other than above', 21), ('bank balances other than cash and cash equivalents', 15), ('other bank balances', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('inventories', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('inventories', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets', 83), ('other current financial assets', 68), ('other assets', 50), ('other financial assets', 44)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other assets', 40), ('other current financial assets', 35), ('other financial assets', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 41), ('other financial assets', 41), ('other current financial assets', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73), ('other current assets', 60), ('other financial assets', 53), ('other current financial assets', 47)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets', 83), ('other current financial assets', 68), ('other assets', 50), ('other financial assets', 44)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other assets', 40), ('other current financial assets', 35), ('other financial assets', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 41), ('other financial assets', 41), ('other current financial assets', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73), ('other current assets', 60), ('other financial assets', 53), ('other current financial assets', 47)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets', 83)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other current assets', 53)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('other current assets', 61)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other current assets', 41)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other current assets', 60)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets', 83)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other current assets', 53)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('other current assets', 61)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other current assets', 41)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other current assets', 60)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('current assets', 87)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('current assets', 67)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('current assets', 58)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 87, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('current assets', 87)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('current assets', 67)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('current assets', 58)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 87, 'value': 0.0, 'line_item_label': ['Current tax assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 50), ('work in progress', 50), ('right of use', 44), ('right to use', 44), ('rightofuse', 29), ('righttouse', 29), ('tangible', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('tangible', 29), ('capital work in progress', 16), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('work in progress', 15), ('rightofuse', 14), ('righttouse', 14), ('right of use', 14), ('right to use', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('capital work in progress', 44), ('tangible', 36), ('rightofuse', 36), ('righttouse', 36), ('right of use', 36), ('right to use', 36), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('work in progress', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tangible', 29), ('capital work-in-progress', 17), ('capital workinprogress', 17), ('capital work in progress', 17), ('rightofuse', 17), ('righttouse', 17), ('right of use', 17), ('right to use', 17), ('work in progress', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tangible', 43), ('work in progress', 31), ('capital work in progress', 29), ('right of use', 22), ('right to use', 22), ('rightofuse', 11), ('righttouse', 11), ('capital work-in-progress', 10), ('capital workinprogress', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 33), ('tangible', 25), ('righttouse', 20), ('rightofuse', 18), ('right of use', 17), ('right to use', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('right of use', 33), ('right to use', 33), ('capital work in progress', 27), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('work in progress', 35), ('capital work in progress', 32), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 50), ('work in progress', 50), ('righttouse', 36), ('rightofuse', 33), ('right of use', 33), ('right to use', 33), ('tangible', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('tangible', 43), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 15), ('capital work-in-progress', 10), ('capital workinprogress', 10), ('capital work in progress', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('capital work in progress', 25), ('rightofuse', 22), ('righttouse', 22), ('work in progress', 17), ('right of use', 13), ('right to use', 13)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('work in progress', 46), ('capital work-in-progress', 44), ('capital workinprogress', 44), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 1771.0, 'line_item_label': ['Lease Liabilities - right-of-use assets'], 'note_numbers': ['16'], 'line_item_value': [1771.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 50), ('work in progress', 50), ('right of use', 44), ('right to use', 44), ('rightofuse', 29), ('righttouse', 29), ('tangible', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('tangible', 29), ('capital work in progress', 16), ('capital work-in-progress', 15), ('capital workinprogress', 15), ('work in progress', 15), ('rightofuse', 14), ('righttouse', 14), ('right of use', 14), ('right to use', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('capital work in progress', 44), ('tangible', 36), ('rightofuse', 36), ('righttouse', 36), ('right of use', 36), ('right to use', 36), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('work in progress', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tangible', 29), ('capital work-in-progress', 17), ('capital workinprogress', 17), ('capital work in progress', 17), ('rightofuse', 17), ('righttouse', 17), ('right of use', 17), ('right to use', 17), ('work in progress', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tangible', 43), ('work in progress', 31), ('capital work in progress', 29), ('right of use', 22), ('right to use', 22), ('rightofuse', 11), ('righttouse', 11), ('capital work-in-progress', 10), ('capital workinprogress', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 33), ('tangible', 25), ('righttouse', 20), ('rightofuse', 18), ('right of use', 17), ('right to use', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('right of use', 33), ('right to use', 33), ('capital work in progress', 27), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('work in progress', 35), ('capital work in progress', 32), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 50), ('work in progress', 50), ('righttouse', 36), ('rightofuse', 33), ('right of use', 33), ('right to use', 33), ('tangible', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('tangible', 43), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 15), ('capital work-in-progress', 10), ('capital workinprogress', 10), ('capital work in progress', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('capital work in progress', 25), ('rightofuse', 22), ('righttouse', 22), ('work in progress', 17), ('right of use', 13), ('right to use', 13)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('work in progress', 46), ('capital work-in-progress', 44), ('capital workinprogress', 44), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 1270.0, 'line_item_label': ['Lease Liabilities - right-of-use assets'], 'note_numbers': ['16'], 'line_item_value': [1270.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('tangible assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('tangible assets', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tangible assets', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tangible assets', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tangible assets', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tangible assets', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('tangible assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tangible assets', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('tangible assets', 28)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('tangible assets', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('tangible assets', 64)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('tangible assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('tangible assets', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tangible assets', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tangible assets', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tangible assets', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tangible assets', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('tangible assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tangible assets', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('tangible assets', 28)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('tangible assets', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('tangible assets', 64)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('goodwill on consolidatio', 44), ('goodwill', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('goodwill on consolidatio', 67), ('goodwill', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('goodwill', 50), ('goodwill on consolidatio', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('goodwill on consolidatio', 52), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 37), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('goodwill', 33), ('goodwill on consolidatio', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('goodwill on consolidatio', 42), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('goodwill on consolidatio', 44), ('goodwill', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('goodwill on consolidatio', 67), ('goodwill', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('goodwill', 50), ('goodwill on consolidatio', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('goodwill on consolidatio', 52), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 37), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('goodwill', 33), ('goodwill on consolidatio', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('goodwill on consolidatio', 42), ('goodwill', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('intangible assets under development', 100), ('intangible', 25), ('intangible under development', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('intangible assets under development', 44), ('intangible', 33), ('intangible under development', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('intangible', 50), ('intangible under development', 38), ('intangible assets under development', 38)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('intangible', 36), ('intangible under development', 22), ('intangible assets under development', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('intangible assets under development', 45), ('intangible under development', 40), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('intangible under development', 22), ('intangible assets under development', 22), ('intangible', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 33), ('intangible under development', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('intangible assets under development', 37), ('intangible', 33), ('intangible under development', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('intangible under development', 29), ('intangible assets under development', 29), ('intangible', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('intangible under development', 37), ('intangible assets under development', 37), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('intangible', 33), ('intangible assets under development', 33), ('intangible under development', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('intangible assets under development', 78), ('intangible', 50), ('intangible under development', 44)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('intangible assets under development', 100), ('intangible', 25), ('intangible under development', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('intangible assets under development', 44), ('intangible', 33), ('intangible under development', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('intangible', 50), ('intangible under development', 38), ('intangible assets under development', 38)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('intangible', 36), ('intangible under development', 22), ('intangible assets under development', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('intangible assets under development', 45), ('intangible under development', 40), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('intangible under development', 22), ('intangible assets under development', 22), ('intangible', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 33), ('intangible under development', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('intangible assets under development', 37), ('intangible', 33), ('intangible under development', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('intangible under development', 29), ('intangible assets under development', 29), ('intangible', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('intangible under development', 37), ('intangible assets under development', 37), ('intangible', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('intangible', 33), ('intangible assets under development', 33), ('intangible under development', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('intangible assets under development', 78), ('intangible', 50), ('intangible under development', 44)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('donations', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('donations', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('donations', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('donations', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('donations', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('donations', 6)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('donations', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('donations', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('donations', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('donations', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('donations', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('donations', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('donations', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('donations', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('donations', 6)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('donations', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('donations', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('donations', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('donations', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('joint ventures and associates', 60), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('investment', 83), ('joint ventures and associates', 67)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('investment', 18), ('joint ventures and associates', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('joint ventures and associates', 17), ('investment', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('investment', 36), ('joint ventures and associates', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('joint ventures and associates', 38), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('joint ventures and associates', 25), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('joint ventures and associates', 56), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 83, 'value': 52.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [52.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('joint ventures and associates', 60), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('investment', 83), ('joint ventures and associates', 67)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('investment', 18), ('joint ventures and associates', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 33)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('joint ventures and associates', 17), ('investment', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('investment', 36), ('joint ventures and associates', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 36)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('joint ventures and associates', 38), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('joint ventures and associates', 25), ('investment', 18)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('joint ventures and associates', 56), ('investment', 50)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 83, 'value': 233.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [233.0]}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred tax', 29), ('deferred charges', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('deferred charges', 31), ('deferred tax assets', 28), ('deferred tax', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('deferred tax assets', 25), ('deferred tax', 22), ('deferred charges', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('deferred tax', 13), ('deferred charges', 12), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred charges', 24), ('deferred tax', 13), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('deferred tax assets', 27), ('deferred tax', 25), ('deferred charges', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('deferred tax assets', 38), ('deferred charges', 11), ('deferred tax', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred tax', 13), ('deferred charges', 12), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred tax', 72), ('deferred tax assets', 58), ('deferred charges', 37)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax assets', 30), ('deferred tax', 29), ('deferred charges', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred tax assets', 67), ('deferred tax', 33), ('deferred charges', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred tax', 29), ('deferred charges', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('deferred charges', 31), ('deferred tax assets', 28), ('deferred tax', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('deferred tax assets', 25), ('deferred tax', 22), ('deferred charges', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('deferred tax', 13), ('deferred charges', 12), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred charges', 24), ('deferred tax', 13), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('deferred tax assets', 27), ('deferred tax', 25), ('deferred charges', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('deferred tax assets', 38), ('deferred charges', 11), ('deferred tax', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred tax', 13), ('deferred charges', 12), ('deferred tax assets', 10)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred tax', 72), ('deferred tax assets', 58), ('deferred charges', 37)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax assets', 30), ('deferred tax', 29), ('deferred charges', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred tax assets', 67), ('deferred tax', 33), ('deferred charges', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other assets', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other assets', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other assets', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('other assets', 37)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other assets', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other assets', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other assets', 70)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other assets', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other assets', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other assets', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other assets', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('other assets', 37)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other assets', 12)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other assets', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other assets', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other assets', 70)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('non-current assets total', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('non-current assets total', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('non-current assets total', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('non-current assets total', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('non-current assets total', 39)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('non-current assets total', 8)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('non-current assets total', 45)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('non-current assets total', 57)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('non-current assets total', 42)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('non-current assets total', 35)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('non-current assets total', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('non-current assets total', 32)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('non-current assets total', 39)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('non-current assets total', 8)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('non-current assets total', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('non-current assets total', 45)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('non-current assets total', 57)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('plant property equipment', 16), ('property plant equipment', 16)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities - right-of-use assets , res_fuzz_match = [('plant property equipment', 21), ('property plant equipment', 21)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('plant property equipment', 22), ('property plant equipment', 22)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('plant property equipment', 19), ('property plant equipment', 19)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-22 17:21:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('unbilled', 40), ('account receivables', 36), ('receivable', 33), ('trade receivables', 26), ('government subsidies receivable', 26), ('billed', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('government subsidies receivable', 33), ('trade receivables', 29), ('receivable', 22), ('account receivables', 19), ('billed', 0), ('unbilled', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('account receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('unbilled', 50), ('account receivables', 44), ('trade receivables', 42), ('receivable', 33), ('government subsidies receivable', 29), ('billed', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('receivable', 33), ('government subsidies receivable', 27), ('trade receivables', 26), ('billed', 25), ('account receivables', 21), ('unbilled', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('trade receivables', 36), ('government subsidies receivable', 36), ('account receivables', 32), ('billed', 25), ('receivable', 22), ('unbilled', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:58+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('unbilled', 40), ('account receivables', 36), ('receivable', 33), ('trade receivables', 26), ('government subsidies receivable', 26), ('billed', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('government subsidies receivable', 33), ('trade receivables', 29), ('receivable', 22), ('account receivables', 19), ('billed', 0), ('unbilled', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = contract asset , res_fuzz_match = [('account receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('unbilled', 50), ('account receivables', 44), ('trade receivables', 42), ('receivable', 33), ('government subsidies receivable', 29), ('billed', 25)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('receivable', 33), ('government subsidies receivable', 27), ('trade receivables', 26), ('billed', 25), ('account receivables', 21), ('unbilled', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('trade receivables', 36), ('government subsidies receivable', 36), ('account receivables', 32), ('billed', 25), ('receivable', 22), ('unbilled', 20)]
2023-03-22 17:21:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:58+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('net sales', 35), ('revenue from contracts with customers', 34), ('revenue from operations', 32), ('sale of products', 30), ('transmission and distribution business', 23), ('from trading business', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('revenue from operations', 43), ('sale of products', 42), ('net sales', 40), ('revenue from contracts with customers', 36), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('revenue from operations', 36), ('sale of products', 34), ('revenue from contracts with customers', 33), ('net sales', 24), ('from trading business', 19), ('transmission and distribution business', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('sale of products', 42), ('net sales', 40), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('net sales', 40), ('revenue from operations', 36), ('sale of products', 28), ('from trading business', 25), ('transmission and distribution business', 22), ('revenue from contracts with customers', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 37), ('sale of products', 35), ('revenue from contracts with customers', 30), ('transmission and distribution business', 28), ('net sales', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('sale of products', 29), ('transmission and distribution business', 27), ('net sales', 25), ('revenue from contracts with customers', 21), ('revenue from operations', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('revenue from operations', 49), ('from trading business', 39), ('sale of products', 36), ('net sales', 28), ('transmission and distribution business', 24), ('revenue from contracts with customers', 23)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 37), ('revenue from contracts with customers', 37), ('sale of products', 29), ('transmission and distribution business', 16), ('net sales', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('from trading business', 38), ('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 27), ('revenue from operations', 26), ('transmission and distribution business', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('net sales', 35), ('revenue from contracts with customers', 34), ('revenue from operations', 32), ('sale of products', 30), ('transmission and distribution business', 23), ('from trading business', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('revenue from operations', 43), ('sale of products', 42), ('net sales', 40), ('revenue from contracts with customers', 36), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('revenue from operations', 36), ('sale of products', 34), ('revenue from contracts with customers', 33), ('net sales', 24), ('from trading business', 19), ('transmission and distribution business', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('sale of products', 32), ('net sales', 27), ('revenue from operations', 26), ('from trading business', 18), ('revenue from contracts with customers', 15), ('transmission and distribution business', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('sale of products', 42), ('net sales', 40), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('net sales', 40), ('revenue from operations', 36), ('sale of products', 28), ('from trading business', 25), ('transmission and distribution business', 22), ('revenue from contracts with customers', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 37), ('sale of products', 35), ('revenue from contracts with customers', 30), ('transmission and distribution business', 28), ('net sales', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('sale of products', 29), ('transmission and distribution business', 27), ('net sales', 25), ('revenue from contracts with customers', 21), ('revenue from operations', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('net sales', 36), ('revenue from contracts with customers', 17), ('sale of products', 13), ('transmission and distribution business', 13), ('revenue from operations', 11), ('from trading business', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('revenue from operations', 49), ('from trading business', 39), ('sale of products', 36), ('net sales', 28), ('transmission and distribution business', 24), ('revenue from contracts with customers', 23)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('from trading business', 38), ('revenue from operations', 37), ('revenue from contracts with customers', 37), ('sale of products', 29), ('transmission and distribution business', 16), ('net sales', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('from trading business', 38), ('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 27), ('revenue from operations', 26), ('transmission and distribution business', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('cost of sales', 33), ('expenditure', 24), ('total expenses', 22), ('expense', 19), ('total expenditure', 13), ('purchase of stock-in-trade', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('total expenses', 75), ('total expenditure', 71), ('purchase of stock-in-trade', 39), ('cost of sales', 38), ('expenditure', 36), ('expense', 33)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('cost of sales', 67), ('expense', 33), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('total expenses', 62), ('expense', 52), ('expenditure', 52), ('total expenditure', 42), ('purchase of stock-in-trade', 33), ('cost of sales', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), ('expenditure', 25), ('expense', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('total expenditure', 38), ('expenditure', 32), ('cost of sales', 27), ('total expenses', 24), ('purchase of stock-in-trade', 15), ('expense', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('total expenses', 59), ('total expenditure', 53), ('purchase of stock-in-trade', 44), ('cost of sales', 39), ('expenditure', 31), ('expense', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('cost of sales', 33), ('expenditure', 24), ('total expenses', 22), ('expense', 19), ('total expenditure', 13), ('purchase of stock-in-trade', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('total expenses', 75), ('total expenditure', 71), ('purchase of stock-in-trade', 39), ('cost of sales', 38), ('expenditure', 36), ('expense', 33)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('expenditure', 47), ('expense', 46), ('total expenditure', 35), ('total expenses', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('cost of sales', 67), ('expense', 33), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('total expenses', 62), ('expense', 52), ('expenditure', 52), ('total expenditure', 42), ('purchase of stock-in-trade', 33), ('cost of sales', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), ('expenditure', 25), ('expense', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('cost of sales', 17), ('expenditure', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('total expenditure', 38), ('expenditure', 32), ('cost of sales', 27), ('total expenses', 24), ('purchase of stock-in-trade', 15), ('expense', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('total expenses', 59), ('total expenditure', 53), ('purchase of stock-in-trade', 44), ('cost of sales', 39), ('expenditure', 31), ('expense', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other expenses', 30), (' depreciation', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other expenses', 50), (' depreciation', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [(' depreciation', 33), ('other expenses', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [(' depreciation', 32), ('other expenses', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other expenses', 69), (' depreciation', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' depreciation', 28), ('other expenses', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other expenses', 42), (' depreciation', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other expenses', 41), (' depreciation', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 9], 'score': 100, 'value': -52031.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-48654.0, -3377.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other expenses', 30), (' depreciation', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other expenses', 50), (' depreciation', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [(' depreciation', 33), ('other expenses', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [(' depreciation', 100), ('other expenses', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [(' depreciation', 32), ('other expenses', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other expenses', 69), (' depreciation', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' depreciation', 28), ('other expenses', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other expenses', 13), (' depreciation', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other expenses', 42), (' depreciation', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other expenses', 41), (' depreciation', 28)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 9], 'score': 100, 'value': -51861.0, 'line_item_label': ['Depreciation', 'Other expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-48061.0, -3800.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('rent', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('rent', 50)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('rent', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('rent', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('rent', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('rent', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('rent', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('rent', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('rent', 50)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('rent', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('rent', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('rent', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('rent', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('rent', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('rent', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('rent', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other operating ', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other operating ', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('other operating ', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('other operating ', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other operating ', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other operating ', 58)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other operating ', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other operating ', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other operating ', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('other operating ', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other operating ', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('other operating ', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other operating ', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('other operating ', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other operating ', 58)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other operating ', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other income', 15), ('finance income', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('other income', 14), ('finance income', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('other income', 43), ('finance income', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other income', 36), ('finance income', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other income', 44), ('finance income', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 1961.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [1961.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('other income', 15), ('finance income', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('other income', 14), ('finance income', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('other income', 11), ('finance income', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('other income', 43), ('finance income', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('other income', 36), ('finance income', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance income', 40), ('other income', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other income', 44), ('finance income', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2190.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [2190.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('finance cost', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('finance cost', 26)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('finance cost', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('finance cost', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('finance cost', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('finance cost', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -3891.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-3891.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('finance cost', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('finance cost', 26)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('finance cost', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('finance cost', 22)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('finance cost', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('finance cost', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('finance cost', 43)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('finance cost', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -3181.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-3181.0]}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('NULL', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('NULL', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('NULL', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('NULL', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('NULL', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('NULL', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('NULL', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('NULL', 38)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('NULL', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('NULL', 29)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('minimum alternate tax credit entitlement', 26), ('deferred tax', 25), ('amount transferred to retained earnings', 24), ('provision for taxation previous year', 18), ('earlier year', 15), ('current tax', 8), ('prior year', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('amount transferred to retained earnings', 21), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 18), ('prior year', 18), ('current tax', 17), ('earlier year', 17), ('provision for taxation previous year', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('current tax', 52), ('deferred tax', 48), ('provision for taxation previous year', 39), ('prior year', 27), ('earlier year', 25), ('amount transferred to retained earnings', 21), ('minimum alternate tax credit entitlement', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('minimum alternate tax credit entitlement', 24), ('deferred tax', 23), ('amount transferred to retained earnings', 23), ('provision for taxation previous year', 22), ('prior year', 15), ('earlier year', 14), ('current tax', 7)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('prior year', 36), ('earlier year', 33), ('provision for taxation previous year', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('provision for taxation previous year', 35), ('deferred tax', 31), ('current tax', 29), ('earlier year', 28), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 16), ('prior year', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 25), ('amount transferred to retained earnings', 24), ('earlier year', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year', 45), ('deferred tax', 33), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('amount transferred to retained earnings', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('prior year', 31), ('current tax', 30), ('earlier year', 24), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('current tax', 42), ('prior year', 38), ('deferred tax', 32), ('provision for taxation previous year', 31), ('amount transferred to retained earnings', 20), ('earlier year', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('minimum alternate tax credit entitlement', 26), ('deferred tax', 25), ('amount transferred to retained earnings', 24), ('provision for taxation previous year', 18), ('earlier year', 15), ('current tax', 8), ('prior year', 8)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('amount transferred to retained earnings', 21), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 18), ('prior year', 18), ('current tax', 17), ('earlier year', 17), ('provision for taxation previous year', 10)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('current tax', 52), ('deferred tax', 48), ('provision for taxation previous year', 39), ('prior year', 27), ('earlier year', 25), ('amount transferred to retained earnings', 21), ('minimum alternate tax credit entitlement', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('minimum alternate tax credit entitlement', 24), ('deferred tax', 23), ('amount transferred to retained earnings', 23), ('provision for taxation previous year', 22), ('prior year', 15), ('earlier year', 14), ('current tax', 7)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('deferred tax', 38), ('prior year', 35), ('earlier year', 32), ('amount transferred to retained earnings', 24), ('current tax', 22), ('provision for taxation previous year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('prior year', 36), ('earlier year', 33), ('provision for taxation previous year', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('provision for taxation previous year', 35), ('deferred tax', 31), ('current tax', 29), ('earlier year', 28), ('amount transferred to retained earnings', 23), ('minimum alternate tax credit entitlement', 16), ('prior year', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 25), ('amount transferred to retained earnings', 24), ('earlier year', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('current tax', 29), ('amount transferred to retained earnings', 20), ('deferred tax', 17), ('prior year', 15), ('earlier year', 13), ('minimum alternate tax credit entitlement', 11), ('provision for taxation previous year', 6)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year', 45), ('deferred tax', 33), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('amount transferred to retained earnings', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('prior year', 31), ('current tax', 30), ('earlier year', 24), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('current tax', 42), ('prior year', 38), ('deferred tax', 32), ('provision for taxation previous year', 31), ('amount transferred to retained earnings', 20), ('earlier year', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-22 17:21:59+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-22 17:21:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('exceptional', 19), ('prior period', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('prior period', 21), ('exceptional', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('exceptional', 22), ('prior period', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('exceptional', 35), ('prior period', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('prior period', 61), ('exceptional', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('exceptional', 21), ('prior period', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('prior period', 29), ('exceptional', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-22 17:21:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-22 17:21:59+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = sale of used vehicles , res_fuzz_match = [('exceptional', 19), ('prior period', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = used vehicles disposed , res_fuzz_match = [('prior period', 21), ('exceptional', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = depreciation , res_fuzz_match = [('prior period', 42), ('exceptional', 31)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = employee costs , res_fuzz_match = [('exceptional', 22), ('prior period', 17)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = fleet operating expenses , res_fuzz_match = [('exceptional', 35), ('prior period', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 14)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('exceptional', 0), ('prior period', 0)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('prior period', 61), ('exceptional', 15)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('exceptional', 21), ('prior period', 18)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('prior period', 29), ('exceptional', 21)]
2023-03-22 17:21:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
