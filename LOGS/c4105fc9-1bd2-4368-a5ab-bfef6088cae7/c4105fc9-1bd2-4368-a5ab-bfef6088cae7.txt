2023-08-07 12:24:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-07 12:24:27+0530 - sLogger - DEBUG - process_main_pages started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-07 12:24:28+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-07 12:24:28+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-07 12:24:28+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('noncurrentassets', 33), ('noncurrentliabilities', 31), ('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('currentassets', 27), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('noncurrent assets', 22), ('liabilities', 21), ('equityandliabilities', 18), ('assets', 16), ('equity', 15), ('equityliabilities', 15)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equityandliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('noncurrentliabilities', 39), ('current assets', 38), ('noncurrent liabilities', 36), ('noncurrentassets', 35), ('currentassets', 32), ('equity and liabilities', 28), ('equityandliabilities', 27), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('liabilities', 16)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equityandliabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('noncurrentliabilities', 52), ('assets', 42), ('currentassets', 39), ('currentliabilities', 36), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equityliabilities', 22), ('equityandliabilities', 20), ('equity liabilities', 19), ('liabilities', 8)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('equityandliabilities', 40), ('noncurrentliabilities', 38), ('noncurrentassets', 28), ('equityliabilities', 27), ('currentliabilities', 26), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('currentassets', 15), ('assets', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentassets | score 24
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentliabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equityandliabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('currentassets', 33), ('current liabilities', 31), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equityliabilities', 20), ('equityandliabilities', 17), ('equity', 11)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentassets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentliabilities | score 39
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equityandliabilities | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-07 12:24:28+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-07 12:24:28+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-07 12:24:28+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-07 12:24:28+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Note | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:24:28+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-08-07 12:24:32+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none raw materials , res_fuzz_match = [('raw materials', 100), (' raw materials', 100), (' stores and other consumables at cost', 53), (' cranes - in transit', 46), (' goods in transit', 42), (' provision for inventory obsolescence', 40), (' cranes', 40), (' spare parts', 40), (' inventories', 33), (' work in progress', 31), (' finished goods at cost', 27), (' finished goods', 18), (' finished goods', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none 27198 , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [18547.0, 8651.0], 'label': ['None Raw materials', 'None Finished goods'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 49610.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 11999.0, 29753.0, 7530.0, 328.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 20431.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 13624.0, 0.0, 6318.0, 489.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 13624.0, 1697.0, 11927.0, 11999.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:24:32+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:32+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:32+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 46, 47, 47, 48, 49, 50, 51, 52, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 100, 80, 100, 80, 100, 100, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 242.0, 195.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1566.0, 1793.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 14045.0, 1743.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 1678.0, 0.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0, 17531.0, 3731.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Net book value At 31 December 2020', 'Construction in progress $000', 'Net book value At 31 December 2019', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets', 'intangible under development', 'intangible assets under development']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 12453.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [12453.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [0.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [47672.0, 54535.0], 'label': ['None Investment in joint venture (Southern Cross Aluminium Pty Ltd)', 'None Investment in joint venture (Southern Cross Aluminium Pty Ltd)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 13131.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 12453.0, 678.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 0.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 7], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 29702.0, 12453.0], 'label': ['Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value', 'Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 9, 13], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 4000.0, 0.0], 'label': ['None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [0.0, 4000.0], 'label': ['None Bank borrowings', 'None Bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors', ' trade and other payables', ' trade payables', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9228.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9228.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9459.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9459.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 35329.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 26101.0, 9228.0, 0.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 34709.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 22315.0, 9459.0, 2935.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 38.0, 0.0, 0.0, -518.0, 0.0, 0.0, 0.0, 0.0, 0.0, -336.0, 0.0, 729.0, 0.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 56), ('other creditors and accruals', 50), (' forward exchange contracts', 50), (' current - liability for annual and long service leave', 48), (' other related parties', 47), (' derivative contracts - at fair value', 46), (' gst payable and accruals', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' make good provisions', 38), (' warranty', 38), (' total current employee benefits', 37), (' contract liabilites - current', 36), (' gst', 33), (' ultimate parent entity', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' employee benefits - current', 30), (' restructuring', 30), (' provisions - current', 29)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none electricity derivatives at fair value through oci , res_fuzz_match = [(' derivative contracts - at fair value', 62), (' other related parties', 53), ('other creditors and accruals', 50), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' employee benefits - payroll', 45), (' arising from service contracts', 44), (' loans from related party', 43), (' secured long-term bank loans', 42), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' employee benefits - current', 39), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' gst payable and accruals', 36), (' provisions - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 62), (' current - liability for annual and long service leave', 50), (' gst payables', 50), (' other related parties', 45), (' loans from related party', 45), (' derivative contracts - at fair value', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' share of joint venture payables', 44), (' abandonment and decommissioning costs', 44), (' other', 40), ('other creditors and accruals', 38), (' employee benefits - payroll', 38), (' total current employee benefits', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 31), (' gst payable and accruals', 31), (' employee benefits - current', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' forward exchange contracts', 31), (' make good provisions', 25), (' warranty', 25), (' rebates', 20), (' restructuring', 20), (' provisions - current', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' gst', 33), (' gst payables', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits', 30), (' warranty', 25), (' provisions - current', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 80], 'value': [25569.0, 1053.0], 'label': ['None Trade and other payables', 'None Lease liabilities'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 13665.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3036.0, 10629.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 51681.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3254.0, 48427.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 4, 5, 10, 16, 22, 24, 25, 26, 27, 28, 28, 29], 'score': [100, 100, 100, 100, 92, 100, 100, 92, 92, 92, 100, 100, 100, 100, 92, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 4846.0, 38.0, 3884.0, 0.0, 729.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'None 2020 Current', 'None 2020 Current', 'Totals', 'Totals', 'Totals', 'Totals', 'None 2020 Current', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [150997.0, 150997.0], 'label': ['None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)', 'None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -74616.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-74616.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:24:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -94999.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-94999.0]}
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:24:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:24:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:24:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 35790.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [35790.0]}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -4256.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [-4256.0]}
2023-08-07 12:24:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:24:34+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:24:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [29543.0, -31598.0, -2055.0, 2020.0, 0.0, 5922.0, -8448.0, -2526.0, 2020.0, 0.0, 325.0, 325.0, 2020.0, 0.0, 41448.0, -11905.0, 29543.0, 2019.0, 0.0, 3049.0, 2873.0, 5922.0, 2019.0, 0.0, 325.0, 325.0, 2019.0, 0.0], 'label': ['Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total', 'Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-07 12:25:52+0530 - sLogger - DEBUG - process_main_pages started
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-07 12:25:52+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-07 12:25:52+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:25:52+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-07 12:25:52+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('noncurrentassets', 33), ('noncurrentliabilities', 31), ('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('currentassets', 27), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('noncurrent assets', 22), ('liabilities', 21), ('equityandliabilities', 18), ('assets', 16), ('equity', 15), ('equityliabilities', 15)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equityandliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('noncurrentliabilities', 39), ('current assets', 38), ('noncurrent liabilities', 36), ('noncurrentassets', 35), ('currentassets', 32), ('equity and liabilities', 28), ('equityandliabilities', 27), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('liabilities', 16)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equityandliabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('noncurrentliabilities', 52), ('assets', 42), ('currentassets', 39), ('currentliabilities', 36), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equityliabilities', 22), ('equityandliabilities', 20), ('equity liabilities', 19), ('liabilities', 8)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('equityandliabilities', 40), ('noncurrentliabilities', 38), ('noncurrentassets', 28), ('equityliabilities', 27), ('currentliabilities', 26), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('currentassets', 15), ('assets', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentassets | score 24
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentliabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equityandliabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('currentassets', 33), ('current liabilities', 31), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equityliabilities', 20), ('equityandliabilities', 17), ('equity', 11)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentassets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentliabilities | score 39
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equityandliabilities | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-07 12:25:53+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-07 12:25:53+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-07 12:25:53+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-07 12:25:53+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Note | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:25:53+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-08-07 12:25:57+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none raw materials , res_fuzz_match = [('raw materials', 100), (' raw materials', 100), (' stores and other consumables at cost', 53), (' cranes - in transit', 46), (' goods in transit', 42), (' provision for inventory obsolescence', 40), (' cranes', 40), (' spare parts', 40), (' inventories', 33), (' work in progress', 31), (' finished goods at cost', 27), (' finished goods', 18), (' finished goods', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none 27198 , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [18547.0, 8651.0], 'label': ['None Raw materials', 'None Finished goods'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 49610.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 11999.0, 29753.0, 7530.0, 328.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 20431.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 13624.0, 0.0, 6318.0, 489.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 13624.0, 1697.0, 11927.0, 11999.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 46, 47, 47, 48, 49, 50, 51, 52, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 100, 80, 100, 80, 100, 100, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 242.0, 195.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1566.0, 1793.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 14045.0, 1743.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 1678.0, 0.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0, 17531.0, 3731.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Net book value At 31 December 2020', 'Construction in progress $000', 'Net book value At 31 December 2019', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets', 'intangible under development', 'intangible assets under development']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 12453.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [12453.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [0.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [47672.0, 54535.0], 'label': ['None Investment in joint venture (Southern Cross Aluminium Pty Ltd)', 'None Investment in joint venture (Southern Cross Aluminium Pty Ltd)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 13131.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 12453.0, 678.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 0.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 7], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 29702.0, 12453.0], 'label': ['Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value', 'Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:25:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:25:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-08-07 12:25:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:57+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 9, 13], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 4000.0, 0.0], 'label': ['None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [0.0, 4000.0], 'label': ['None Bank borrowings', 'None Bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors', ' trade and other payables', ' trade payables', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9228.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9228.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9459.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9459.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 35329.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 26101.0, 9228.0, 0.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 34709.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 22315.0, 9459.0, 2935.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 38.0, 0.0, 0.0, -518.0, 0.0, 0.0, 0.0, 0.0, 0.0, -336.0, 0.0, 729.0, 0.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 56), ('other creditors and accruals', 50), (' forward exchange contracts', 50), (' current - liability for annual and long service leave', 48), (' other related parties', 47), (' derivative contracts - at fair value', 46), (' gst payable and accruals', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' make good provisions', 38), (' warranty', 38), (' total current employee benefits', 37), (' contract liabilites - current', 36), (' gst', 33), (' ultimate parent entity', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' employee benefits - current', 30), (' restructuring', 30), (' provisions - current', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none electricity derivatives at fair value through oci , res_fuzz_match = [(' derivative contracts - at fair value', 62), (' other related parties', 53), ('other creditors and accruals', 50), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' employee benefits - payroll', 45), (' arising from service contracts', 44), (' loans from related party', 43), (' secured long-term bank loans', 42), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' employee benefits - current', 39), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' gst payable and accruals', 36), (' provisions - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 62), (' current - liability for annual and long service leave', 50), (' gst payables', 50), (' other related parties', 45), (' loans from related party', 45), (' derivative contracts - at fair value', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' share of joint venture payables', 44), (' abandonment and decommissioning costs', 44), (' other', 40), ('other creditors and accruals', 38), (' employee benefits - payroll', 38), (' total current employee benefits', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 31), (' gst payable and accruals', 31), (' employee benefits - current', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' forward exchange contracts', 31), (' make good provisions', 25), (' warranty', 25), (' rebates', 20), (' restructuring', 20), (' provisions - current', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' gst', 33), (' gst payables', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits', 30), (' warranty', 25), (' provisions - current', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 80], 'value': [25569.0, 1053.0], 'label': ['None Trade and other payables', 'None Lease liabilities'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 13665.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3036.0, 10629.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 51681.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3254.0, 48427.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 4, 5, 10, 16, 22, 24, 25, 26, 27, 28, 28, 29], 'score': [100, 100, 100, 100, 92, 100, 100, 92, 92, 92, 100, 100, 100, 100, 92, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 4846.0, 38.0, 3884.0, 0.0, 729.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'None 2020 Current', 'None 2020 Current', 'Totals', 'Totals', 'Totals', 'Totals', 'None 2020 Current', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [150997.0, 150997.0], 'label': ['None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)', 'None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -74616.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-74616.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -94999.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-94999.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 35790.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [35790.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -4256.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [-4256.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [29543.0, -31598.0, -2055.0, 2020.0, 0.0, 5922.0, -8448.0, -2526.0, 2020.0, 0.0, 325.0, 325.0, 2020.0, 0.0, 41448.0, -11905.0, 29543.0, 2019.0, 0.0, 3049.0, 2873.0, 5922.0, 2019.0, 0.0, 325.0, 325.0, 2019.0, 0.0], 'label': ['Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total', 'Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 11, 22, 23, 34, 35, 46, 47, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [242.0, 195.0, 1566.0, 1793.0, 14045.0, 1743.0, 1678.0, 0.0, 17531.0, 3731.0], 'label': ['Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors', 'charges paid in advance']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade and other receivables', 31), ('trade receivables', 26), ('billed', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('trade and other receivables', 45), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('trade and other receivables', 47), ('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade and other receivables', 31), ('trade receivables', 26), ('billed', 25)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('trade and other receivables', 45), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('trade and other receivables', 47), ('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors', 'charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Sales revenue', 40), ('from trading business', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('sale of products', 35), (' revenue from continuing activities', 34), (' Sale of coal', 33), ('revenue from operations', 32), ('net sales', 29), ('transmission and distribution business', 26), (' Revenue', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Sales revenue', 40), ('from trading business', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('sale of products', 35), (' revenue from continuing activities', 34), (' Sale of coal', 33), ('revenue from operations', 32), ('net sales', 29), ('transmission and distribution business', 26), (' Revenue', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 40), (' Cost of product sold', 39), ('purchase of stock-in-trade', 38), (' cost of coal sold', 38), (' Cost of inventory sold', 38), (' cost of goods sold', 38), ('cost of sales', 37), ('Cost of sales', 37), (' Cost of goods and services sold', 37), (' Personnel costs', 33), ('expenditure', 23), ('expense', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 40), (' Cost of product sold', 39), ('purchase of stock-in-trade', 38), (' cost of coal sold', 38), (' Cost of inventory sold', 38), (' cost of goods sold', 38), ('cost of sales', 37), ('Cost of sales', 37), (' Cost of goods and services sold', 37), (' Personnel costs', 33), ('expenditure', 23), ('expense', 20)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Marketing expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), (' Management expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Occupancy expenses', 26), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Advertising expenses', 24), ('Distribution expenses', 20), (' depreciation', 15), (' Occupancy ', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Marketing expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), (' Management expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Occupancy expenses', 26), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Advertising expenses', 24), ('Distribution expenses', 20), (' depreciation', 15), (' Occupancy ', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Rental expenses', 43), (' Administration expenses', 28), (' Occupancy expenses', 26), ('Rent', 21), (' Occupancy', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Rental expenses', 43), (' Administration expenses', 28), (' Occupancy expenses', 26), ('Rent', 21), (' Occupancy', 10)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other operating', 45), (' Other income', 40), ('Other revenue', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other operating', 45), (' Other income', 40), ('Other revenue', 30)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 33), (' Finance income and costs', 29), (' Interest revenue', 29), (' Finance income and finance costs', 29), ('finance income', 13), ('Finance income', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 33), (' Finance income and costs', 29), (' Interest revenue', 29), (' Finance income and finance costs', 29), ('finance income', 13), ('Finance income', 13)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Lease liabilities interest expense']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('prior year ', 41), ('earlier year', 39), ('current tax', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('minimum alternate tax credit entitlement', 33), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), (' tax (expense)/benefit', 31), ('deferred tax', 28), (' income tax', 28)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('prior year ', 41), ('earlier year', 39), ('current tax', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('minimum alternate tax credit entitlement', 33), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), (' tax (expense)/benefit', 31), ('deferred tax', 28), (' income tax', 28)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:25:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:25:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:25:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:25:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:25:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:25:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-07 12:28:00+0530 - sLogger - DEBUG - process_main_pages started
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-07 12:28:00+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-07 12:28:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:28:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-07 12:28:00+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('noncurrentassets', 33), ('noncurrentliabilities', 31), ('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('currentassets', 27), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('noncurrent assets', 22), ('liabilities', 21), ('equityandliabilities', 18), ('assets', 16), ('equity', 15), ('equityliabilities', 15)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equityandliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('noncurrentliabilities', 39), ('current assets', 38), ('noncurrent liabilities', 36), ('noncurrentassets', 35), ('currentassets', 32), ('equity and liabilities', 28), ('equityandliabilities', 27), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('liabilities', 16)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equityandliabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('noncurrentliabilities', 52), ('assets', 42), ('currentassets', 39), ('currentliabilities', 36), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equityliabilities', 22), ('equityandliabilities', 20), ('equity liabilities', 19), ('liabilities', 8)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('equityandliabilities', 40), ('noncurrentliabilities', 38), ('noncurrentassets', 28), ('equityliabilities', 27), ('currentliabilities', 26), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('currentassets', 15), ('assets', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentassets | score 24
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentliabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equityandliabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('currentassets', 33), ('current liabilities', 31), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equityliabilities', 20), ('equityandliabilities', 17), ('equity', 11)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentassets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentliabilities | score 39
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equityandliabilities | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-07 12:28:01+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-07 12:28:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-07 12:28:01+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-07 12:28:01+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Note | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:28:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-08-07 12:28:05+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-07 12:28:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-07 12:30:29+0530 - sLogger - DEBUG - process_main_pages started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-07 12:30:29+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-07 12:30:29+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-07 12:30:29+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('noncurrentassets', 33), ('noncurrentliabilities', 31), ('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('currentassets', 27), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('noncurrent assets', 22), ('liabilities', 21), ('equityandliabilities', 18), ('assets', 16), ('equity', 15), ('equityliabilities', 15)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equityandliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('noncurrentliabilities', 39), ('current assets', 38), ('noncurrent liabilities', 36), ('noncurrentassets', 35), ('currentassets', 32), ('equity and liabilities', 28), ('equityandliabilities', 27), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('liabilities', 16)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equityandliabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('noncurrentliabilities', 52), ('assets', 42), ('currentassets', 39), ('currentliabilities', 36), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equityliabilities', 22), ('equityandliabilities', 20), ('equity liabilities', 19), ('liabilities', 8)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('equityandliabilities', 40), ('noncurrentliabilities', 38), ('noncurrentassets', 28), ('equityliabilities', 27), ('currentliabilities', 26), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('currentassets', 15), ('assets', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentassets | score 24
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentliabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equityandliabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('currentassets', 33), ('current liabilities', 31), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equityliabilities', 20), ('equityandliabilities', 17), ('equity', 11)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentassets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentliabilities | score 39
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equityandliabilities | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-07 12:30:29+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-07 12:30:29+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-07 12:30:29+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-07 12:30:29+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Note | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:30:29+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-08-07 12:30:33+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents', 'cash asset', 'Cash and short term deposits', 'cash asset'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash asset', 67), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), ('cash asset', 31)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash asset', 21), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash asset', 61), ('cash asset', 61), ('cash and bank balances', 36), ('cash and cash equivalents', 35), (' cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25), ('cash and short term deposits', 25), ('Cash and short term deposits', 25)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash and cash equivalents', 33), (' cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28), ('cash asset', 23), ('cash asset', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30), (' cash and cash equivalents', 30)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' cash at bank and on hand', 40), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 40), (' cash on hand and at bank', 40), (' short term deposits', 30), (' cash and cash equivalents', 30), ('cash on hand', 22), (' cash at bank', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('cash on hand', 0), (' cash at bank', 0), (' cash at bank and on hand', 0), (' short term deposits', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 0), (' cash and cash equivalents', 0), (' cash on hand and at bank', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none raw materials , res_fuzz_match = [('raw materials', 100), (' raw materials', 100), (' stores and other consumables at cost', 53), (' cranes - in transit', 46), (' goods in transit', 42), (' provision for inventory obsolescence', 40), (' cranes', 40), (' spare parts', 40), (' inventories', 33), (' work in progress', 31), (' finished goods at cost', 27), (' finished goods', 18), (' finished goods', 18)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none 27198 , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [18547.0, 8651.0], 'label': ['None Raw materials', 'None Finished goods'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23), ('prepayments', 21)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68), ('prepayments', 16)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('prepaid expense', 50), ('prepaid expenditure', 50), ('other prepayments', 42), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), ('other prepayments', 42), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), ('prepayments', 33), ('other prepayments', 33), ('prepaid', 29), ('prepaid expense', 23), ('prepaid expenditure', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('current', 71), ('other prepayments', 42), ('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0), ('other prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-07 12:30:33+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 49610.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 11999.0, 29753.0, 7530.0, 328.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' other financial assets', 81), (' biological assets', 56), ('other assets', 50), ('other current assets', 44), (' other current assets', 44), (' trade and other receivables', 29), (' income tax receivable from related parties', 26), (' deferred operating expenditure', 24)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [(' income tax receivable from related parties', 100), (' trade and other receivables', 47), ('other current assets', 35), (' other current assets', 35), (' other financial assets', 31), (' deferred operating expenditure', 30), (' financial assets', 26), ('other assets', 23), (' biological assets', 22)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), (' other current assets', 100), ('other assets', 73), (' other financial assets', 68), (' biological assets', 45), (' deferred operating expenditure', 45), (' financial assets', 44), (' trade and other receivables', 39), (' income tax receivable from related parties', 35)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 6, 7], 'score': 100, 'value': 20431.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Financial assets', 'Income tax receivable from related parties', 'Other current assets'], 'note_numbers': [nan, '7', '9', '20', '10'], 'line_item_value': [0.0, 13624.0, 0.0, 6318.0, 489.0]}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), ('current', 29), (' accrued rebates', 20)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 13624.0, 1697.0, 11927.0, 11999.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('current', 100), ('foreign exchange derivatives at fair value', 100), (' electricity derivatives at fair value', 77), (' foreign exchange forward contracts', 67), (' current investments', 64), (' derivative contracts - fair value', 62), (' forward exchange contracts', 58), (' rental bond', 55), (' related party receivable', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' bank guarantee', 38), ('other assets', 36), (' lng', 33), (' deposits', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('current', 100), (' electricity derivatives at fair value', 100), ('foreign exchange derivatives at fair value', 73), (' current investments', 71), (' derivative contracts - fair value', 62), (' interest receivable', 60), (' accrued interest', 50), (' related party receivable', 50), (' other debtors and prepayments', 48), (' amount receivable from controlling entity', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 44), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 38), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('current', 71), ('foreign exchange derivatives at fair value', 70), (' derivative contracts - fair value', 62), (' current investments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' other debtors and prepayments', 43), (' other', 40), (' forward exchange contracts', 38), (' foreign exchange forward contracts', 37), ('other assets', 36), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value', 'Current Foreign exchange derivatives at fair value', 'Current Electricity derivatives at fair value', 'Current Total', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:33+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' ', 0)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-07 12:30:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 51.0, 29702.0, 29753.0, 12453.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:30:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('net value', 25), ('gross', 20), ('net book value', 15), ('cost', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 46, 47, 47, 48, 49, 50, 51, 52, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 100, 80, 100, 80, 100, 100, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 242.0, 195.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1566.0, 1793.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 14045.0, 1743.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 1678.0, 0.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0, 17531.0, 3731.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Net book value At 31 December 2020', 'Construction in progress $000', 'Net book value At 31 December 2019', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets', 'intangible under development', 'intangible assets under development']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 12453.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [12453.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['intangible assets', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible assets', 58), ('intangible under development', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible assets', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible assets', 50), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 53), ('intangible under development', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets', 83), ('intangible assets under development', 77), ('intangible under development', 46)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets', 70), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets', 58), ('intangible assets under development', 42), ('intangible under development', 32)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 83, 'value': 0.0, 'line_item_label': ['Financial assets'], 'note_numbers': ['9'], 'line_item_value': [0.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 69), (' investments accounted for using the equity method', 63), ('joint ventures and associates', 53), ('derivative financial instruments', 50)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('derivative financial instruments', 77), (' investment in associate', 48), ('joint ventures and associates', 46), (' investment in joint venture', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('derivative financial instruments', 47), (' investments accounted for using the equity method', 47), (' investment in associate', 40), (' investment in joint venture', 37), ('investment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none investment in joint venture (southern cross aluminium pty ltd) , res_fuzz_match = [('investment in joint venture', 100), (' investment in associate', 69), (' carrying amount at the end of the financial year', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [47672.0, 54535.0], 'label': ['None Investment in joint venture (Southern Cross Aluminium Pty Ltd)', 'None Investment in joint venture (Southern Cross Aluminium Pty Ltd)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1. january , res_fuzz_match = [('investment in joint venture', 52), (' carrying amount at the end of the financial year', 43), (' investment in associate', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('investment in joint venture', 79), (' investment in associate', 54), (' carrying amount at the end of the financial year', 41)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none share of other comprehensive income, net of tax , res_fuzz_match = [(' carrying amount at the end of the financial year', 49), (' investment in associate', 46), ('investment in joint venture', 42)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none carrying value of investment at end of year , res_fuzz_match = [('investment in joint venture', 58), (' carrying amount at the end of the financial year', 55), (' investment in associate', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = ownership interest % , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = southern cross aluminium pty ltd investment , res_fuzz_match = [(' investment in associate', 46), ('investment in joint venture', 42), (' carrying amount at the end of the financial year', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = ownership interest $000 , res_fuzz_match = [('investment in joint venture', 50), (' carrying amount at the end of the financial year', 39), (' investment in associate', 38)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 13131.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 12453.0, 678.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47), (' other assets', 47), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 38), (' financial assets', 38), (' exploration and evaluation expenditure', 35), (' leased assets', 28), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [(' financial assets', 100), (' leased assets', 61), (' other non-current assets', 56), (' other non-current assets', 56), ('other assets', 50), (' other assets', 50), (' loan receivables', 33), ('non-current', 30), (' exploration and evaluation expenditure', 25), (' leases', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [(' other non-current assets', 100), (' other non-current assets', 100), ('other assets', 73), (' other assets', 73), (' financial assets', 56), ('non-current', 54), (' leased assets', 48), (' exploration and evaluation expenditure', 39), (' loan receivables', 27), (' leases', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6], 'score': 100, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Financial assets', 'Other non-current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 0.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 77), ('finance receivables', 46), (' defined benefit plans', 44), (' allowance for expected credit losses', 43), (' warehouse and office equipment', 42), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' total properties', 36), (' right-of-use-assets', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' total properties', 43), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 37), (' right-of-use-assets', 33), (' warehouse and office equipment', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit losses', 46), (' electricity derivatives at fair value', 38), (' defined benefit plans', 38), (' exploration and evaluation expenditure', 38), (' right-of-use-assets', 31), (' total properties', 31), (' warehouse and office equipment', 31), (' motor vehicles', 25), ('finance receivables', 23)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [(' electricity derivatives at fair value', 100), ('finance receivables', 46), (' defined benefit plans', 44), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total properties', 36), (' right-of-use-assets', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5, 7], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 29702.0, 12453.0], 'label': ['Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value', 'Current Electricity derivatives at fair value', 'Non-current Electricity derivatives at fair value'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases', ' interest bearing liabilites'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' interest bearing liabilites', 43), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 61), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' interest bearing liabilites', 45), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), (' loans and borrowings', 57), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), (' bank overdraft', 40), ('short term debt', 38), (' interest bearing liabilites', 21), ('lease liabilities', 12), (' leases', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' interest bearing liabilites', 21), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), (' interest bearing liabilites', 50), (' loans and borrowings', 34), (' bank overdraft', 29), (' leases', 22), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' interest bearing liabilites', 61), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = multi-option facilities $000 , res_fuzz_match = [(' secured long-term bank loans', 43), (' loans from related party', 43), (' utilised – bank borrowings', 36), (' lease liabilities - current', 36), (' lease liabilities', 36), (' not later than 1 year', 29), (' not later than one year', 29), (' leases', 25), (' balance at the end of period', 21), (' bank overdraft', 14), ('bank borrowings', 9)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none total facilities , res_fuzz_match = [(' lease liabilities', 45), (' not later than 1 year', 44), (' not later than one year', 44), (' secured long-term bank loans', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' bank overdraft', 36), (' balance at the end of period', 31), ('bank borrowings', 27), (' leases', 25), (' utilised – bank borrowings', 19)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 95), (' bank overdraft', 64), (' leases', 50), (' secured long-term bank loans', 45), (' lease liabilities', 45), (' not later than one year', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' balance at the end of period', 38), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none utilised - bank guarantees , res_fuzz_match = [(' utilised – bank borrowings', 65), (' bank overdraft', 59), ('bank borrowings', 55), (' leases', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' secured long-term bank loans', 46), (' lease liabilities', 45), (' not later than one year', 43), (' loans from related party', 38), (' balance at the end of period', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none balance at 31 december , res_fuzz_match = [(' leases', 50), (' secured long-term bank loans', 50), (' not later than 1 year', 44), (' not later than one year', 44), (' lease liabilities - current', 39), (' balance at the end of period', 39), ('bank borrowings', 36), (' lease liabilities', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 33), (' loans from related party', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = bank guarantee facilities $000 , res_fuzz_match = [(' bank overdraft', 57), ('bank borrowings', 55), (' loans from related party', 47), (' lease liabilities', 45), (' not later than 1 year', 42), (' balance at the end of period', 42), (' secured long-term bank loans', 39), (' not later than one year', 38), (' utilised – bank borrowings', 32), (' lease liabilities - current', 32), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 9, 13], 'score': [100, 100, 100, 100], 'value': [0.0, 0.0, 4000.0, 0.0], 'label': ['None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings', 'None Utilised - bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' not later than one year', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none bank borrowings , res_fuzz_match = [('bank borrowings', 100), (' utilised – bank borrowings', 75), (' bank overdraft', 64), (' secured long-term bank loans', 62), (' not later than one year', 50), (' not later than 1 year', 44), (' loans from related party', 38), (' lease liabilities - current', 38), (' balance at the end of period', 38), (' lease liabilities', 36), (' leases', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' not later than one year', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [0.0, 4000.0], 'label': ['None Bank borrowings', 'None Bank borrowings'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors', ' trade and other payables', ' trade payables', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33), ('trade payable', 31), ('other trade payables', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9228.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9228.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax', 'provision'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities', 33), ('provision', 33), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provision', 100), ('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current tax liabilities', 64), (' income tax payable', 37), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33), ('provision', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 9459.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '17'], 'line_item_value': [0.0, 9459.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' provision for income tax', 33), ('income tax (refundable)/payable ', 27)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' provision for income tax', 43), ('income tax (refundable)/payable ', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for income tax', 60), ('income tax (refundable)/payable ', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' provision for income tax', 36), ('income tax (refundable)/payable ', 35)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provision for income tax', 42), ('income tax (refundable)/payable ', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 35329.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 26101.0, 9228.0, 0.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [(' financial liabilities', 100), (' other financial liabilities', 82), (' foreign exchange contract liability', 49), ('other current liabilities', 47), (' other current liabilities', 47), (' trade and other payables', 33), (' employee benefits', 28), (' customer deposits', 21), (' deferred revenue', 15), ('provisions', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5], 'score': 100, 'value': 34709.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Financial liabilities'], 'note_numbers': [nan, nan, '17', '15'], 'line_item_value': [0.0, 22315.0, 9459.0, 2935.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - current', 100), (' employee benefits - payroll', 100), (' total current employee benefits', 100), (' ultimate parent entity', 53), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' secured long-term bank loans', 40), (' share of joint venture payables', 40), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 33), (' current - liability for annual and long service leave', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' gst', 33), (' gst liabilities', 30), (' make good provisions', 28), ('other creditors and accruals', 27), (' other related parties', 27), (' derivative contracts - at fair value', 27), (' loans from related party', 27), (' gst payable and accruals', 27), (' arising from service contracts', 27), (' forward exchange contracts', 27), (' warranty', 25), (' gst payables', 20), (' provision for associate funding', 20), (' restructuring', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' other', 60), (' arising from service contracts', 50), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), ('other creditors and accruals', 43), (' share of joint venture payables', 43), (' make good provisions', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' rebates', 40), (' restructuring', 40), (' warranty', 38), (' ultimate parent entity', 36), (' other related parties', 36), (' loan payable to relayed party under tax funding agreement', 36), (' secured long-term bank loans', 36), (' loans from related party', 36), (' employee benefits - current', 36), (' provisions - current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' gst', 33), (' derivative contracts - at fair value', 29), (' current - liability for annual and long service leave', 29), (' contract liabilites - current', 29), (' gst payables', 20), (' gst payable and accruals', 14), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' other', 100), (' provision for associate funding', 73), (' gst', 67), (' provisions - current', 57), (' ultimate parent entity', 53), (' arising from service contracts', 52), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), (' gst liabilities', 50), (' restructuring', 50), (' loans from related party', 48), (' employee benefits - current', 48), ('other creditors and accruals', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' warranty', 38), (' gst payable and accruals', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' other related parties', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' other creditors', 42), (' gst payable and accruals', 42), (' employee benefits - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' other creditors', 42), (' total current employee benefits', 42), (' rebates', 40), (' other', 40), (' warranty', 38), (' ultimate parent entity', 33), (' provisions - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' forward exchange contracts', 33), (' gst liabilities', 32), (' gst payables', 30), (' restructuring', 30), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [(' rebates', 60), (' other', 60), (' provisions - current', 57), (' loan payable to relayed party under tax funding agreement', 48), (' loans from related party', 48), (' other related parties', 47), ('other creditors and accruals', 43), (' other creditors', 43), (' other creditors', 43), (' abandonment and decommissioning costs', 43), (' arising from service contracts', 43), (' other creditors', 43), (' total current employee benefits', 43), (' gst payables', 40), (' restructuring', 40), (' derivative contracts - at fair value', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' contract liabilites - current', 39), (' share of joint venture payables', 39), (' warranty', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' forward exchange contracts', 35), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' employee benefits - current', 51), (' provisions - current', 43), (' secured long-term bank loans', 41), (' current - liability for annual and long service leave', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' other', 40), (' make good provisions', 38), (' employee benefits - payroll', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' provision for associate funding', 35), (' total current employee benefits', 35), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 30), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 25), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), (' rebates', 60), (' other related parties', 43), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' contract liabilites - current', 43), (' total current employee benefits', 43), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' derivative contracts - at fair value', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' warranty', 25), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 38.0, 0.0, 0.0, -518.0, 0.0, 0.0, 0.0, 0.0, 0.0, -336.0, 0.0, 729.0, 0.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Provision Provision for asset for carbon Defined retirement dust and Benefit obligation other', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 56), ('other creditors and accruals', 50), (' forward exchange contracts', 50), (' current - liability for annual and long service leave', 48), (' other related parties', 47), (' derivative contracts - at fair value', 46), (' gst payable and accruals', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' make good provisions', 38), (' warranty', 38), (' total current employee benefits', 37), (' contract liabilites - current', 36), (' gst', 33), (' ultimate parent entity', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' employee benefits - current', 30), (' restructuring', 30), (' provisions - current', 29)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none electricity derivatives at fair value through oci , res_fuzz_match = [(' derivative contracts - at fair value', 62), (' other related parties', 53), ('other creditors and accruals', 50), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' employee benefits - payroll', 45), (' arising from service contracts', 44), (' loans from related party', 43), (' secured long-term bank loans', 42), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' employee benefits - current', 39), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' gst payable and accruals', 36), (' provisions - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 62), (' current - liability for annual and long service leave', 50), (' gst payables', 50), (' other related parties', 45), (' loans from related party', 45), (' derivative contracts - at fair value', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' share of joint venture payables', 44), (' abandonment and decommissioning costs', 44), (' other', 40), ('other creditors and accruals', 38), (' employee benefits - payroll', 38), (' total current employee benefits', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 31), (' gst payable and accruals', 31), (' employee benefits - current', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' forward exchange contracts', 31), (' make good provisions', 25), (' warranty', 25), (' rebates', 20), (' restructuring', 20), (' provisions - current', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' gst', 33), (' gst payables', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits', 30), (' warranty', 25), (' provisions - current', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' warranty', 53), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' make good provisions', 25), (' gst payables', 10), (' gst liabilities', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' restructuring', 40), (' other', 40), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits', 33), (' ultimate parent entity', 25), (' warranty', 25), (' rebates', 20), (' gst payables', 10), (' gst liabilities', 10), (' gst', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 80], 'value': [25569.0, 1053.0], 'label': ['None Trade and other payables', 'None Lease liabilities'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings', 45), (' lease liabilities', 45), (' lease liability', 45), (' borrowings', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 33), (' borrowings', 33), (' loans and borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 27), (' borrowings', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 13665.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3036.0, 10629.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other long term liabilities', 50), (' other financial liabilities', 43), (' other non-current liabilities', 38), (' financial liabilities', 33), (' employee benefits', 32), (' provision for associate funding', 32), (' provisions', 14)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions', 100), (' provision for associate funding', 43), (' employee benefits', 19), (' other non-current liabilities', 15), ('trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8), ('other long term liabilities', 7)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' other financial liabilities', 56), ('trade and other payables', 53), (' financial liabilities', 53), (' other non-current liabilities', 44), ('other long term liabilities', 42), (' employee benefits', 26), (' provision for associate funding', 21), (' provisions', 18)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2], 'score': 100, 'value': 51681.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, nan, '17'], 'line_item_value': [0.0, 3254.0, 48427.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = employee benefits , res_fuzz_match = [(' employee benefits - non current', 100), (' employee benefits - payroll', 100), (' total non-current employee benefits', 100), (' electricity derivatives at fair value through oci', 40), (' non-current - liability for long-service leave', 40), (' trade payables - related parties', 40), (' abandonment and decommissioning costs', 33), (' provisions - non-current', 30), (' make good provisions', 28), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' contract liabilites - non-current', 27), (' provision for associate funding', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = workers compensation , res_fuzz_match = [(' non-current - liability for long-service leave', 43), (' make good provisions', 43), (' total non-current employee benefits', 43), ('non-current trade and other payables', 36), (' employee benefits - non current', 36), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 36), (' electricity derivatives at fair value through oci', 29), (' derivative contracts - at fair value', 29), (' provisions - non-current', 29), (' trade payables - related parties', 29), (' contract liabilites - non-current', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = provision provision for asset for carbon defined retirement dust and benefit obligation other , res_fuzz_match = [(' provision for associate funding', 73), (' provisions - non-current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - payroll', 50), ('non-current trade and other payables', 47), (' trade payables - related parties', 46), (' total non-current employee benefits', 45), (' employee benefits - non current', 44), (' non-current - liability for long-service leave', 44), (' make good provisions', 44), (' abandonment and decommissioning costs', 42), (' electricity derivatives at fair value through oci', 41), (' contract liabilites - non-current', 40)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at 1 january 2020 , res_fuzz_match = [(' employee benefits - non current', 50), (' non-current - liability for long-service leave', 50), (' abandonment and decommissioning costs', 50), ('non-current trade and other payables', 42), (' derivative contracts - at fair value', 42), (' provisions - non-current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 42), (' total non-current employee benefits', 42), (' electricity derivatives at fair value through oci', 33), (' provision for associate funding', 33), (' make good provisions', 33)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none arising during the year , res_fuzz_match = [('non-current trade and other payables', 52), (' electricity derivatives at fair value through oci', 43), (' provisions - non-current', 43), (' abandonment and decommissioning costs', 43), (' trade payables - related parties', 43), (' derivative contracts - at fair value', 39), (' employee benefits - non current', 39), (' non-current - liability for long-service leave', 39), (' total non-current employee benefits', 39), (' employee benefits - payroll', 36), (' contract liabilites - non-current', 35), (' provision for associate funding', 33), (' make good provisions', 31)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none unwinding of discount , res_fuzz_match = [(' abandonment and decommissioning costs', 55), ('non-current trade and other payables', 50), (' employee benefits - non current', 50), (' make good provisions', 38), (' employee benefits - payroll', 37), (' provisions - non-current', 36), (' derivative contracts - at fair value', 35), (' non-current - liability for long-service leave', 35), (' provision for associate funding', 35), (' total non-current employee benefits', 35), (' electricity derivatives at fair value through oci', 30), (' contract liabilites - non-current', 30), (' trade payables - related parties', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none at31 december 2020 , res_fuzz_match = [(' abandonment and decommissioning costs', 71), ('non-current trade and other payables', 50), (' employee benefits - non current', 43), (' non-current - liability for long-service leave', 43), (' contract liabilites - non-current', 43), (' total non-current employee benefits', 43), (' derivative contracts - at fair value', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' electricity derivatives at fair value through oci', 29), (' provisions - non-current', 29), (' make good provisions', 21)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 current , res_fuzz_match = [(' employee benefits - non current', 92), ('non-current trade and other payables', 67), (' provisions - non-current', 67), (' total non-current employee benefits', 67), (' non-current - liability for long-service leave', 58), (' contract liabilites - non-current', 58), (' employee benefits - payroll', 50), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 33), (' provision for associate funding', 33), (' trade payables - related parties', 33), (' electricity derivatives at fair value through oci', 25), (' make good provisions', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 2020 non-current , res_fuzz_match = [(' provisions - non-current', 75), (' total non-current employee benefits', 75), (' employee benefits - non current', 67), (' contract liabilites - non-current', 67), ('non-current trade and other payables', 58), (' non-current - liability for long-service leave', 58), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 42), (' electricity derivatives at fair value through oci', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' make good provisions', 33), (' trade payables - related parties', 25)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = totals , res_fuzz_match = [(' total non-current employee benefits', 100), (' derivative contracts - at fair value', 60), (' contract liabilites - non-current', 60), ('non-current trade and other payables', 40), (' electricity derivatives at fair value through oci', 40), (' employee benefits - non current', 40), (' non-current - liability for long-service leave', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' trade payables - related parties', 40), (' provisions - non-current', 20), (' make good provisions', 20)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 4, 5, 10, 16, 22, 24, 25, 26, 27, 28, 28, 29], 'score': [100, 100, 100, 100, 92, 100, 100, 92, 92, 92, 100, 100, 100, 100, 92, 100, 100], 'value': [4343.0, 541.0, 0.0, 4884.0, 4846.0, 4846.0, 38.0, 3884.0, 0.0, 729.0, 19857.0, 38883.0, -854.0, 57886.0, 9459.0, 9459.0, 48427.0], 'label': ['Employee benefits', 'Employee benefits', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'Employee benefits', 'Employee benefits', 'None 2020 Current', 'None 2020 Current', 'None 2020 Current', 'Totals', 'Totals', 'Totals', 'Totals', 'None 2020 Current', 'Totals', 'Totals'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns']}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-07 12:30:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('contributed equity', 100), ('contributed equity', 100), ('equity share capital', 59), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 37), (' share capital ', 37), ('common stock', 36)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 150997.0, 'line_item_label': ['Contributed equity'], 'note_numbers': ['18'], 'line_item_value': [150997.0]}
2023-08-07 12:30:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:34+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = none 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) , res_fuzz_match = [('ordinary shares', 100), (' fully paid ordinary shares', 100), (' ordinary shares fully paid', 76), (' issued and paid-up share capital', 59), (' total issued capital', 50), (' retained profits', 46)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('ordinary shares', 0), (' fully paid ordinary shares', 0), (' issued and paid-up share capital', 0), (' retained profits', 0), (' ordinary shares fully paid', 0), (' total issued capital', 0)]
2023-08-07 12:30:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [150997.0, 150997.0], 'label': ['None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)', 'None 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534) 155,299,534 ordinary shares issued and fully paid (2019: 155,299,534)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -74616.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-74616.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('retained earnings', 37), ('reserves surplus', 21), (' accumulated losses', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -94999.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': [nan], 'line_item_value': [-94999.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 34), (' non-controlling interest', 34)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 35790.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [35790.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' reserves', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -4256.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [-4256.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 1 january , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 58), ('foreign currency translation reserve', 45)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve net other comprehensive loss for the year , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 67), (' reserve in joint venture', 63), (' total other reserves', 61), ('foreign currency translation reserve', 42)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve balance at 31 december , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 53), ('foreign currency translation reserve', 46)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve total , res_fuzz_match = [(' cash flow hedge reserve', 100), (' other reserve', 75), (' total other reserves', 61), (' reserve in joint venture', 47), ('foreign currency translation reserve', 41)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 1 january , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 42), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture net other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 67), (' total other reserves', 61), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 45)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture balance at 31 december , res_fuzz_match = [(' reserve in joint venture', 100), ('foreign currency translation reserve', 45), (' other reserve', 42), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = reserve in joint venture total , res_fuzz_match = [(' reserve in joint venture', 100), (' other reserve', 50), ('foreign currency translation reserve', 44), (' total other reserves', 33), (' cash flow hedge reserve', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 1 january , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 58), ('foreign currency translation reserve', 44), (' cash flow hedge reserve', 43)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve balance at 31 december , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' reserve in joint venture', 53), (' cash flow hedge reserve', 43), ('foreign currency translation reserve', 42)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = other reserve total , res_fuzz_match = [(' other reserve', 100), (' total other reserves', 67), (' cash flow hedge reserve', 62), ('foreign currency translation reserve', 50), (' reserve in joint venture', 50)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total balance at 1 january , res_fuzz_match = [(' total other reserves', 39), ('foreign currency translation reserve', 35), (' reserve in joint venture', 32), (' cash flow hedge reserve', 25), (' other reserve', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total net other comprehensive loss for the year , res_fuzz_match = [(' other reserve', 67), (' total other reserves', 67), (' cash flow hedge reserve', 48), ('foreign currency translation reserve', 42), (' reserve in joint venture', 37)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total balance at 31 december , res_fuzz_match = [(' total other reserves', 50), ('foreign currency translation reserve', 37), (' cash flow hedge reserve', 32), (' other reserve', 25), (' reserve in joint venture', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('foreign currency translation reserve', 0), (' cash flow hedge reserve', 0), (' reserve in joint venture', 0), (' other reserve', 0), (' total other reserves', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [29543.0, -31598.0, -2055.0, 2020.0, 0.0, 5922.0, -8448.0, -2526.0, 2020.0, 0.0, 325.0, 325.0, 2020.0, 0.0, 41448.0, -11905.0, 29543.0, 2019.0, 0.0, 3049.0, 2873.0, 5922.0, 2019.0, 0.0, 325.0, 325.0, 2019.0, 0.0], 'label': ['Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total', 'Cash flow hedge reserve Balance at 1 January', 'Cash flow hedge reserve Net other comprehensive loss for the year', 'Cash flow hedge reserve Balance at 31 December', 'Cash flow hedge reserve Total', 'Cash flow hedge reserve Total', 'Reserve in joint venture Balance at 1 January', 'Reserve in joint venture Net other comprehensive (loss)/income for the year, net of tax', 'Reserve in joint venture Balance at 31 December', 'Reserve in joint venture Total', 'Reserve in joint venture Total', 'Other reserve Balance at 1 January', 'Other reserve Balance at 31 December', 'Other reserve Total', 'Other reserve Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 35)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment', 77)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant and equipment', 36), ('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36), ('plant and equipment', 29)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('gross', 20), ('cost', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('net book value', 33), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net book value', 27), ('net value', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('net book value', 31), ('accumulated depreciation', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment depreciation charge for the year , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 60), ('net value', 38), ('net book value', 31)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment impairment* , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 31), ('net value', 25), ('net book value', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 31), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 36), ('net book value', 15), ('net value', 12)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 11, 22, 23, 34, 35, 46, 47, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [242.0, 195.0, 1566.0, 1793.0, 14045.0, 1743.0, 1678.0, 0.0, 17531.0, 3731.0], 'label': ['Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019', 'Net book value At 31 December 2020', 'Net book value At 31 December 2019'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors', 'charges paid in advance']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade and other receivables', 31), ('trade receivables', 26), ('billed', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('trade and other receivables', 45), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('trade and other receivables', 47), ('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade and other receivables', 31), ('trade receivables', 26), ('billed', 25)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('trade and other receivables', 45), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('trade and other receivables', 47), ('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors', 'charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net trade debtors', 50), (' other debtors', 40), (' share of joint venture receivables', 40), (' related party receivables', 30), ('trade receivables', 20), ('charges paid in advance', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0), ('charges paid in advance', 0)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Sales revenue', 40), ('from trading business', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('sale of products', 35), (' revenue from continuing activities', 34), (' Sale of coal', 33), ('revenue from operations', 32), ('net sales', 29), ('transmission and distribution business', 26), (' Revenue', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Sales revenue', 40), ('from trading business', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('sale of products', 35), (' revenue from continuing activities', 34), (' Sale of coal', 33), ('revenue from operations', 32), ('net sales', 29), ('transmission and distribution business', 26), (' Revenue', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 40), (' Cost of product sold', 39), ('purchase of stock-in-trade', 38), (' cost of coal sold', 38), (' Cost of inventory sold', 38), (' cost of goods sold', 38), ('cost of sales', 37), ('Cost of sales', 37), (' Cost of goods and services sold', 37), (' Personnel costs', 33), ('expenditure', 23), ('expense', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 40), (' Cost of product sold', 39), ('purchase of stock-in-trade', 38), (' cost of coal sold', 38), (' Cost of inventory sold', 38), (' cost of goods sold', 38), ('cost of sales', 37), ('Cost of sales', 37), (' Cost of goods and services sold', 37), (' Personnel costs', 33), ('expenditure', 23), ('expense', 20)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Marketing expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), (' Management expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Occupancy expenses', 26), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Advertising expenses', 24), ('Distribution expenses', 20), (' depreciation', 15), (' Occupancy ', 10)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Marketing expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), (' Management expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Occupancy expenses', 26), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Advertising expenses', 24), ('Distribution expenses', 20), (' depreciation', 15), (' Occupancy ', 10)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Rental expenses', 43), (' Administration expenses', 28), (' Occupancy expenses', 26), ('Rent', 21), (' Occupancy', 10)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' Rental expenses', 43), (' Administration expenses', 28), (' Occupancy expenses', 26), ('Rent', 21), (' Occupancy', 10)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other operating', 45), (' Other income', 40), ('Other revenue', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other operating', 45), (' Other income', 40), ('Other revenue', 30)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 33), (' Finance income and costs', 29), (' Interest revenue', 29), (' Finance income and finance costs', 29), ('finance income', 13), ('Finance income', 13)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 33), (' Finance income and costs', 29), (' Interest revenue', 29), (' Finance income and finance costs', 29), ('finance income', 13), ('Finance income', 13)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Lease liabilities interest expense']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [(' net finance costs ', 33), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('prior year ', 41), ('earlier year', 39), ('current tax', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('minimum alternate tax credit entitlement', 33), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), (' tax (expense)/benefit', 31), ('deferred tax', 28), (' income tax', 28)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('prior year ', 41), ('earlier year', 39), ('current tax', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('minimum alternate tax credit entitlement', 33), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), (' tax (expense)/benefit', 31), ('deferred tax', 28), (' income tax', 28)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-07 12:30:35+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-07 12:30:35+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:30:35+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-07 12:30:35+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-07 12:30:35+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss for the year , res_fuzz_match = [('NULL', 16)]
2023-08-07 12:30:35+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-07 12:35:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-07 12:35:00+0530 - sLogger - DEBUG - process_main_pages started
2023-08-07 12:35:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:35:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:35:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:35:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:35:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:35:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:35:01+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-07 12:35:01+0530 - sLogger - DEBUG - start_refactoring started
2023-08-07 12:35:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-07 12:35:01+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-07 12:35:01+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-07 12:35:01+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-07 12:35:01+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('noncurrentassets', 33), ('noncurrentliabilities', 31), ('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('currentassets', 27), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('noncurrent assets', 22), ('liabilities', 21), ('equityandliabilities', 18), ('assets', 16), ('equity', 15), ('equityliabilities', 15)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD currentliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equityandliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('noncurrentliabilities', 39), ('current assets', 38), ('noncurrent liabilities', 36), ('noncurrentassets', 35), ('currentassets', 32), ('equity and liabilities', 28), ('equityandliabilities', 27), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('liabilities', 16)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD currentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentassets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrentliabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equityandliabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('equityandliabilities', 42), ('currentassets', 40), ('noncurrent liabilities', 37), ('noncurrentassets', 36), ('liabilities', 32), ('equity', 32), ('noncurrentliabilities', 32), ('equityliabilities', 29), ('currentliabilities', 27)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentassets | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD currentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equityandliabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('noncurrentliabilities', 52), ('assets', 42), ('currentassets', 39), ('currentliabilities', 36), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equityliabilities', 22), ('equityandliabilities', 20), ('equity liabilities', 19), ('liabilities', 8)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('equityandliabilities', 40), ('noncurrentliabilities', 38), ('noncurrentassets', 28), ('equityliabilities', 27), ('currentliabilities', 26), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('currentassets', 15), ('assets', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentassets | score 24
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD currentliabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentassets | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equityandliabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('currentassets', 33), ('current liabilities', 31), ('noncurrent liabilities', 31), ('noncurrentassets', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equityliabilities', 20), ('equityandliabilities', 17), ('equity', 11)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentassets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD currentliabilities | score 39
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentassets | score 41
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrentliabilities | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equityandliabilities | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-07 12:35:01+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-07 12:35:01+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-07 12:35:01+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-07 12:35:01+0530 - sLogger - DEBUG - set_section_details started
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Note | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-07 12:35:01+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-08-07 12:35:05+0530 - sLogger - DEBUG - process_main_pages completed
