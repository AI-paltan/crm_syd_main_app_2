2023-08-17 11:21:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 11:21:22+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 11:21:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 11:21:22+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 11:21:22+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 11:21:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 11:21:22+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 11:21:22+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 11:22:19+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 11:22:19+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 11:22:19+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 11:22:19+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 11:22:19+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'cbs_meta' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'cpl_meta' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'ccf_meta' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS notes_number_processing
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'cbs_header' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF notes_number_processing
2023-08-17 11:22:19+0530 - sLogger - ERROR - error occured: local variable 'ccf_header' referenced before assignment
2023-08-17 11:22:19+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 11:22:19+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 11:22:19+0530 - sLogger - DEBUG - ASSETS | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current assets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentassets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent assets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current assets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity and liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity | score 33
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equityandliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Receivables | [('currentliabilities', 40), ('currentassets', 33), ('equity', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('equityandliabilities', 24), ('noncurrent assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity and liabilities', 17), ('noncurrent liabilities', 10)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD currentassets | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD current liabilities | score 53
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD currentliabilities | score 55
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrent assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrent liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD non current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD non current liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrentliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD noncurrentliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD equity and liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Receivables | MATCH WORD equityandliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Other financial assets | [('noncurrent assets', 62), ('current assets', 50), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('current liabilities', 36), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('currentassets', 32), ('noncurrentassets', 29), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('equityliabilities', 22), ('currentliabilities', 21)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD current assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD currentassets | score 49
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD current liabilities | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD currentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrent assets | score 53
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrentassets | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrent liabilities | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD non current assets | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD non current liabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrentliabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrentassets | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrentliabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD equity and liabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD equityandliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Intangibles | [('equityandliabilities', 47), ('currentassets', 33), ('liabilities', 33), ('equity', 33), ('equity liabilities', 32), ('current liabilities', 30), ('noncurrent liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equity and liabilities', 26), ('noncurrentliabilities', 22), ('current assets', 21), ('noncurrent assets', 21), ('assets', 18)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD currentassets | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD currentliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current liabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrentliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrentassets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrentliabilities | score 50
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity and liabilities | score 55
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity | score 24
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equityandliabilities | score 58
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-17 11:22:19+0530 - sLogger - DEBUG - TOTAL ASSETS | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD current assets | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD currentassets | score 56
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD current liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD currentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrent assets | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrentassets | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrent liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD non current assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD non current liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrentassets | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD equity and liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD equityandliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - LIABILITIES | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current assets | score 24
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentassets | score 25
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current liabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentliabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent assets | score 24
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent liabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current assets | score 24
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current liabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity and liabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equityandliabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Tax related payable to related entity | [('equity liabilities', 38), ('equity and liabilities', 35), ('current assets', 33), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityandliabilities', 30), ('currentassets', 29), ('noncurrentassets', 27), ('equityliabilities', 27), ('noncurrent assets', 24), ('noncurrentliabilities', 24), ('liabilities', 23), ('equity', 23), ('currentliabilities', 21), ('assets', 18)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD currentassets | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD currentliabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrent assets | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrent liabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD non current assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD non current liabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrentliabilities | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrentassets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD noncurrentliabilities | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD equity and liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD equity | score 60
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Tax related payable to related entity | MATCH WORD equityandliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Other liabilities | [('noncurrent liabilities', 69), ('liabilities', 67), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('noncurrent assets', 32), ('equityandliabilities', 26), ('assets', 24), ('current assets', 24), ('noncurrentassets', 22), ('equity', 22), ('equityliabilities', 20), ('currentliabilities', 19), ('currentassets', 17), ('noncurrentliabilities', 17)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD current assets | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD currentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD currentliabilities | score 69
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrent assets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD non current assets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD non current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD equity and liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD equityandliabilities | score 65
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equityandliabilities', 30), ('equity', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('noncurrentassets', 19), ('noncurrent assets', 14)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentassets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD currentliabilities | score 71
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrentliabilities | score 67
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equityandliabilities | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-17 11:22:19+0530 - sLogger - DEBUG - NET ASSETS | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD current assets | score 75
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD currentassets | score 70
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD current liabilities | score 41
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD currentliabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrent assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrentassets | score 72
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrent liabilities | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD non current assets | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD non current liabilities | score 42
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrentliabilities | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrentassets | score 72
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrentliabilities | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD equity and liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD equityandliabilities | score 33
2023-08-17 11:22:19+0530 - sLogger - DEBUG - EQUITY | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current assets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent assets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current assets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity and liabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity | score 100
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equityandliabilities | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-17 11:22:19+0530 - sLogger - DEBUG - Parent interests | [('current assets', 50), ('noncurrentassets', 47), ('currentassets', 44), ('noncurrentliabilities', 44), ('currentliabilities', 42), ('current liabilities', 34), ('equity and liabilities', 31), ('equityandliabilities', 31), ('assets', 30), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('liabilities', 19), ('equity', 19), ('equityliabilities', 17)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD current assets | score 53
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD currentassets | score 48
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD current liabilities | score 51
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD currentliabilities | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrent assets | score 48
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrentassets | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrent liabilities | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD non current assets | score 47
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD non current liabilities | score 46
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrentliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrentassets | score 44
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD noncurrentliabilities | score 43
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD equity and liabilities | score 37
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD equity | score 30
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text Parent interests | MATCH WORD equityandliabilities | score 33
2023-08-17 11:22:19+0530 - sLogger - DEBUG - TOTAL EQUITY | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD current assets | score 31
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD currentassets | score 32
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD currentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrent assets | score 34
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrent liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD non current assets | score 33
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD non current liabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrentassets | score 36
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrentliabilities | score 38
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD equity and liabilities | score 86
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD equity | score 90
2023-08-17 11:22:19+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD equityandliabilities | score 57
2023-08-17 11:22:20+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-17 11:22:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-17 11:22:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:22:20+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-17 11:22:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:22:20+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-17 11:22:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:22:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('cash and cash equivalents', 30), ('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('other bank balances', 17), ('bank balances other than cash and cash equivalents', 16), ('bank balances other than above', 12), ('cash and bank balances', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('cash asset', 55), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and short term deposits', 39), ('Cash and short term deposits', 39), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other bank balances', 26), ('cash asset', 25), ('bank balances other than above', 24), ('cash and bank balances', 23), ('bank balances other than cash and cash equivalents', 16), ('cash and cash equivalents', 15), ('cash and short term deposits', 12), ('Cash and short term deposits', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 11112.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': [], 'line_item_value': [11112.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('cash and cash equivalents', 30), ('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('other bank balances', 17), ('bank balances other than cash and cash equivalents', 16), ('bank balances other than above', 12), ('cash and bank balances', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('cash asset', 55), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and short term deposits', 39), ('Cash and short term deposits', 39), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other bank balances', 26), ('cash asset', 25), ('bank balances other than above', 24), ('cash and bank balances', 23), ('bank balances other than cash and cash equivalents', 16), ('cash and cash equivalents', 15), ('cash and short term deposits', 12), ('Cash and short term deposits', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 15460.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': [], 'line_item_value': [15460.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('inventories', 50)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 18128.0, 'line_item_label': ['Inventories'], 'note_numbers': [], 'line_item_value': [18128.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('inventories', 50)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 35291.0, 'line_item_label': ['Inventories'], 'note_numbers': [], 'line_item_value': [35291.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' prepayments ', 33), ('other assets ', 24), (' other current assets ', 24), (' other financial assets ', 24), (' other current financial assets ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other current assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' other financial assets ', 32), (' other current financial assets ', 24), (' trade and other receivables', 21), (' prepayments ', 17), (' other current assets ', 16), ('other assets ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 332419.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [292672.0, 1451.0, 38296.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' prepayments ', 33), ('other assets ', 24), (' other current assets ', 24), (' other financial assets ', 24), (' other current financial assets ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other current assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' other financial assets ', 32), (' other current financial assets ', 24), (' trade and other receivables', 21), (' prepayments ', 17), (' other current assets ', 16), ('other assets ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 368963.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [329217.0, 1450.0, 38296.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' financial assets ', 32), (' income tax receivable from related parties ', 31), (' deferred operating expenditure ', 30), ('other current assets ', 24), (' other assets ', 24), (' other financial assets ', 24), (' biological assets ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' financial assets ', 81), (' other assets ', 73), ('other current assets ', 68), (' biological assets ', 52), (' deferred operating expenditure ', 40), (' trade and other receivables', 39), (' income tax receivable from related parties ', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets ', 42), (' other financial assets ', 32), (' biological assets ', 22), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' deferred operating expenditure ', 15), (' other assets ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 332419.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [292672.0, 1451.0, 38296.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' financial assets ', 32), (' income tax receivable from related parties ', 31), (' deferred operating expenditure ', 30), ('other current assets ', 24), (' other assets ', 24), (' other financial assets ', 24), (' biological assets ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' financial assets ', 81), (' other assets ', 73), ('other current assets ', 68), (' biological assets ', 52), (' deferred operating expenditure ', 40), (' trade and other receivables', 39), (' income tax receivable from related parties ', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets ', 42), (' other financial assets ', 32), (' biological assets ', 22), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' deferred operating expenditure ', 15), (' other assets ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 368963.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [329217.0, 1450.0, 38296.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' interest bearing liabilites ', 39), ('short term debt ', 36), (' short-term debt ', 33), (' shortterm debt ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 28), (' cash overdraft ', 28), (' shortterm borrowings ', 27), ('  leases ', 18), (' borrowings ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [(' lease liabilities ', 52), (' short-term debt ', 46), (' shortterm debt ', 46), ('short term debt ', 44), (' shortterm borrowings ', 43), (' interest bearing liabilites ', 41), (' bank overdraft ', 38), (' cash overdraft ', 38), (' borrowings ', 33), (' loans and borrowings ', 30), ('  leases ', 25), (' cash and cash equivalents ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities ', 59), (' interest bearing liabilites ', 58), (' short-term debt ', 33), (' shortterm debt ', 33), ('short term debt ', 32), (' loans and borrowings ', 32), (' bank overdraft ', 27), (' cash and cash equivalents ', 27), (' cash overdraft ', 27), ('  leases ', 20), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 7], 'score': 100, 'value': 1619.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': [], 'line_item_value': [632.0, 987.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' interest bearing liabilites ', 39), ('short term debt ', 36), (' short-term debt ', 33), (' shortterm debt ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 28), (' cash overdraft ', 28), (' shortterm borrowings ', 27), ('  leases ', 18), (' borrowings ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [(' lease liabilities ', 52), (' short-term debt ', 46), (' shortterm debt ', 46), ('short term debt ', 44), (' shortterm borrowings ', 43), (' interest bearing liabilites ', 41), (' bank overdraft ', 38), (' cash overdraft ', 38), (' borrowings ', 33), (' loans and borrowings ', 30), ('  leases ', 25), (' cash and cash equivalents ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities ', 59), (' interest bearing liabilites ', 58), (' short-term debt ', 33), (' shortterm debt ', 33), ('short term debt ', 32), (' loans and borrowings ', 32), (' bank overdraft ', 27), (' cash and cash equivalents ', 27), (' cash overdraft ', 27), ('  leases ', 20), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 7], 'score': 100, 'value': 2002.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': [], 'line_item_value': [1098.0, 904.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51), ('other trade payables', 51), ('trade payable', 49)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('trade and other payables', 41), ('other trade payables', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53), ('other trade payables', 53), ('trade payable', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 40776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [40776.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51), ('other trade payables', 51), ('trade payable', 49)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('trade and other payables', 41), ('other trade payables', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53), ('other trade payables', 53), ('trade payable', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58149.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [58149.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade and other payables', 41)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 40776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [40776.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade and other payables', 41)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58149.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [58149.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current tax liabilities ', 67), (' income tax payable ', 43), (' tax ', 33), (' provision', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' tax ', 100), ('current tax liabilities ', 75), (' income tax payable ', 50), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 6, 8], 'score': 100, 'value': 121931.0, 'line_item_label': ['LIABILITIES', 'Tax related payable to related entity', 'Provisions', 'Provisions', 'Deferred tax liabilities'], 'note_numbers': [], 'line_item_value': [0.0, 39524.0, 15241.0, 53435.0, 13731.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current tax liabilities ', 67), (' income tax payable ', 43), (' tax ', 33), (' provision', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' tax ', 100), ('current tax liabilities ', 75), (' income tax payable ', 50), (' provision', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 6, 8], 'score': 100, 'value': 142043.0, 'line_item_label': ['LIABILITIES', 'Tax related payable to related entity', 'Provisions', 'Provisions', 'Deferred tax liabilities'], 'note_numbers': [], 'line_item_value': [0.0, 50397.0, 17884.0, 54069.0, 19693.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' trade and other payables', 51), ('other current liabilities', 41), (' other current liabilities', 41), (' other financial liabilities', 37), (' foreign exchange contract liability', 37), (' employee benefits', 36), (' financial liabilities', 28), (' deferred revenue', 24), (' customer deposits', 19), ('provisions', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75), (' other current liabilities', 75), (' other financial liabilities', 75), (' financial liabilities', 46), (' trade and other payables', 41), (' employee benefits', 37), (' foreign exchange contract liability', 28), (' customer deposits', 23), (' deferred revenue', 17), ('provisions', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other current liabilities', 56), (' other current liabilities', 56), (' other financial liabilities', 56), (' financial liabilities', 53), (' trade and other payables', 53), (' deferred revenue', 43), (' foreign exchange contract liability', 43), (' customer deposits', 27), (' employee benefits', 26), ('provisions', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6], 'score': 100, 'value': 109452.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Provisions'], 'note_numbers': [], 'line_item_value': [40776.0, 15241.0, 53435.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' trade and other payables', 51), ('other current liabilities', 41), (' other current liabilities', 41), (' other financial liabilities', 37), (' foreign exchange contract liability', 37), (' employee benefits', 36), (' financial liabilities', 28), (' deferred revenue', 24), (' customer deposits', 19), ('provisions', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75), (' other current liabilities', 75), (' other financial liabilities', 75), (' financial liabilities', 46), (' trade and other payables', 41), (' employee benefits', 37), (' foreign exchange contract liability', 28), (' customer deposits', 23), (' deferred revenue', 17), ('provisions', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other current liabilities', 56), (' other current liabilities', 56), (' other financial liabilities', 56), (' financial liabilities', 53), (' trade and other payables', 53), (' deferred revenue', 43), (' foreign exchange contract liability', 43), (' customer deposits', 27), (' employee benefits', 26), ('provisions', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6], 'score': 100, 'value': 130102.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Provisions'], 'note_numbers': [], 'line_item_value': [58149.0, 17884.0, 54069.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' perpetual equity instrument ', 55), (' equity share capital ', 48), (' share capital ', 46), (' share capital ', 46), (' contributed equity ', 45), (' contributed equity', 45), (' issued capital ', 24), ('common stock ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 284568.0, 'line_item_label': ['Contributed equity'], 'note_numbers': [], 'line_item_value': [284568.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' perpetual equity instrument ', 55), (' equity share capital ', 48), (' share capital ', 46), (' share capital ', 46), (' contributed equity ', 45), (' contributed equity', 45), (' issued capital ', 24), ('common stock ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 284568.0, 'line_item_label': ['Contributed equity'], 'note_numbers': [], 'line_item_value': [284568.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('Share premium', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('Share premium', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' retained profits', 50), (' retained earnings ', 46), (' reserves surplus ', 36), ('other equity ', 30), (' accumulated losses ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 144352.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [], 'line_item_value': [144352.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' retained profits', 50), (' retained earnings ', 46), (' reserves surplus ', 36), ('other equity ', 30), (' accumulated losses ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 171140.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [], 'line_item_value': [171140.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('minority interest ', 69), (' minority interest ', 69), (' noncontrolling interest ', 65), (' non-controlling interest', 65), (' non controlling interest ', 57)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('minority interest ', 69), (' minority interest ', 69), (' noncontrolling interest ', 65), (' non-controlling interest', 65), (' non controlling interest ', 57)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('other reserves ', 44), (' foreign currency translation reserve', 39), (' reserves ', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 22290.0, 'line_item_label': ['Reserves'], 'note_numbers': [], 'line_item_value': [22290.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('other reserves ', 44), (' foreign currency translation reserve', 39), (' reserves ', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21170.0, 'line_item_label': ['Reserves'], 'note_numbers': [], 'line_item_value': [21170.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('account receivables ', 100), (' trade receivables ', 100), (' government subsidies receivable ', 100), (' receivable ', 100), (' trade and other receivables', 100), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' trade receivables ', 42), (' government subsidies receivable ', 42), (' trade and other receivables', 42), (' unbilled ', 40), (' receivable ', 33), ('account receivables ', 30), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('account receivables ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' trade receivables ', 17), (' government subsidies receivable ', 17), (' receivable ', 17), (' billed ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 292882.0, 'line_item_label': ['Trade and other receivables', 'Receivables'], 'note_numbers': [], 'line_item_value': [292672.0, 210.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('account receivables ', 100), (' trade receivables ', 100), (' government subsidies receivable ', 100), (' receivable ', 100), (' trade and other receivables', 100), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' trade receivables ', 42), (' government subsidies receivable ', 42), (' trade and other receivables', 42), (' unbilled ', 40), (' receivable ', 33), ('account receivables ', 30), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('account receivables ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' trade receivables ', 17), (' government subsidies receivable ', 17), (' receivable ', 17), (' billed ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 329607.0, 'line_item_label': ['Trade and other receivables', 'Receivables'], 'note_numbers': [], 'line_item_value': [329217.0, 390.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' sale of products ', 32), (' net sales ', 30), (' transmission and distribution business ', 30), (' from trading business ', 29), (' Sale of coal ', 29), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Sales revenue ', 39), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' net sales ', 48), (' from trading business ', 36), ('revenue from operations ', 34), (' Sales revenue ', 33), (' sale of products ', 32), (' transmission and distribution business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' net sales ', 40), (' transmission and distribution business ', 35), (' revenue from continuing activities', 32), (' from trading business ', 30), (' Sale of coal ', 29), (' revenue from contracts with customers ', 27), (' Sales revenue ', 26), (' sale of products ', 25), ('revenue from operations ', 21), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Sales revenue ', 42), (' Revenue ', 32), (' net sales ', 29), (' transmission and distribution business ', 29), (' from trading business ', 29), ('revenue from operations ', 28), (' sale of products ', 24), (' revenue from contracts with customers ', 22), (' revenue from continuing activities', 21), (' Sale of coal ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' revenue from continuing activities', 38), (' from trading business ', 37), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' transmission and distribution business ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' sale of products ', 23), (' Revenue ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 32), ('revenue from operations ', 31), (' revenue from continuing activities', 30), (' transmission and distribution business ', 29), (' Sales revenue ', 25), (' sale of products ', 24), (' net sales ', 19), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' from trading business ', 42), ('revenue from operations ', 41), (' revenue from contracts with customers ', 40), (' revenue from continuing activities', 38), (' sale of products ', 35), (' transmission and distribution business ', 32), (' Sales revenue ', 31), (' net sales ', 28), (' Revenue ', 24), (' Sale of coal ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' from trading business ', 51), ('revenue from operations ', 50), (' transmission and distribution business ', 50), (' revenue from continuing activities', 49), (' revenue from contracts with customers ', 43), (' Sales revenue ', 34), (' sale of products ', 33), (' net sales ', 31), (' Sale of coal ', 30), (' Revenue ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 36), (' from trading business ', 33), (' Sales revenue ', 31), (' sale of products ', 30), (' net sales ', 24), (' Revenue ', 20), (' Sale of coal ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' revenue from continuing activities', 37), ('revenue from operations ', 35), (' transmission and distribution business ', 35), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' net sales ', 31), (' sale of products ', 28), (' Revenue ', 27), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 493858.0, 'line_item_label': ['Revenue'], 'note_numbers': [], 'line_item_value': [493858.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' sale of products ', 32), (' net sales ', 30), (' transmission and distribution business ', 30), (' from trading business ', 29), (' Sale of coal ', 29), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Sales revenue ', 39), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' net sales ', 48), (' from trading business ', 36), ('revenue from operations ', 34), (' Sales revenue ', 33), (' sale of products ', 32), (' transmission and distribution business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' net sales ', 40), (' transmission and distribution business ', 35), (' revenue from continuing activities', 32), (' from trading business ', 30), (' Sale of coal ', 29), (' revenue from contracts with customers ', 27), (' Sales revenue ', 26), (' sale of products ', 25), ('revenue from operations ', 21), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Sales revenue ', 42), (' Revenue ', 32), (' net sales ', 29), (' transmission and distribution business ', 29), (' from trading business ', 29), ('revenue from operations ', 28), (' sale of products ', 24), (' revenue from contracts with customers ', 22), (' revenue from continuing activities', 21), (' Sale of coal ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' revenue from continuing activities', 38), (' from trading business ', 37), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' transmission and distribution business ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' sale of products ', 23), (' Revenue ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 32), ('revenue from operations ', 31), (' revenue from continuing activities', 30), (' transmission and distribution business ', 29), (' Sales revenue ', 25), (' sale of products ', 24), (' net sales ', 19), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' from trading business ', 42), ('revenue from operations ', 41), (' revenue from contracts with customers ', 40), (' revenue from continuing activities', 38), (' sale of products ', 35), (' transmission and distribution business ', 32), (' Sales revenue ', 31), (' net sales ', 28), (' Revenue ', 24), (' Sale of coal ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' from trading business ', 51), ('revenue from operations ', 50), (' transmission and distribution business ', 50), (' revenue from continuing activities', 49), (' revenue from contracts with customers ', 43), (' Sales revenue ', 34), (' sale of products ', 33), (' net sales ', 31), (' Sale of coal ', 30), (' Revenue ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 36), (' from trading business ', 33), (' Sales revenue ', 31), (' sale of products ', 30), (' net sales ', 24), (' Revenue ', 20), (' Sale of coal ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' revenue from continuing activities', 37), ('revenue from operations ', 35), (' transmission and distribution business ', 35), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' net sales ', 31), (' sale of products ', 28), (' Revenue ', 27), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 489972.0, 'line_item_label': ['Revenue'], 'note_numbers': [], 'line_item_value': [489972.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 41), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' Personnel costs', 36), (' cost of goods sold ', 36), (' change in inventory', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 28), ('purchase of stock-in-trade', 26), ('expense', 24), ('total expenditure', 23), ('total expenses', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory', 35), ('total expenditure', 34), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Cost of inventory sold', 44), ('total expenditure', 41), ('total expenses', 40), (' change in inventory', 36), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 25), (' cost of goods sold ', 22), ('expenditure', 17), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('purchase of stock-in-trade', 39), ('cost of sales', 38), ('Cost of sales', 38), (' Personnel costs', 38), ('expenditure', 36), (' Cost of product sold', 34), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' change in inventory', 30), ('total expenditure', 29), (' Cost of goods and services sold', 27), ('total expenses', 25), (' cost of goods sold ', 23), ('expense', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), (' Personnel costs', 37), (' change in inventory', 36), (' Cost of inventory sold', 31), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of goods and services sold', 26), (' Cost of product sold', 20), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('total expenses', 51), ('total expenditure', 46), ('expenditure', 42), ('expense', 41), (' change in inventory', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' cost of goods sold ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), ('total expenditure', 29), (' change in inventory', 29), (' Cost of product sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' cost of goods sold ', 26), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 19), ('expense', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' change in inventory', 37), ('total expenses', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' Personnel costs', 33), ('expenditure', 32), ('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('expense', 24), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Cost of goods and services sold', 49), (' cost of coal sold', 32), (' Personnel costs', 32), (' change in inventory', 31), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), (' Cost of inventory sold', 28), ('expense', 27), ('expenditure', 24), (' Cost of product sold', 24), (' cost of goods sold ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Personnel costs', 33), ('total expenditure', 32), ('total expenses', 30), (' Cost of inventory sold', 30), (' change in inventory', 29), ('expenditure', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' cost of goods sold ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('expenditure', 41), (' change in inventory', 41), ('total expenditure', 40), ('total expenses', 39), (' Cost of goods and services sold', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 28), (' Personnel costs', 26), (' cost of coal sold', 21), ('expense', 20), (' Cost of product sold', 20), ('cost of sales', 18), ('Cost of sales', 18), (' cost of goods sold ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -160376.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [], 'line_item_value': [-160376.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 41), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' Personnel costs', 36), (' cost of goods sold ', 36), (' change in inventory', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 28), ('purchase of stock-in-trade', 26), ('expense', 24), ('total expenditure', 23), ('total expenses', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory', 35), ('total expenditure', 34), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Cost of inventory sold', 44), ('total expenditure', 41), ('total expenses', 40), (' change in inventory', 36), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 25), (' cost of goods sold ', 22), ('expenditure', 17), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('purchase of stock-in-trade', 39), ('cost of sales', 38), ('Cost of sales', 38), (' Personnel costs', 38), ('expenditure', 36), (' Cost of product sold', 34), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' change in inventory', 30), ('total expenditure', 29), (' Cost of goods and services sold', 27), ('total expenses', 25), (' cost of goods sold ', 23), ('expense', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), (' Personnel costs', 37), (' change in inventory', 36), (' Cost of inventory sold', 31), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of goods and services sold', 26), (' Cost of product sold', 20), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('total expenses', 51), ('total expenditure', 46), ('expenditure', 42), ('expense', 41), (' change in inventory', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' cost of goods sold ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), ('total expenditure', 29), (' change in inventory', 29), (' Cost of product sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' cost of goods sold ', 26), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 19), ('expense', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' change in inventory', 37), ('total expenses', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' Personnel costs', 33), ('expenditure', 32), ('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('expense', 24), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Cost of goods and services sold', 49), (' cost of coal sold', 32), (' Personnel costs', 32), (' change in inventory', 31), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), (' Cost of inventory sold', 28), ('expense', 27), ('expenditure', 24), (' Cost of product sold', 24), (' cost of goods sold ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Personnel costs', 33), ('total expenditure', 32), ('total expenses', 30), (' Cost of inventory sold', 30), (' change in inventory', 29), ('expenditure', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' cost of goods sold ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('expenditure', 41), (' change in inventory', 41), ('total expenditure', 40), ('total expenses', 39), (' Cost of goods and services sold', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 28), (' Personnel costs', 26), (' cost of coal sold', 21), ('expense', 20), (' Cost of product sold', 20), ('cost of sales', 18), ('Cost of sales', 18), (' cost of goods sold ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -136662.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [], 'line_item_value': [-136662.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 84), (' Amortisation expenses ', 67), (' depreciation ', 54), (' Administrative and other expenses ', 53), (' Advertising expenses ', 53), (' Administrative expenses ', 46), (' Administration expenses ', 46), (' Depreciation expenses ', 42), (' Sales and marketing ', 41), (' property espense ', 41), (' Logistics and distribution ', 36), (' Administration ', 36), (' Distribution expenses ', 34), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 30), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), ('expenses ', 24), (' Royalties ', 23), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy ', 17), (' levies', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Royalties ', 70), (' property espense ', 43), (' Administrative and other expenses ', 36), (' Sales and marketing ', 36), (' Administration ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Depreciation and amortisation expenses ', 31), (' depreciation ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' levies', 24), (' Depreciation expenses ', 22), (' Distribution expenses ', 21), ('expenses ', 11), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Marketing expenses ', 40), (' Administration ', 38), (' Advertising expenses ', 37), (' Sales and marketing ', 37), (' property espense ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Management expenses ', 33), (' depreciation ', 32), (' Administrative and other expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Depreciation and amortisation expenses ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' levies', 25), (' Selling & distribution expenses ', 24), (' Depreciation expenses ', 23), ('expenses ', 22), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Management expenses ', 72), (' Lease expenses ', 67), (' Occupancy expenses ', 64), ('expenses ', 63), (' Marketing expenses ', 62), (' Selling Expenses ', 58), (' other expenses ', 56), (' Other expenses ', 56), (' Other expenses ', 56), (' property espense ', 50), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Selling & distribution expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' Administrative and other expenses ', 36), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Logistics and distribution ', 24), (' levies', 24), (' Sales and marketing ', 21), (' Administration ', 18), (' Occupancy ', 11), (' Royalties ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Marketing expenses ', 56), (' other expenses ', 51), (' Occupancy expenses ', 51), (' Other expenses ', 51), (' Management expenses ', 51), (' Other expenses ', 51), (' Lease expenses ', 47), (' Selling Expenses ', 47), (' property espense ', 47), ('expenses ', 41), (' Depreciation expenses ', 38), (' Administrative and other expenses ', 37), (' Selling & distribution expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 33), (' Depreciation and amortisation expenses ', 33), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' Sales and marketing ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Logistics and distribution ', 28), (' Administration ', 25), (' levies', 15), (' Occupancy ', 14), (' Royalties ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' property espense ', 29), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 24), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Logistics and distribution ', 24), (' Distribution expenses ', 23), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' Selling Expenses ', 22), (' Administration ', 22), (' depreciation ', 16), ('expenses ', 13), (' Royalties ', 13), (' Occupancy ', 10), (' levies', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Administrative and other expenses ', 48), (' property espense ', 47), (' Sales and marketing ', 42), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' employee benefits expense ', 40), (' employee benefit espense ', 40), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 30), (' depreciation ', 29), (' Distribution expenses ', 27), (' Administration ', 27), (' Occupancy expenses ', 25), ('expenses ', 24), (' Royalties ', 23), (' levies', 12), (' Occupancy ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Sales and marketing ', 51), (' Administrative and other expenses ', 44), (' Advertising expenses ', 41), (' Administrative expenses ', 40), (' Administration expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Logistics and distribution ', 36), (' property espense ', 36), (' Administration ', 36), (' Distribution expenses ', 35), (' employee benefits expense ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Management expenses ', 28), ('expenses ', 27), (' depreciation ', 26), (' Occupancy expenses ', 22), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administrative and other expenses ', 50), (' Logistics and distribution ', 44), (' Depreciation and amortisation expenses ', 43), (' Selling & distribution expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 38), (' Advertising expenses ', 37), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 34), (' Sales and marketing ', 33), (' property espense ', 33), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Marketing expenses ', 30), (' Amortisation expenses ', 29), (' Administration ', 28), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 25), (' Royalties ', 15), (' levies', 11), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Depreciation and amortisation expenses ', 48), (' Sales and marketing ', 46), (' other expenses ', 44), (' Other expenses ', 44), (' Other expenses ', 44), (' Advertising expenses ', 41), (' property espense ', 41), (' Management expenses ', 39), (' Marketing expenses ', 38), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Logistics and distribution ', 36), (' Administration ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling & distribution expenses ', 31), (' Distribution expenses ', 30), (' Selling Expenses ', 29), (' depreciation ', 26), (' Occupancy expenses ', 22), ('expenses ', 20), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -75753.0, 'line_item_label': ['Depreciation and amortisation', 'Selling and distribution expenses', 'Other expenses'], 'note_numbers': [], 'line_item_value': [-39751.0, -27791.0, -8211.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 84), (' Amortisation expenses ', 67), (' depreciation ', 54), (' Administrative and other expenses ', 53), (' Advertising expenses ', 53), (' Administrative expenses ', 46), (' Administration expenses ', 46), (' Depreciation expenses ', 42), (' Sales and marketing ', 41), (' property espense ', 41), (' Logistics and distribution ', 36), (' Administration ', 36), (' Distribution expenses ', 34), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 30), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), ('expenses ', 24), (' Royalties ', 23), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy ', 17), (' levies', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Royalties ', 70), (' property espense ', 43), (' Administrative and other expenses ', 36), (' Sales and marketing ', 36), (' Administration ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Depreciation and amortisation expenses ', 31), (' depreciation ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' levies', 24), (' Depreciation expenses ', 22), (' Distribution expenses ', 21), ('expenses ', 11), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Marketing expenses ', 40), (' Administration ', 38), (' Advertising expenses ', 37), (' Sales and marketing ', 37), (' property espense ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Management expenses ', 33), (' depreciation ', 32), (' Administrative and other expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Depreciation and amortisation expenses ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' levies', 25), (' Selling & distribution expenses ', 24), (' Depreciation expenses ', 23), ('expenses ', 22), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Management expenses ', 72), (' Lease expenses ', 67), (' Occupancy expenses ', 64), ('expenses ', 63), (' Marketing expenses ', 62), (' Selling Expenses ', 58), (' other expenses ', 56), (' Other expenses ', 56), (' Other expenses ', 56), (' property espense ', 50), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Selling & distribution expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' Administrative and other expenses ', 36), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Logistics and distribution ', 24), (' levies', 24), (' Sales and marketing ', 21), (' Administration ', 18), (' Occupancy ', 11), (' Royalties ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Marketing expenses ', 56), (' other expenses ', 51), (' Occupancy expenses ', 51), (' Other expenses ', 51), (' Management expenses ', 51), (' Other expenses ', 51), (' Lease expenses ', 47), (' Selling Expenses ', 47), (' property espense ', 47), ('expenses ', 41), (' Depreciation expenses ', 38), (' Administrative and other expenses ', 37), (' Selling & distribution expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 33), (' Depreciation and amortisation expenses ', 33), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' Sales and marketing ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Logistics and distribution ', 28), (' Administration ', 25), (' levies', 15), (' Occupancy ', 14), (' Royalties ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' property espense ', 29), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 24), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Logistics and distribution ', 24), (' Distribution expenses ', 23), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' Selling Expenses ', 22), (' Administration ', 22), (' depreciation ', 16), ('expenses ', 13), (' Royalties ', 13), (' Occupancy ', 10), (' levies', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Administrative and other expenses ', 48), (' property espense ', 47), (' Sales and marketing ', 42), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' employee benefits expense ', 40), (' employee benefit espense ', 40), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 30), (' depreciation ', 29), (' Distribution expenses ', 27), (' Administration ', 27), (' Occupancy expenses ', 25), ('expenses ', 24), (' Royalties ', 23), (' levies', 12), (' Occupancy ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Sales and marketing ', 51), (' Administrative and other expenses ', 44), (' Advertising expenses ', 41), (' Administrative expenses ', 40), (' Administration expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Logistics and distribution ', 36), (' property espense ', 36), (' Administration ', 36), (' Distribution expenses ', 35), (' employee benefits expense ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Management expenses ', 28), ('expenses ', 27), (' depreciation ', 26), (' Occupancy expenses ', 22), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administrative and other expenses ', 50), (' Logistics and distribution ', 44), (' Depreciation and amortisation expenses ', 43), (' Selling & distribution expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 38), (' Advertising expenses ', 37), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 34), (' Sales and marketing ', 33), (' property espense ', 33), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Marketing expenses ', 30), (' Amortisation expenses ', 29), (' Administration ', 28), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 25), (' Royalties ', 15), (' levies', 11), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Depreciation and amortisation expenses ', 48), (' Sales and marketing ', 46), (' other expenses ', 44), (' Other expenses ', 44), (' Other expenses ', 44), (' Advertising expenses ', 41), (' property espense ', 41), (' Management expenses ', 39), (' Marketing expenses ', 38), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Logistics and distribution ', 36), (' Administration ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling & distribution expenses ', 31), (' Distribution expenses ', 30), (' Selling Expenses ', 29), (' depreciation ', 26), (' Occupancy expenses ', 22), ('expenses ', 20), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -73095.0, 'line_item_label': ['Depreciation and amortisation', 'Selling and distribution expenses', 'Other expenses'], 'note_numbers': [], 'line_item_value': [-41395.0, -24574.0, -7126.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Administration expenses ', 46), (' Occupancy expenses', 26), (' Rental expenses ', 25), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Occupancy expenses', 38), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Rental expenses ', 38), (' Administration expenses ', 34), ('Rent ', 24), (' Occupancy expenses', 24), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 64), (' Administration expenses ', 41), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Occupancy expenses', 51), (' Rental expenses ', 50), (' Administration expenses ', 31), ('Rent ', 22), (' Occupancy ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administration expenses ', 29), (' Rental expenses ', 27), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Administration expenses ', 40), (' Rental expenses ', 32), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 34), (' Occupancy expenses', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Rental expenses ', 49), (' Administration expenses ', 35), ('Rent ', 29), (' Occupancy expenses', 22), (' Occupancy ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Administration expenses ', 46), (' Occupancy expenses', 26), (' Rental expenses ', 25), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Occupancy expenses', 38), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Rental expenses ', 38), (' Administration expenses ', 34), ('Rent ', 24), (' Occupancy expenses', 24), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 64), (' Administration expenses ', 41), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Occupancy expenses', 51), (' Rental expenses ', 50), (' Administration expenses ', 31), ('Rent ', 22), (' Occupancy ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administration expenses ', 29), (' Rental expenses ', 27), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Administration expenses ', 40), (' Rental expenses ', 32), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 34), (' Occupancy expenses', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Rental expenses ', 49), (' Administration expenses ', 35), ('Rent ', 29), (' Occupancy expenses', 22), (' Occupancy ', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('other operating', 34), (' Other income', 33), ('Other revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue', 32), ('other operating', 23), (' Other income', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('other operating', 43), (' Other income', 42), ('Other revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Other income', 41), ('other operating', 30), ('Other revenue', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other operating', 36), (' Other income', 36), ('Other revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 771.0, 'line_item_label': ['Other income'], 'note_numbers': [], 'line_item_value': [771.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('other operating', 34), (' Other income', 33), ('Other revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue', 32), ('other operating', 23), (' Other income', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('other operating', 43), (' Other income', 42), ('Other revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Other income', 41), ('other operating', 30), ('Other revenue', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other operating', 36), (' Other income', 36), ('Other revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 684.0, 'line_item_label': ['Other income'], 'note_numbers': [], 'line_item_value': [684.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 38), ('other income', 33), ('finance income', 32), (' Interest revenue', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Net finance costs', 30), ('finance income', 27), ('other income', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Interest revenue', 43), ('other income', 42), ('finance income', 32), ('Finance income and costs', 29), (' Net finance costs', 29), (' Finance income and finance costs', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('Finance income and costs', 42), (' Net finance costs', 37), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30), ('other income', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Net finance costs', 57), ('Finance income and costs', 53), ('finance income', 48), (' Finance income and finance costs', 44), (' Interest revenue', 36), ('other income', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('finance income', 69), ('Finance income and costs', 68), (' Net finance costs', 63), (' Finance income and finance costs', 59), ('other income', 41), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 38), ('Finance income and costs', 37), (' Finance income and finance costs', 37), ('other income', 34), ('finance income', 30), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Interest revenue', 42), ('other income', 36), ('finance income', 35), ('Finance income and costs', 33), (' Net finance costs', 33), (' Finance income and finance costs', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other income', 40), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 36), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other income', 36), (' Interest revenue', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), ('finance income', 26), (' Net finance costs', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Interest revenue', 41), ('other income', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 35), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': 3001.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [], 'line_item_value': [771.0, 2230.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 38), ('other income', 33), ('finance income', 32), (' Interest revenue', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Net finance costs', 30), ('finance income', 27), ('other income', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Interest revenue', 43), ('other income', 42), ('finance income', 32), ('Finance income and costs', 29), (' Net finance costs', 29), (' Finance income and finance costs', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('Finance income and costs', 42), (' Net finance costs', 37), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30), ('other income', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Net finance costs', 57), ('Finance income and costs', 53), ('finance income', 48), (' Finance income and finance costs', 44), (' Interest revenue', 36), ('other income', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('finance income', 69), ('Finance income and costs', 68), (' Net finance costs', 63), (' Finance income and finance costs', 59), ('other income', 41), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 38), ('Finance income and costs', 37), (' Finance income and finance costs', 37), ('other income', 34), ('finance income', 30), (' Interest revenue', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Interest revenue', 42), ('other income', 36), ('finance income', 35), ('Finance income and costs', 33), (' Net finance costs', 33), (' Finance income and finance costs', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other income', 40), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 36), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other income', 36), (' Interest revenue', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), ('finance income', 26), (' Net finance costs', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Interest revenue', 41), ('other income', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 35), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': 19639.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [], 'line_item_value': [684.0, 18955.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' interest expense', 35), (' finance expenses ', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' interest expense', 36), (' net finance costs ', 29), ('finance cost ', 25), (' finance expenses ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('finance cost ', 43), (' net finance costs ', 37), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses ', 100), ('finance cost ', 67), (' interest expense', 64), (' net finance costs ', 57)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses ', 72), (' net finance costs ', 63), (' interest expense', 58), ('finance cost ', 47)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 32), (' finance expenses ', 30), ('finance cost ', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' interest expense', 37), (' finance expenses ', 34), (' net finance costs ', 33), ('finance cost ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' net finance costs ', 31), (' interest expense', 31), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' interest expense', 33), (' finance expenses ', 26), (' net finance costs ', 24), ('finance cost ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' interest expense', 46), (' finance expenses ', 38), (' net finance costs ', 31), ('finance cost ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -4620.0, 'line_item_label': ['Finance expenses'], 'note_numbers': [], 'line_item_value': [-4620.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' interest expense', 35), (' finance expenses ', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' interest expense', 36), (' net finance costs ', 29), ('finance cost ', 25), (' finance expenses ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('finance cost ', 43), (' net finance costs ', 37), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses ', 100), ('finance cost ', 67), (' interest expense', 64), (' net finance costs ', 57)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses ', 72), (' net finance costs ', 63), (' interest expense', 58), ('finance cost ', 47)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 32), (' finance expenses ', 30), ('finance cost ', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' interest expense', 37), (' finance expenses ', 34), (' net finance costs ', 33), ('finance cost ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' net finance costs ', 31), (' interest expense', 31), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' interest expense', 33), (' finance expenses ', 26), (' net finance costs ', 24), ('finance cost ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' interest expense', 46), (' finance expenses ', 38), (' net finance costs ', 31), ('finance cost ', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -4374.0, 'line_item_label': ['Finance expenses'], 'note_numbers': [], 'line_item_value': [-4374.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' other opertaing income ', 43), (' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' other gains/losses ', 35), (' Loss on revaluation of inventories', 35), (' other income and revenue ', 34), (' other income ', 33), (' Other income ', 33), (' finance expenses', 31), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 29), (' expenses ', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Loss on revaluation of inventories', 47), (' other opertaing income ', 45), (' interest revenue ', 43), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' net of tax ', 40), (' Profit from discontinued operation ', 40), (' net of tax ', 40), (' other gains/losses ', 36), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairement (expenses)/reversal ', 30), (' net finance costs ', 29), (' share of profit of equity accounted investees ', 29), (' finance income and costs ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Finance income and costs ', 29), ('finance cost ', 25), (' finance income and finance cost ', 24), (' Finance income and finance costs ', 24), (' finance expenses', 23), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Impairment loss ', 52), (' Impairement (expenses)/reversal ', 50), ('finance cost ', 43), (' finance income and costs ', 42), (' net of tax ', 42), (' net of tax ', 42), (' Finance income and costs ', 42), (' net finance costs ', 37), (' other gains/losses ', 37), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' share of profit of equity accounted investees ', 34), (' other opertaing income ', 33), (' finance expenses', 32), (' Profit from discontinued operation ', 31), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' other income ', 26), (' Other income ', 26), (' Loss on revaluation of inventories', 24), (' expenses ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses', 100), ('finance cost ', 67), (' expenses ', 63), (' net finance costs ', 57), (' Impairement (expenses)/reversal ', 55), (' finance income and costs ', 53), (' Finance income and costs ', 53), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' interest revenue ', 36), (' net of tax ', 30), (' net of tax ', 30), (' share of profit of equity accounted investees ', 29), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories', 29), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' other gains/losses ', 21), (' other opertaing income ', 19), (' Impairment loss ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses', 72), (' finance income and costs ', 68), (' Finance income and costs ', 68), (' net finance costs ', 63), (' finance income and finance cost ', 59), (' Finance income and finance costs ', 59), (' Impairement (expenses)/reversal ', 56), ('finance cost ', 47), (' other income and revenue ', 44), (' other income ', 41), (' expenses ', 41), (' Other income ', 41), (' interest gains and losses ', 40), (' other opertaing income ', 39), (' Profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 35), (' other gains/losses ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), (' interest revenue ', 26), (' Impairment loss ', 24), (' net of tax ', 20), (' net of tax ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' other gains/losses ', 38), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 37), (' finance income and costs ', 37), (' Finance income and finance costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 35), (' other income ', 34), (' Other income ', 34), (' interest gains and losses ', 32), (' finance expenses', 30), ('finance cost ', 28), (' interest revenue ', 26), (' Impairment loss ', 25), (' net of tax ', 23), (' net of tax ', 23), (' expenses ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' other opertaing income ', 52), (' Loss on revaluation of inventories', 45), (' Profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' other gains/losses ', 42), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 40), (' other income and revenue ', 40), (' share of profit of equity accounted investees ', 38), (' other income ', 36), (' Other income ', 36), (' finance expenses', 34), (' net finance costs ', 33), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), (' net of tax ', 29), (' net of tax ', 29), (' Impairment loss ', 26), (' expenses ', 24), ('finance cost ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' other income and revenue ', 52), (' other opertaing income ', 48), (' Profit from discontinued operation ', 47), (' other gains/losses ', 46), (' interest gains and losses ', 43), (' Impairement (expenses)/reversal ', 41), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' interest revenue ', 36), (' Loss on revaluation of inventories', 36), (' net of tax ', 32), (' net of tax ', 32), (' net finance costs ', 31), ('finance cost ', 29), (' Impairment loss ', 29), (' finance expenses', 27), (' expenses ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Profit from discontinued operation ', 49), (' other opertaing income ', 42), (' Loss on revaluation of inventories', 40), (' other gains/losses ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' share of profit of equity accounted investees ', 35), (' interest revenue ', 33), (' Impairement (expenses)/reversal ', 33), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' Finance income and finance costs ', 29), (' Finance income and costs ', 29), (' Impairment loss ', 27), (' finance expenses', 26), (' expenses ', 25), (' net finance costs ', 24), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' interest gains and losses ', 48), (' Impairement (expenses)/reversal ', 45), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 41), (' share of profit of equity accounted investees ', 41), (' interest revenue ', 41), (' other income ', 40), (' Other income ', 40), (' Loss on revaluation of inventories', 40), (' net of tax ', 39), (' net of tax ', 39), (' finance expenses', 38), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' net finance costs ', 31), (' Profit from discontinued operation ', 31), ('finance cost ', 23), (' expenses ', 20), (' Impairment loss ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 11], 'score': 100, 'value': -3849.0, 'line_item_label': ['Other income', 'Finance expenses'], 'note_numbers': [], 'line_item_value': [771.0, -4620.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' other opertaing income ', 43), (' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' other gains/losses ', 35), (' Loss on revaluation of inventories', 35), (' other income and revenue ', 34), (' other income ', 33), (' Other income ', 33), (' finance expenses', 31), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 29), (' expenses ', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Loss on revaluation of inventories', 47), (' other opertaing income ', 45), (' interest revenue ', 43), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' net of tax ', 40), (' Profit from discontinued operation ', 40), (' net of tax ', 40), (' other gains/losses ', 36), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairement (expenses)/reversal ', 30), (' net finance costs ', 29), (' share of profit of equity accounted investees ', 29), (' finance income and costs ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Finance income and costs ', 29), ('finance cost ', 25), (' finance income and finance cost ', 24), (' Finance income and finance costs ', 24), (' finance expenses', 23), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Impairment loss ', 52), (' Impairement (expenses)/reversal ', 50), ('finance cost ', 43), (' finance income and costs ', 42), (' net of tax ', 42), (' net of tax ', 42), (' Finance income and costs ', 42), (' net finance costs ', 37), (' other gains/losses ', 37), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' share of profit of equity accounted investees ', 34), (' other opertaing income ', 33), (' finance expenses', 32), (' Profit from discontinued operation ', 31), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' other income ', 26), (' Other income ', 26), (' Loss on revaluation of inventories', 24), (' expenses ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses', 100), ('finance cost ', 67), (' expenses ', 63), (' net finance costs ', 57), (' Impairement (expenses)/reversal ', 55), (' finance income and costs ', 53), (' Finance income and costs ', 53), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' interest revenue ', 36), (' net of tax ', 30), (' net of tax ', 30), (' share of profit of equity accounted investees ', 29), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories', 29), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' other gains/losses ', 21), (' other opertaing income ', 19), (' Impairment loss ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses', 72), (' finance income and costs ', 68), (' Finance income and costs ', 68), (' net finance costs ', 63), (' finance income and finance cost ', 59), (' Finance income and finance costs ', 59), (' Impairement (expenses)/reversal ', 56), ('finance cost ', 47), (' other income and revenue ', 44), (' other income ', 41), (' expenses ', 41), (' Other income ', 41), (' interest gains and losses ', 40), (' other opertaing income ', 39), (' Profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 35), (' other gains/losses ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), (' interest revenue ', 26), (' Impairment loss ', 24), (' net of tax ', 20), (' net of tax ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' other gains/losses ', 38), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 37), (' finance income and costs ', 37), (' Finance income and finance costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 35), (' other income ', 34), (' Other income ', 34), (' interest gains and losses ', 32), (' finance expenses', 30), ('finance cost ', 28), (' interest revenue ', 26), (' Impairment loss ', 25), (' net of tax ', 23), (' net of tax ', 23), (' expenses ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' other opertaing income ', 52), (' Loss on revaluation of inventories', 45), (' Profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' other gains/losses ', 42), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 40), (' other income and revenue ', 40), (' share of profit of equity accounted investees ', 38), (' other income ', 36), (' Other income ', 36), (' finance expenses', 34), (' net finance costs ', 33), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), (' net of tax ', 29), (' net of tax ', 29), (' Impairment loss ', 26), (' expenses ', 24), ('finance cost ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' other income and revenue ', 52), (' other opertaing income ', 48), (' Profit from discontinued operation ', 47), (' other gains/losses ', 46), (' interest gains and losses ', 43), (' Impairement (expenses)/reversal ', 41), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' interest revenue ', 36), (' Loss on revaluation of inventories', 36), (' net of tax ', 32), (' net of tax ', 32), (' net finance costs ', 31), ('finance cost ', 29), (' Impairment loss ', 29), (' finance expenses', 27), (' expenses ', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Profit from discontinued operation ', 49), (' other opertaing income ', 42), (' Loss on revaluation of inventories', 40), (' other gains/losses ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' share of profit of equity accounted investees ', 35), (' interest revenue ', 33), (' Impairement (expenses)/reversal ', 33), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' Finance income and finance costs ', 29), (' Finance income and costs ', 29), (' Impairment loss ', 27), (' finance expenses', 26), (' expenses ', 25), (' net finance costs ', 24), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' interest gains and losses ', 48), (' Impairement (expenses)/reversal ', 45), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 41), (' share of profit of equity accounted investees ', 41), (' interest revenue ', 41), (' other income ', 40), (' Other income ', 40), (' Loss on revaluation of inventories', 40), (' net of tax ', 39), (' net of tax ', 39), (' finance expenses', 38), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' net finance costs ', 31), (' Profit from discontinued operation ', 31), ('finance cost ', 23), (' expenses ', 20), (' Impairment loss ', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 11], 'score': 100, 'value': -3690.0, 'line_item_label': ['Other income', 'Finance expenses'], 'note_numbers': [], 'line_item_value': [684.0, -4374.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 48), ('earlier year', 39), ('provision for taxation previous year', 38), ('prior year ', 34), (' income tax benefit/(expense)', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 27), (' tax (expense)/benefit', 27), (' income tax expense', 23), (' income tax benefit', 22), ('deferred tax', 21), (' income tax', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('earlier year', 48), ('prior year ', 43), ('amount transferred to retained earnings', 40), ('deferred tax', 36), (' income tax', 36), (' income tax benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 28), ('minimum alternate tax credit entitlement', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('earlier year', 42), (' income tax benefit', 41), (' income tax expense', 36), ('current tax', 35), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('prior year ', 27), ('provision for taxation previous year', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' income tax expense', 69), (' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 52), (' income tax benefit', 40), ('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), (' income tax', 27), ('prior year ', 26), ('provision for taxation previous year', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' income tax expense', 72), (' income tax benefit', 60), (' income tax benefit/(expense)', 60), (' income tax', 44), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 39), ('prior year ', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 25), ('current tax', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 33), ('prior year ', 31), (' tax (expense)/benefit', 31), ('earlier year', 30), (' income tax', 29), ('current tax', 28), ('deferred tax', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('amount transferred to retained earnings', 58), (' income tax benefit/(expense)', 46), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('earlier year', 40), ('prior year ', 37), ('deferred tax', 32), (' income tax', 32), ('current tax', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('amount transferred to retained earnings', 63), ('provision for taxation previous year', 45), ('deferred tax', 42), ('earlier year', 39), (' tax (expense)/benefit', 38), (' income tax', 36), ('prior year ', 35), (' income tax expense', 35), ('current tax', 34), (' income tax benefit', 34), (' income tax benefit/(expense)', 33), ('minimum alternate tax credit entitlement', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('amount transferred to retained earnings', 36), (' income tax benefit', 35), ('prior year ', 32), (' income tax expense', 32), ('current tax', 31), ('deferred tax', 28), (' income tax', 28), ('earlier year', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('amount transferred to retained earnings', 63), ('earlier year', 56), ('minimum alternate tax credit entitlement', 50), ('provision for taxation previous year', 49), (' income tax benefit/(expense)', 46), (' income tax expense', 45), (' income tax benefit', 44), (' tax (expense)/benefit', 43), ('prior year ', 41), ('current tax', 40), ('deferred tax', 36), (' income tax', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': -58730.0, 'line_item_label': ['Income tax expense'], 'note_numbers': [], 'line_item_value': [-58730.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 48), ('earlier year', 39), ('provision for taxation previous year', 38), ('prior year ', 34), (' income tax benefit/(expense)', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 27), (' tax (expense)/benefit', 27), (' income tax expense', 23), (' income tax benefit', 22), ('deferred tax', 21), (' income tax', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('earlier year', 48), ('prior year ', 43), ('amount transferred to retained earnings', 40), ('deferred tax', 36), (' income tax', 36), (' income tax benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 28), ('minimum alternate tax credit entitlement', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('earlier year', 42), (' income tax benefit', 41), (' income tax expense', 36), ('current tax', 35), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('prior year ', 27), ('provision for taxation previous year', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' income tax expense', 69), (' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 52), (' income tax benefit', 40), ('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), (' income tax', 27), ('prior year ', 26), ('provision for taxation previous year', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' income tax expense', 72), (' income tax benefit', 60), (' income tax benefit/(expense)', 60), (' income tax', 44), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 39), ('prior year ', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 25), ('current tax', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 33), ('prior year ', 31), (' tax (expense)/benefit', 31), ('earlier year', 30), (' income tax', 29), ('current tax', 28), ('deferred tax', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('amount transferred to retained earnings', 58), (' income tax benefit/(expense)', 46), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('earlier year', 40), ('prior year ', 37), ('deferred tax', 32), (' income tax', 32), ('current tax', 31)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('amount transferred to retained earnings', 63), ('provision for taxation previous year', 45), ('deferred tax', 42), ('earlier year', 39), (' tax (expense)/benefit', 38), (' income tax', 36), ('prior year ', 35), (' income tax expense', 35), ('current tax', 34), (' income tax benefit', 34), (' income tax benefit/(expense)', 33), ('minimum alternate tax credit entitlement', 32)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('amount transferred to retained earnings', 36), (' income tax benefit', 35), ('prior year ', 32), (' income tax expense', 32), ('current tax', 31), ('deferred tax', 28), (' income tax', 28), ('earlier year', 26)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('amount transferred to retained earnings', 63), ('earlier year', 56), ('minimum alternate tax credit entitlement', 50), ('provision for taxation previous year', 49), (' income tax benefit/(expense)', 46), (' income tax expense', 45), (' income tax benefit', 44), (' tax (expense)/benefit', 43), ('prior year ', 41), ('current tax', 40), ('deferred tax', 36), (' income tax', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': -59906.0, 'line_item_label': ['Income tax expense'], 'note_numbers': [], 'line_item_value': [-59906.0]}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' prior period ', 40), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional ', 32), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), ('exceptional ', 34), (' prior period ', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 27), ('exceptional ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 40), ('exceptional ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), (' prior period ', 28), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 39), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' prior period ', 40), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 22)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional ', 32), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), ('exceptional ', 34), (' prior period ', 34)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 27), ('exceptional ', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 40), ('exceptional ', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), (' prior period ', 28), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 39), ('exceptional ', 20)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:22:21+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:22:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:22:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:22:21+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:22:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('cash and cash equivalents', 30), ('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('other bank balances', 17), ('bank balances other than cash and cash equivalents', 16), ('bank balances other than above', 12), ('cash and bank balances', 8)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('cash asset', 55), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and short term deposits', 39), ('Cash and short term deposits', 39), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other bank balances', 26), ('cash asset', 25), ('bank balances other than above', 24), ('cash and bank balances', 23), ('bank balances other than cash and cash equivalents', 16), ('cash and cash equivalents', 15), ('cash and short term deposits', 12), ('Cash and short term deposits', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 11112.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': [], 'line_item_value': [11112.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('cash and cash equivalents', 30), ('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('other bank balances', 17), ('bank balances other than cash and cash equivalents', 16), ('bank balances other than above', 12), ('cash and bank balances', 8)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('cash asset', 55), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and short term deposits', 39), ('Cash and short term deposits', 39), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other bank balances', 26), ('cash asset', 25), ('bank balances other than above', 24), ('cash and bank balances', 23), ('bank balances other than cash and cash equivalents', 16), ('cash and cash equivalents', 15), ('cash and short term deposits', 12), ('Cash and short term deposits', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 15460.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': [], 'line_item_value': [15460.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('inventories', 50)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 18128.0, 'line_item_label': ['Inventories'], 'note_numbers': [], 'line_item_value': [18128.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('inventories', 50)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 35291.0, 'line_item_label': ['Inventories'], 'note_numbers': [], 'line_item_value': [35291.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' prepayments ', 33), ('other assets ', 24), (' other current assets ', 24), (' other financial assets ', 24), (' other current financial assets ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other current assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' other financial assets ', 32), (' other current financial assets ', 24), (' trade and other receivables', 21), (' prepayments ', 17), (' other current assets ', 16), ('other assets ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 332419.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [292672.0, 1451.0, 38296.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' prepayments ', 33), ('other assets ', 24), (' other current assets ', 24), (' other financial assets ', 24), (' other current financial assets ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other current assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' other financial assets ', 32), (' other current financial assets ', 24), (' trade and other receivables', 21), (' prepayments ', 17), (' other current assets ', 16), ('other assets ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 368963.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [329217.0, 1450.0, 38296.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' financial assets ', 32), (' income tax receivable from related parties ', 31), (' deferred operating expenditure ', 30), ('other current assets ', 24), (' other assets ', 24), (' other financial assets ', 24), (' biological assets ', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' financial assets ', 81), (' other assets ', 73), ('other current assets ', 68), (' biological assets ', 52), (' deferred operating expenditure ', 40), (' trade and other receivables', 39), (' income tax receivable from related parties ', 31)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets ', 42), (' other financial assets ', 32), (' biological assets ', 22), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' deferred operating expenditure ', 15), (' other assets ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 332419.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [292672.0, 1451.0, 38296.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [(' trade and other receivables', 43), (' financial assets ', 32), (' income tax receivable from related parties ', 31), (' deferred operating expenditure ', 30), ('other current assets ', 24), (' other assets ', 24), (' other financial assets ', 24), (' biological assets ', 22)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' other financial assets ', 100), (' financial assets ', 81), (' other assets ', 73), ('other current assets ', 68), (' biological assets ', 52), (' deferred operating expenditure ', 40), (' trade and other receivables', 39), (' income tax receivable from related parties ', 31)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets ', 42), (' other financial assets ', 32), (' biological assets ', 22), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' deferred operating expenditure ', 15), (' other assets ', 12)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 6], 'score': 100, 'value': 368963.0, 'line_item_label': ['Trade and other receivables', 'Other assets', 'Other financial assets'], 'note_numbers': [], 'line_item_value': [329217.0, 1450.0, 38296.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' interest bearing liabilites ', 39), ('short term debt ', 36), (' short-term debt ', 33), (' shortterm debt ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 28), (' cash overdraft ', 28), (' shortterm borrowings ', 27), ('  leases ', 18), (' borrowings ', 17)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [(' lease liabilities ', 52), (' short-term debt ', 46), (' shortterm debt ', 46), ('short term debt ', 44), (' shortterm borrowings ', 43), (' interest bearing liabilites ', 41), (' bank overdraft ', 38), (' cash overdraft ', 38), (' borrowings ', 33), (' loans and borrowings ', 30), ('  leases ', 25), (' cash and cash equivalents ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities ', 59), (' interest bearing liabilites ', 58), (' short-term debt ', 33), (' shortterm debt ', 33), ('short term debt ', 32), (' loans and borrowings ', 32), (' bank overdraft ', 27), (' cash and cash equivalents ', 27), (' cash overdraft ', 27), ('  leases ', 20), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 7], 'score': 100, 'value': 1619.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': [], 'line_item_value': [632.0, 987.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' interest bearing liabilites ', 39), ('short term debt ', 36), (' short-term debt ', 33), (' shortterm debt ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 28), (' cash overdraft ', 28), (' shortterm borrowings ', 27), ('  leases ', 18), (' borrowings ', 17)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [(' lease liabilities ', 52), (' short-term debt ', 46), (' shortterm debt ', 46), ('short term debt ', 44), (' shortterm borrowings ', 43), (' interest bearing liabilites ', 41), (' bank overdraft ', 38), (' cash overdraft ', 38), (' borrowings ', 33), (' loans and borrowings ', 30), ('  leases ', 25), (' cash and cash equivalents ', 24)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities ', 59), (' interest bearing liabilites ', 58), (' short-term debt ', 33), (' shortterm debt ', 33), ('short term debt ', 32), (' loans and borrowings ', 32), (' bank overdraft ', 27), (' cash and cash equivalents ', 27), (' cash overdraft ', 27), ('  leases ', 20), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 7], 'score': 100, 'value': 2002.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': [], 'line_item_value': [1098.0, 904.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('', 0)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51), ('other trade payables', 51), ('trade payable', 49)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('trade and other payables', 41), ('other trade payables', 40)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53), ('other trade payables', 53), ('trade payable', 43)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 40776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [40776.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:03+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51), ('other trade payables', 51), ('trade payable', 49)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('trade and other payables', 41), ('other trade payables', 40)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53), ('other trade payables', 53), ('trade payable', 43)]
2023-08-17 11:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58149.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [58149.0]}
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-17 11:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-17 11:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade and other payables', 41)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 40776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [40776.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [('trade and other payables', 51)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade and other payables', 41)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('trade and other payables', 53)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58149.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [], 'line_item_value': [58149.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current tax liabilities ', 67), (' income tax payable ', 43), (' tax ', 33), (' provision', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' tax ', 100), ('current tax liabilities ', 75), (' income tax payable ', 50), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 6, 8], 'score': 100, 'value': 121931.0, 'line_item_label': ['LIABILITIES', 'Tax related payable to related entity', 'Provisions', 'Provisions', 'Deferred tax liabilities'], 'note_numbers': [], 'line_item_value': [0.0, 39524.0, 15241.0, 53435.0, 13731.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current tax liabilities ', 67), (' income tax payable ', 43), (' tax ', 33), (' provision', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' tax ', 100), ('current tax liabilities ', 75), (' income tax payable ', 50), (' provision', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 6, 8], 'score': 100, 'value': 142043.0, 'line_item_label': ['LIABILITIES', 'Tax related payable to related entity', 'Provisions', 'Provisions', 'Deferred tax liabilities'], 'note_numbers': [], 'line_item_value': [0.0, 50397.0, 17884.0, 54069.0, 19693.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' trade and other payables', 51), ('other current liabilities', 41), (' other current liabilities', 41), (' other financial liabilities', 37), (' foreign exchange contract liability', 37), (' employee benefits', 36), (' financial liabilities', 28), (' deferred revenue', 24), (' customer deposits', 19), ('provisions', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75), (' other current liabilities', 75), (' other financial liabilities', 75), (' financial liabilities', 46), (' trade and other payables', 41), (' employee benefits', 37), (' foreign exchange contract liability', 28), (' customer deposits', 23), (' deferred revenue', 17), ('provisions', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other current liabilities', 56), (' other current liabilities', 56), (' other financial liabilities', 56), (' financial liabilities', 53), (' trade and other payables', 53), (' deferred revenue', 43), (' foreign exchange contract liability', 43), (' customer deposits', 27), (' employee benefits', 26), ('provisions', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6], 'score': 100, 'value': 109452.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Provisions'], 'note_numbers': [], 'line_item_value': [40776.0, 15241.0, 53435.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = tax related payable to related entity , res_fuzz_match = [(' trade and other payables', 51), ('other current liabilities', 41), (' other current liabilities', 41), (' other financial liabilities', 37), (' foreign exchange contract liability', 37), (' employee benefits', 36), (' financial liabilities', 28), (' deferred revenue', 24), (' customer deposits', 19), ('provisions', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75), (' other current liabilities', 75), (' other financial liabilities', 75), (' financial liabilities', 46), (' trade and other payables', 41), (' employee benefits', 37), (' foreign exchange contract liability', 28), (' customer deposits', 23), (' deferred revenue', 17), ('provisions', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other current liabilities', 56), (' other current liabilities', 56), (' other financial liabilities', 56), (' financial liabilities', 53), (' trade and other payables', 53), (' deferred revenue', 43), (' foreign exchange contract liability', 43), (' customer deposits', 27), (' employee benefits', 26), ('provisions', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6], 'score': 100, 'value': 130102.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Provisions'], 'note_numbers': [], 'line_item_value': [58149.0, 17884.0, 54069.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' perpetual equity instrument ', 55), (' equity share capital ', 48), (' share capital ', 46), (' share capital ', 46), (' contributed equity ', 45), (' contributed equity', 45), (' issued capital ', 24), ('common stock ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 284568.0, 'line_item_label': ['Contributed equity'], 'note_numbers': [], 'line_item_value': [284568.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' perpetual equity instrument ', 55), (' equity share capital ', 48), (' share capital ', 46), (' share capital ', 46), (' contributed equity ', 45), (' contributed equity', 45), (' issued capital ', 24), ('common stock ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 284568.0, 'line_item_label': ['Contributed equity'], 'note_numbers': [], 'line_item_value': [284568.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('Share premium', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('Share premium', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' retained profits', 50), (' retained earnings ', 46), (' reserves surplus ', 36), ('other equity ', 30), (' accumulated losses ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 144352.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [], 'line_item_value': [144352.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [(' retained profits', 50), (' retained earnings ', 46), (' reserves surplus ', 36), ('other equity ', 30), (' accumulated losses ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 171140.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [], 'line_item_value': [171140.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('minority interest ', 69), (' minority interest ', 69), (' noncontrolling interest ', 65), (' non-controlling interest', 65), (' non controlling interest ', 57)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('minority interest ', 69), (' minority interest ', 69), (' noncontrolling interest ', 65), (' non-controlling interest', 65), (' non controlling interest ', 57)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('other reserves ', 44), (' foreign currency translation reserve', 39), (' reserves ', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 22290.0, 'line_item_label': ['Reserves'], 'note_numbers': [], 'line_item_value': [22290.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = parent interests , res_fuzz_match = [('other reserves ', 44), (' foreign currency translation reserve', 39), (' reserves ', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 21170.0, 'line_item_label': ['Reserves'], 'note_numbers': [], 'line_item_value': [21170.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('account receivables ', 100), (' trade receivables ', 100), (' government subsidies receivable ', 100), (' receivable ', 100), (' trade and other receivables', 100), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' trade receivables ', 42), (' government subsidies receivable ', 42), (' trade and other receivables', 42), (' unbilled ', 40), (' receivable ', 33), ('account receivables ', 30), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('account receivables ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' trade receivables ', 17), (' government subsidies receivable ', 17), (' receivable ', 17), (' billed ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 292882.0, 'line_item_label': ['Trade and other receivables', 'Receivables'], 'note_numbers': [], 'line_item_value': [292672.0, 210.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = receivables , res_fuzz_match = [('account receivables ', 100), (' trade receivables ', 100), (' government subsidies receivable ', 100), (' receivable ', 100), (' trade and other receivables', 100), (' billed ', 25), (' unbilled ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [(' trade receivables ', 42), (' government subsidies receivable ', 42), (' trade and other receivables', 42), (' unbilled ', 40), (' receivable ', 33), ('account receivables ', 30), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('account receivables ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' trade receivables ', 17), (' government subsidies receivable ', 17), (' receivable ', 17), (' billed ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 329607.0, 'line_item_label': ['Trade and other receivables', 'Receivables'], 'note_numbers': [], 'line_item_value': [329217.0, 390.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' sale of products ', 32), (' net sales ', 30), (' transmission and distribution business ', 30), (' from trading business ', 29), (' Sale of coal ', 29), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Sales revenue ', 39), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' net sales ', 48), (' from trading business ', 36), ('revenue from operations ', 34), (' Sales revenue ', 33), (' sale of products ', 32), (' transmission and distribution business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' net sales ', 40), (' transmission and distribution business ', 35), (' revenue from continuing activities', 32), (' from trading business ', 30), (' Sale of coal ', 29), (' revenue from contracts with customers ', 27), (' Sales revenue ', 26), (' sale of products ', 25), ('revenue from operations ', 21), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Sales revenue ', 42), (' Revenue ', 32), (' net sales ', 29), (' transmission and distribution business ', 29), (' from trading business ', 29), ('revenue from operations ', 28), (' sale of products ', 24), (' revenue from contracts with customers ', 22), (' revenue from continuing activities', 21), (' Sale of coal ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' revenue from continuing activities', 38), (' from trading business ', 37), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' transmission and distribution business ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' sale of products ', 23), (' Revenue ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 32), ('revenue from operations ', 31), (' revenue from continuing activities', 30), (' transmission and distribution business ', 29), (' Sales revenue ', 25), (' sale of products ', 24), (' net sales ', 19), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' from trading business ', 42), ('revenue from operations ', 41), (' revenue from contracts with customers ', 40), (' revenue from continuing activities', 38), (' sale of products ', 35), (' transmission and distribution business ', 32), (' Sales revenue ', 31), (' net sales ', 28), (' Revenue ', 24), (' Sale of coal ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' from trading business ', 51), ('revenue from operations ', 50), (' transmission and distribution business ', 50), (' revenue from continuing activities', 49), (' revenue from contracts with customers ', 43), (' Sales revenue ', 34), (' sale of products ', 33), (' net sales ', 31), (' Sale of coal ', 30), (' Revenue ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 36), (' from trading business ', 33), (' Sales revenue ', 31), (' sale of products ', 30), (' net sales ', 24), (' Revenue ', 20), (' Sale of coal ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' revenue from continuing activities', 37), ('revenue from operations ', 35), (' transmission and distribution business ', 35), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' net sales ', 31), (' sale of products ', 28), (' Revenue ', 27), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 493858.0, 'line_item_label': ['Revenue'], 'note_numbers': [], 'line_item_value': [493858.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' sale of products ', 32), (' net sales ', 30), (' transmission and distribution business ', 30), (' from trading business ', 29), (' Sale of coal ', 29), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Sales revenue ', 39), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' net sales ', 48), (' from trading business ', 36), ('revenue from operations ', 34), (' Sales revenue ', 33), (' sale of products ', 32), (' transmission and distribution business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' net sales ', 40), (' transmission and distribution business ', 35), (' revenue from continuing activities', 32), (' from trading business ', 30), (' Sale of coal ', 29), (' revenue from contracts with customers ', 27), (' Sales revenue ', 26), (' sale of products ', 25), ('revenue from operations ', 21), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Sales revenue ', 42), (' Revenue ', 32), (' net sales ', 29), (' transmission and distribution business ', 29), (' from trading business ', 29), ('revenue from operations ', 28), (' sale of products ', 24), (' revenue from contracts with customers ', 22), (' revenue from continuing activities', 21), (' Sale of coal ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' revenue from continuing activities', 38), (' from trading business ', 37), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' transmission and distribution business ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' sale of products ', 23), (' Revenue ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 32), ('revenue from operations ', 31), (' revenue from continuing activities', 30), (' transmission and distribution business ', 29), (' Sales revenue ', 25), (' sale of products ', 24), (' net sales ', 19), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' from trading business ', 42), ('revenue from operations ', 41), (' revenue from contracts with customers ', 40), (' revenue from continuing activities', 38), (' sale of products ', 35), (' transmission and distribution business ', 32), (' Sales revenue ', 31), (' net sales ', 28), (' Revenue ', 24), (' Sale of coal ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' from trading business ', 51), ('revenue from operations ', 50), (' transmission and distribution business ', 50), (' revenue from continuing activities', 49), (' revenue from contracts with customers ', 43), (' Sales revenue ', 34), (' sale of products ', 33), (' net sales ', 31), (' Sale of coal ', 30), (' Revenue ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 36), (' from trading business ', 33), (' Sales revenue ', 31), (' sale of products ', 30), (' net sales ', 24), (' Revenue ', 20), (' Sale of coal ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' revenue from continuing activities', 37), ('revenue from operations ', 35), (' transmission and distribution business ', 35), (' Sales revenue ', 34), (' revenue from contracts with customers ', 32), (' net sales ', 31), (' sale of products ', 28), (' Revenue ', 27), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 489972.0, 'line_item_label': ['Revenue'], 'note_numbers': [], 'line_item_value': [489972.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 41), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' Personnel costs', 36), (' cost of goods sold ', 36), (' change in inventory', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 28), ('purchase of stock-in-trade', 26), ('expense', 24), ('total expenditure', 23), ('total expenses', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory', 35), ('total expenditure', 34), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Cost of inventory sold', 44), ('total expenditure', 41), ('total expenses', 40), (' change in inventory', 36), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 25), (' cost of goods sold ', 22), ('expenditure', 17), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('purchase of stock-in-trade', 39), ('cost of sales', 38), ('Cost of sales', 38), (' Personnel costs', 38), ('expenditure', 36), (' Cost of product sold', 34), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' change in inventory', 30), ('total expenditure', 29), (' Cost of goods and services sold', 27), ('total expenses', 25), (' cost of goods sold ', 23), ('expense', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), (' Personnel costs', 37), (' change in inventory', 36), (' Cost of inventory sold', 31), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of goods and services sold', 26), (' Cost of product sold', 20), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('total expenses', 51), ('total expenditure', 46), ('expenditure', 42), ('expense', 41), (' change in inventory', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' cost of goods sold ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), ('total expenditure', 29), (' change in inventory', 29), (' Cost of product sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' cost of goods sold ', 26), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 19), ('expense', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' change in inventory', 37), ('total expenses', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' Personnel costs', 33), ('expenditure', 32), ('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('expense', 24), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Cost of goods and services sold', 49), (' cost of coal sold', 32), (' Personnel costs', 32), (' change in inventory', 31), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), (' Cost of inventory sold', 28), ('expense', 27), ('expenditure', 24), (' Cost of product sold', 24), (' cost of goods sold ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Personnel costs', 33), ('total expenditure', 32), ('total expenses', 30), (' Cost of inventory sold', 30), (' change in inventory', 29), ('expenditure', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' cost of goods sold ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('expenditure', 41), (' change in inventory', 41), ('total expenditure', 40), ('total expenses', 39), (' Cost of goods and services sold', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 28), (' Personnel costs', 26), (' cost of coal sold', 21), ('expense', 20), (' Cost of product sold', 20), ('cost of sales', 18), ('Cost of sales', 18), (' cost of goods sold ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -160376.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [], 'line_item_value': [-160376.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Cost of goods and services sold', 41), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' Personnel costs', 36), (' cost of goods sold ', 36), (' change in inventory', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 28), ('purchase of stock-in-trade', 26), ('expense', 24), ('total expenditure', 23), ('total expenses', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory', 35), ('total expenditure', 34), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Cost of inventory sold', 44), ('total expenditure', 41), ('total expenses', 40), (' change in inventory', 36), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 25), (' cost of goods sold ', 22), ('expenditure', 17), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('purchase of stock-in-trade', 39), ('cost of sales', 38), ('Cost of sales', 38), (' Personnel costs', 38), ('expenditure', 36), (' Cost of product sold', 34), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' change in inventory', 30), ('total expenditure', 29), (' Cost of goods and services sold', 27), ('total expenses', 25), (' cost of goods sold ', 23), ('expense', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), (' Personnel costs', 37), (' change in inventory', 36), (' Cost of inventory sold', 31), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of goods and services sold', 26), (' Cost of product sold', 20), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('total expenses', 51), ('total expenditure', 46), ('expenditure', 42), ('expense', 41), (' change in inventory', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' cost of goods sold ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), ('total expenditure', 29), (' change in inventory', 29), (' Cost of product sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' cost of goods sold ', 26), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 19), ('expense', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' change in inventory', 37), ('total expenses', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' Personnel costs', 33), ('expenditure', 32), ('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), ('expense', 24), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Cost of goods and services sold', 49), (' cost of coal sold', 32), (' Personnel costs', 32), (' change in inventory', 31), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), (' Cost of inventory sold', 28), ('expense', 27), ('expenditure', 24), (' Cost of product sold', 24), (' cost of goods sold ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Personnel costs', 33), ('total expenditure', 32), ('total expenses', 30), (' Cost of inventory sold', 30), (' change in inventory', 29), ('expenditure', 27), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' cost of goods sold ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('expenditure', 41), (' change in inventory', 41), ('total expenditure', 40), ('total expenses', 39), (' Cost of goods and services sold', 37), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 28), (' Personnel costs', 26), (' cost of coal sold', 21), ('expense', 20), (' Cost of product sold', 20), ('cost of sales', 18), ('Cost of sales', 18), (' cost of goods sold ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -136662.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [], 'line_item_value': [-136662.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 84), (' Amortisation expenses ', 67), (' depreciation ', 54), (' Administrative and other expenses ', 53), (' Advertising expenses ', 53), (' Administrative expenses ', 46), (' Administration expenses ', 46), (' Depreciation expenses ', 42), (' Sales and marketing ', 41), (' property espense ', 41), (' Logistics and distribution ', 36), (' Administration ', 36), (' Distribution expenses ', 34), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 30), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), ('expenses ', 24), (' Royalties ', 23), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy ', 17), (' levies', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Royalties ', 70), (' property espense ', 43), (' Administrative and other expenses ', 36), (' Sales and marketing ', 36), (' Administration ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Depreciation and amortisation expenses ', 31), (' depreciation ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' levies', 24), (' Depreciation expenses ', 22), (' Distribution expenses ', 21), ('expenses ', 11), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Marketing expenses ', 40), (' Administration ', 38), (' Advertising expenses ', 37), (' Sales and marketing ', 37), (' property espense ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Management expenses ', 33), (' depreciation ', 32), (' Administrative and other expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Depreciation and amortisation expenses ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' levies', 25), (' Selling & distribution expenses ', 24), (' Depreciation expenses ', 23), ('expenses ', 22), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Management expenses ', 72), (' Lease expenses ', 67), (' Occupancy expenses ', 64), ('expenses ', 63), (' Marketing expenses ', 62), (' Selling Expenses ', 58), (' other expenses ', 56), (' Other expenses ', 56), (' Other expenses ', 56), (' property espense ', 50), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Selling & distribution expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' Administrative and other expenses ', 36), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Logistics and distribution ', 24), (' levies', 24), (' Sales and marketing ', 21), (' Administration ', 18), (' Occupancy ', 11), (' Royalties ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Marketing expenses ', 56), (' other expenses ', 51), (' Occupancy expenses ', 51), (' Other expenses ', 51), (' Management expenses ', 51), (' Other expenses ', 51), (' Lease expenses ', 47), (' Selling Expenses ', 47), (' property espense ', 47), ('expenses ', 41), (' Depreciation expenses ', 38), (' Administrative and other expenses ', 37), (' Selling & distribution expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 33), (' Depreciation and amortisation expenses ', 33), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' Sales and marketing ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Logistics and distribution ', 28), (' Administration ', 25), (' levies', 15), (' Occupancy ', 14), (' Royalties ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' property espense ', 29), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 24), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Logistics and distribution ', 24), (' Distribution expenses ', 23), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' Selling Expenses ', 22), (' Administration ', 22), (' depreciation ', 16), ('expenses ', 13), (' Royalties ', 13), (' Occupancy ', 10), (' levies', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Administrative and other expenses ', 48), (' property espense ', 47), (' Sales and marketing ', 42), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' employee benefits expense ', 40), (' employee benefit espense ', 40), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 30), (' depreciation ', 29), (' Distribution expenses ', 27), (' Administration ', 27), (' Occupancy expenses ', 25), ('expenses ', 24), (' Royalties ', 23), (' levies', 12), (' Occupancy ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Sales and marketing ', 51), (' Administrative and other expenses ', 44), (' Advertising expenses ', 41), (' Administrative expenses ', 40), (' Administration expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Logistics and distribution ', 36), (' property espense ', 36), (' Administration ', 36), (' Distribution expenses ', 35), (' employee benefits expense ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Management expenses ', 28), ('expenses ', 27), (' depreciation ', 26), (' Occupancy expenses ', 22), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administrative and other expenses ', 50), (' Logistics and distribution ', 44), (' Depreciation and amortisation expenses ', 43), (' Selling & distribution expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 38), (' Advertising expenses ', 37), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 34), (' Sales and marketing ', 33), (' property espense ', 33), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Marketing expenses ', 30), (' Amortisation expenses ', 29), (' Administration ', 28), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 25), (' Royalties ', 15), (' levies', 11), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Depreciation and amortisation expenses ', 48), (' Sales and marketing ', 46), (' other expenses ', 44), (' Other expenses ', 44), (' Other expenses ', 44), (' Advertising expenses ', 41), (' property espense ', 41), (' Management expenses ', 39), (' Marketing expenses ', 38), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Logistics and distribution ', 36), (' Administration ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling & distribution expenses ', 31), (' Distribution expenses ', 30), (' Selling Expenses ', 29), (' depreciation ', 26), (' Occupancy expenses ', 22), ('expenses ', 20), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -75753.0, 'line_item_label': ['Depreciation and amortisation', 'Selling and distribution expenses', 'Other expenses'], 'note_numbers': [], 'line_item_value': [-39751.0, -27791.0, -8211.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Depreciation and amortisation expenses ', 84), (' Amortisation expenses ', 67), (' depreciation ', 54), (' Administrative and other expenses ', 53), (' Advertising expenses ', 53), (' Administrative expenses ', 46), (' Administration expenses ', 46), (' Depreciation expenses ', 42), (' Sales and marketing ', 41), (' property espense ', 41), (' Logistics and distribution ', 36), (' Administration ', 36), (' Distribution expenses ', 34), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 30), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), ('expenses ', 24), (' Royalties ', 23), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy ', 17), (' levies', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Royalties ', 70), (' property espense ', 43), (' Administrative and other expenses ', 36), (' Sales and marketing ', 36), (' Administration ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' other expenses ', 32), (' Other expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Depreciation and amortisation expenses ', 31), (' depreciation ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' levies', 24), (' Depreciation expenses ', 22), (' Distribution expenses ', 21), ('expenses ', 11), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Marketing expenses ', 40), (' Administration ', 38), (' Advertising expenses ', 37), (' Sales and marketing ', 37), (' property espense ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Management expenses ', 33), (' depreciation ', 32), (' Administrative and other expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Depreciation and amortisation expenses ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' levies', 25), (' Selling & distribution expenses ', 24), (' Depreciation expenses ', 23), ('expenses ', 22), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Management expenses ', 72), (' Lease expenses ', 67), (' Occupancy expenses ', 64), ('expenses ', 63), (' Marketing expenses ', 62), (' Selling Expenses ', 58), (' other expenses ', 56), (' Other expenses ', 56), (' Other expenses ', 56), (' property espense ', 50), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Selling & distribution expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' Administrative and other expenses ', 36), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Logistics and distribution ', 24), (' levies', 24), (' Sales and marketing ', 21), (' Administration ', 18), (' Occupancy ', 11), (' Royalties ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Marketing expenses ', 56), (' other expenses ', 51), (' Occupancy expenses ', 51), (' Other expenses ', 51), (' Management expenses ', 51), (' Other expenses ', 51), (' Lease expenses ', 47), (' Selling Expenses ', 47), (' property espense ', 47), ('expenses ', 41), (' Depreciation expenses ', 38), (' Administrative and other expenses ', 37), (' Selling & distribution expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 33), (' Depreciation and amortisation expenses ', 33), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' Sales and marketing ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Logistics and distribution ', 28), (' Administration ', 25), (' levies', 15), (' Occupancy ', 14), (' Royalties ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' property espense ', 29), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 24), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Logistics and distribution ', 24), (' Distribution expenses ', 23), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' Selling Expenses ', 22), (' Administration ', 22), (' depreciation ', 16), ('expenses ', 13), (' Royalties ', 13), (' Occupancy ', 10), (' levies', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Administrative and other expenses ', 48), (' property espense ', 47), (' Sales and marketing ', 42), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' employee benefits expense ', 40), (' employee benefit espense ', 40), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 30), (' depreciation ', 29), (' Distribution expenses ', 27), (' Administration ', 27), (' Occupancy expenses ', 25), ('expenses ', 24), (' Royalties ', 23), (' levies', 12), (' Occupancy ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Sales and marketing ', 51), (' Administrative and other expenses ', 44), (' Advertising expenses ', 41), (' Administrative expenses ', 40), (' Administration expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Logistics and distribution ', 36), (' property espense ', 36), (' Administration ', 36), (' Distribution expenses ', 35), (' employee benefits expense ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Management expenses ', 28), ('expenses ', 27), (' depreciation ', 26), (' Occupancy expenses ', 22), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administrative and other expenses ', 50), (' Logistics and distribution ', 44), (' Depreciation and amortisation expenses ', 43), (' Selling & distribution expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 38), (' Advertising expenses ', 37), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' depreciation ', 34), (' Sales and marketing ', 33), (' property espense ', 33), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Marketing expenses ', 30), (' Amortisation expenses ', 29), (' Administration ', 28), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 25), (' Royalties ', 15), (' levies', 11), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Depreciation and amortisation expenses ', 48), (' Sales and marketing ', 46), (' other expenses ', 44), (' Other expenses ', 44), (' Other expenses ', 44), (' Advertising expenses ', 41), (' property espense ', 41), (' Management expenses ', 39), (' Marketing expenses ', 38), (' Depreciation expenses ', 37), (' Amortisation expenses ', 37), (' Logistics and distribution ', 36), (' Administration ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling & distribution expenses ', 31), (' Distribution expenses ', 30), (' Selling Expenses ', 29), (' depreciation ', 26), (' Occupancy expenses ', 22), ('expenses ', 20), (' Royalties ', 19), (' levies', 14), (' Occupancy ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -73095.0, 'line_item_label': ['Depreciation and amortisation', 'Selling and distribution expenses', 'Other expenses'], 'note_numbers': [], 'line_item_value': [-41395.0, -24574.0, -7126.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Administration expenses ', 46), (' Occupancy expenses', 26), (' Rental expenses ', 25), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Occupancy expenses', 38), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Rental expenses ', 38), (' Administration expenses ', 34), ('Rent ', 24), (' Occupancy expenses', 24), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 64), (' Administration expenses ', 41), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Occupancy expenses', 51), (' Rental expenses ', 50), (' Administration expenses ', 31), ('Rent ', 22), (' Occupancy ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administration expenses ', 29), (' Rental expenses ', 27), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Administration expenses ', 40), (' Rental expenses ', 32), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 34), (' Occupancy expenses', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Rental expenses ', 49), (' Administration expenses ', 35), ('Rent ', 29), (' Occupancy expenses', 22), (' Occupancy ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Administration expenses ', 46), (' Occupancy expenses', 26), (' Rental expenses ', 25), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Occupancy expenses', 38), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Rental expenses ', 38), (' Administration expenses ', 34), ('Rent ', 24), (' Occupancy expenses', 24), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 64), (' Administration expenses ', 41), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Occupancy expenses', 51), (' Rental expenses ', 50), (' Administration expenses ', 31), ('Rent ', 22), (' Occupancy ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Administration expenses ', 29), (' Rental expenses ', 27), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Administration expenses ', 40), (' Rental expenses ', 32), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 34), (' Occupancy expenses', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Rental expenses ', 49), (' Administration expenses ', 35), ('Rent ', 29), (' Occupancy expenses', 22), (' Occupancy ', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('other operating', 34), (' Other income', 33), ('Other revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue', 32), ('other operating', 23), (' Other income', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('other operating', 43), (' Other income', 42), ('Other revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Other income', 41), ('other operating', 30), ('Other revenue', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other operating', 36), (' Other income', 36), ('Other revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 771.0, 'line_item_label': ['Other income'], 'note_numbers': [], 'line_item_value': [771.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('other operating', 34), (' Other income', 33), ('Other revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue', 32), ('other operating', 23), (' Other income', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('other operating', 43), (' Other income', 42), ('Other revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Other income', 41), ('other operating', 30), ('Other revenue', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 31), ('Other revenue', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other operating', 36), (' Other income', 36), ('Other revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('other operating', 41), (' Other income', 40), ('Other revenue', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 684.0, 'line_item_label': ['Other income'], 'note_numbers': [], 'line_item_value': [684.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 38), ('other income', 33), ('finance income', 32), (' Interest revenue', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Net finance costs', 30), ('finance income', 27), ('other income', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Interest revenue', 43), ('other income', 42), ('finance income', 32), ('Finance income and costs', 29), (' Net finance costs', 29), (' Finance income and finance costs', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('Finance income and costs', 42), (' Net finance costs', 37), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30), ('other income', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Net finance costs', 57), ('Finance income and costs', 53), ('finance income', 48), (' Finance income and finance costs', 44), (' Interest revenue', 36), ('other income', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('finance income', 69), ('Finance income and costs', 68), (' Net finance costs', 63), (' Finance income and finance costs', 59), ('other income', 41), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 38), ('Finance income and costs', 37), (' Finance income and finance costs', 37), ('other income', 34), ('finance income', 30), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Interest revenue', 42), ('other income', 36), ('finance income', 35), ('Finance income and costs', 33), (' Net finance costs', 33), (' Finance income and finance costs', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other income', 40), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 36), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other income', 36), (' Interest revenue', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), ('finance income', 26), (' Net finance costs', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Interest revenue', 41), ('other income', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 35), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': 3001.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [], 'line_item_value': [771.0, 2230.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 38), ('other income', 33), ('finance income', 32), (' Interest revenue', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Net finance costs', 30), ('finance income', 27), ('other income', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Interest revenue', 43), ('other income', 42), ('finance income', 32), ('Finance income and costs', 29), (' Net finance costs', 29), (' Finance income and finance costs', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('Finance income and costs', 42), (' Net finance costs', 37), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30), ('other income', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' Net finance costs', 57), ('Finance income and costs', 53), ('finance income', 48), (' Finance income and finance costs', 44), (' Interest revenue', 36), ('other income', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('finance income', 69), ('Finance income and costs', 68), (' Net finance costs', 63), (' Finance income and finance costs', 59), ('other income', 41), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 38), ('Finance income and costs', 37), (' Finance income and finance costs', 37), ('other income', 34), ('finance income', 30), (' Interest revenue', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' Interest revenue', 42), ('other income', 36), ('finance income', 35), ('Finance income and costs', 33), (' Net finance costs', 33), (' Finance income and finance costs', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('other income', 40), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 36), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('other income', 36), (' Interest revenue', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), ('finance income', 26), (' Net finance costs', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Interest revenue', 41), ('other income', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 35), (' Net finance costs', 31), ('finance income', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': 19639.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [], 'line_item_value': [684.0, 18955.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' interest expense', 35), (' finance expenses ', 31)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' interest expense', 36), (' net finance costs ', 29), ('finance cost ', 25), (' finance expenses ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('finance cost ', 43), (' net finance costs ', 37), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses ', 100), ('finance cost ', 67), (' interest expense', 64), (' net finance costs ', 57)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses ', 72), (' net finance costs ', 63), (' interest expense', 58), ('finance cost ', 47)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 32), (' finance expenses ', 30), ('finance cost ', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' interest expense', 37), (' finance expenses ', 34), (' net finance costs ', 33), ('finance cost ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' net finance costs ', 31), (' interest expense', 31), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' interest expense', 33), (' finance expenses ', 26), (' net finance costs ', 24), ('finance cost ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' interest expense', 46), (' finance expenses ', 38), (' net finance costs ', 31), ('finance cost ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -4620.0, 'line_item_label': ['Finance expenses'], 'note_numbers': [], 'line_item_value': [-4620.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 40), (' interest expense', 35), (' finance expenses ', 31)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' interest expense', 36), (' net finance costs ', 29), ('finance cost ', 25), (' finance expenses ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('finance cost ', 43), (' net finance costs ', 37), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses ', 100), ('finance cost ', 67), (' interest expense', 64), (' net finance costs ', 57)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses ', 72), (' net finance costs ', 63), (' interest expense', 58), ('finance cost ', 47)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 32), (' finance expenses ', 30), ('finance cost ', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' interest expense', 37), (' finance expenses ', 34), (' net finance costs ', 33), ('finance cost ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' net finance costs ', 31), (' interest expense', 31), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' interest expense', 33), (' finance expenses ', 26), (' net finance costs ', 24), ('finance cost ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' interest expense', 46), (' finance expenses ', 38), (' net finance costs ', 31), ('finance cost ', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -4374.0, 'line_item_label': ['Finance expenses'], 'note_numbers': [], 'line_item_value': [-4374.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' other opertaing income ', 43), (' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' other gains/losses ', 35), (' Loss on revaluation of inventories', 35), (' other income and revenue ', 34), (' other income ', 33), (' Other income ', 33), (' finance expenses', 31), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 29), (' expenses ', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Loss on revaluation of inventories', 47), (' other opertaing income ', 45), (' interest revenue ', 43), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' net of tax ', 40), (' Profit from discontinued operation ', 40), (' net of tax ', 40), (' other gains/losses ', 36), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairement (expenses)/reversal ', 30), (' net finance costs ', 29), (' share of profit of equity accounted investees ', 29), (' finance income and costs ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Finance income and costs ', 29), ('finance cost ', 25), (' finance income and finance cost ', 24), (' Finance income and finance costs ', 24), (' finance expenses', 23), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Impairment loss ', 52), (' Impairement (expenses)/reversal ', 50), ('finance cost ', 43), (' finance income and costs ', 42), (' net of tax ', 42), (' net of tax ', 42), (' Finance income and costs ', 42), (' net finance costs ', 37), (' other gains/losses ', 37), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' share of profit of equity accounted investees ', 34), (' other opertaing income ', 33), (' finance expenses', 32), (' Profit from discontinued operation ', 31), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' other income ', 26), (' Other income ', 26), (' Loss on revaluation of inventories', 24), (' expenses ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses', 100), ('finance cost ', 67), (' expenses ', 63), (' net finance costs ', 57), (' Impairement (expenses)/reversal ', 55), (' finance income and costs ', 53), (' Finance income and costs ', 53), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' interest revenue ', 36), (' net of tax ', 30), (' net of tax ', 30), (' share of profit of equity accounted investees ', 29), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories', 29), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' other gains/losses ', 21), (' other opertaing income ', 19), (' Impairment loss ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses', 72), (' finance income and costs ', 68), (' Finance income and costs ', 68), (' net finance costs ', 63), (' finance income and finance cost ', 59), (' Finance income and finance costs ', 59), (' Impairement (expenses)/reversal ', 56), ('finance cost ', 47), (' other income and revenue ', 44), (' other income ', 41), (' expenses ', 41), (' Other income ', 41), (' interest gains and losses ', 40), (' other opertaing income ', 39), (' Profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 35), (' other gains/losses ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), (' interest revenue ', 26), (' Impairment loss ', 24), (' net of tax ', 20), (' net of tax ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' other gains/losses ', 38), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 37), (' finance income and costs ', 37), (' Finance income and finance costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 35), (' other income ', 34), (' Other income ', 34), (' interest gains and losses ', 32), (' finance expenses', 30), ('finance cost ', 28), (' interest revenue ', 26), (' Impairment loss ', 25), (' net of tax ', 23), (' net of tax ', 23), (' expenses ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' other opertaing income ', 52), (' Loss on revaluation of inventories', 45), (' Profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' other gains/losses ', 42), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 40), (' other income and revenue ', 40), (' share of profit of equity accounted investees ', 38), (' other income ', 36), (' Other income ', 36), (' finance expenses', 34), (' net finance costs ', 33), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), (' net of tax ', 29), (' net of tax ', 29), (' Impairment loss ', 26), (' expenses ', 24), ('finance cost ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' other income and revenue ', 52), (' other opertaing income ', 48), (' Profit from discontinued operation ', 47), (' other gains/losses ', 46), (' interest gains and losses ', 43), (' Impairement (expenses)/reversal ', 41), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' interest revenue ', 36), (' Loss on revaluation of inventories', 36), (' net of tax ', 32), (' net of tax ', 32), (' net finance costs ', 31), ('finance cost ', 29), (' Impairment loss ', 29), (' finance expenses', 27), (' expenses ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Profit from discontinued operation ', 49), (' other opertaing income ', 42), (' Loss on revaluation of inventories', 40), (' other gains/losses ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' share of profit of equity accounted investees ', 35), (' interest revenue ', 33), (' Impairement (expenses)/reversal ', 33), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' Finance income and finance costs ', 29), (' Finance income and costs ', 29), (' Impairment loss ', 27), (' finance expenses', 26), (' expenses ', 25), (' net finance costs ', 24), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' interest gains and losses ', 48), (' Impairement (expenses)/reversal ', 45), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 41), (' share of profit of equity accounted investees ', 41), (' interest revenue ', 41), (' other income ', 40), (' Other income ', 40), (' Loss on revaluation of inventories', 40), (' net of tax ', 39), (' net of tax ', 39), (' finance expenses', 38), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' net finance costs ', 31), (' Profit from discontinued operation ', 31), ('finance cost ', 23), (' expenses ', 20), (' Impairment loss ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 11], 'score': 100, 'value': -3849.0, 'line_item_label': ['Other income', 'Finance expenses'], 'note_numbers': [], 'line_item_value': [771.0, -4620.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' other opertaing income ', 43), (' net finance costs ', 41), ('finance cost ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' other gains/losses ', 35), (' Loss on revaluation of inventories', 35), (' other income and revenue ', 34), (' other income ', 33), (' Other income ', 33), (' finance expenses', 31), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 29), (' expenses ', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' Loss on revaluation of inventories', 47), (' other opertaing income ', 45), (' interest revenue ', 43), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' net of tax ', 40), (' Profit from discontinued operation ', 40), (' net of tax ', 40), (' other gains/losses ', 36), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Impairement (expenses)/reversal ', 30), (' net finance costs ', 29), (' share of profit of equity accounted investees ', 29), (' finance income and costs ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Finance income and costs ', 29), ('finance cost ', 25), (' finance income and finance cost ', 24), (' Finance income and finance costs ', 24), (' finance expenses', 23), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' Impairment loss ', 52), (' Impairement (expenses)/reversal ', 50), ('finance cost ', 43), (' finance income and costs ', 42), (' net of tax ', 42), (' net of tax ', 42), (' Finance income and costs ', 42), (' net finance costs ', 37), (' other gains/losses ', 37), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' share of profit of equity accounted investees ', 34), (' other opertaing income ', 33), (' finance expenses', 32), (' Profit from discontinued operation ', 31), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' other income ', 26), (' Other income ', 26), (' Loss on revaluation of inventories', 24), (' expenses ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' finance expenses', 100), ('finance cost ', 67), (' expenses ', 63), (' net finance costs ', 57), (' Impairement (expenses)/reversal ', 55), (' finance income and costs ', 53), (' Finance income and costs ', 53), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' interest revenue ', 36), (' net of tax ', 30), (' net of tax ', 30), (' share of profit of equity accounted investees ', 29), (' interest gains and losses ', 29), (' other income and revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Loss on revaluation of inventories', 29), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' other gains/losses ', 21), (' other opertaing income ', 19), (' Impairment loss ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' finance expenses', 72), (' finance income and costs ', 68), (' Finance income and costs ', 68), (' net finance costs ', 63), (' finance income and finance cost ', 59), (' Finance income and finance costs ', 59), (' Impairement (expenses)/reversal ', 56), ('finance cost ', 47), (' other income and revenue ', 44), (' other income ', 41), (' expenses ', 41), (' Other income ', 41), (' interest gains and losses ', 40), (' other opertaing income ', 39), (' Profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 35), (' other gains/losses ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), (' interest revenue ', 26), (' Impairment loss ', 24), (' net of tax ', 20), (' net of tax ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' other gains/losses ', 38), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 37), (' finance income and costs ', 37), (' Finance income and finance costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 35), (' other income ', 34), (' Other income ', 34), (' interest gains and losses ', 32), (' finance expenses', 30), ('finance cost ', 28), (' interest revenue ', 26), (' Impairment loss ', 25), (' net of tax ', 23), (' net of tax ', 23), (' expenses ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' other opertaing income ', 52), (' Loss on revaluation of inventories', 45), (' Profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' other gains/losses ', 42), (' interest revenue ', 42), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 40), (' other income and revenue ', 40), (' share of profit of equity accounted investees ', 38), (' other income ', 36), (' Other income ', 36), (' finance expenses', 34), (' net finance costs ', 33), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), (' net of tax ', 29), (' net of tax ', 29), (' Impairment loss ', 26), (' expenses ', 24), ('finance cost ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' other income and revenue ', 52), (' other opertaing income ', 48), (' Profit from discontinued operation ', 47), (' other gains/losses ', 46), (' interest gains and losses ', 43), (' Impairement (expenses)/reversal ', 41), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' share of profit of equity accounted investees ', 37), (' interest revenue ', 36), (' Loss on revaluation of inventories', 36), (' net of tax ', 32), (' net of tax ', 32), (' net finance costs ', 31), ('finance cost ', 29), (' Impairment loss ', 29), (' finance expenses', 27), (' expenses ', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' Profit from discontinued operation ', 49), (' other opertaing income ', 42), (' Loss on revaluation of inventories', 40), (' other gains/losses ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' share of profit of equity accounted investees ', 35), (' interest revenue ', 33), (' Impairement (expenses)/reversal ', 33), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' Finance income and finance costs ', 29), (' Finance income and costs ', 29), (' Impairment loss ', 27), (' finance expenses', 26), (' expenses ', 25), (' net finance costs ', 24), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' interest gains and losses ', 48), (' Impairement (expenses)/reversal ', 45), (' Share of gain/(loss) of joint venture ', 42), (' other gains/losses ', 41), (' share of profit of equity accounted investees ', 41), (' interest revenue ', 41), (' other income ', 40), (' Other income ', 40), (' Loss on revaluation of inventories', 40), (' net of tax ', 39), (' net of tax ', 39), (' finance expenses', 38), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' net finance costs ', 31), (' Profit from discontinued operation ', 31), ('finance cost ', 23), (' expenses ', 20), (' Impairment loss ', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 11], 'score': 100, 'value': -3690.0, 'line_item_label': ['Other income', 'Finance expenses'], 'note_numbers': [], 'line_item_value': [684.0, -4374.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 48), ('earlier year', 39), ('provision for taxation previous year', 38), ('prior year ', 34), (' income tax benefit/(expense)', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 27), (' tax (expense)/benefit', 27), (' income tax expense', 23), (' income tax benefit', 22), ('deferred tax', 21), (' income tax', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('earlier year', 48), ('prior year ', 43), ('amount transferred to retained earnings', 40), ('deferred tax', 36), (' income tax', 36), (' income tax benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 28), ('minimum alternate tax credit entitlement', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('earlier year', 42), (' income tax benefit', 41), (' income tax expense', 36), ('current tax', 35), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('prior year ', 27), ('provision for taxation previous year', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' income tax expense', 69), (' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 52), (' income tax benefit', 40), ('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), (' income tax', 27), ('prior year ', 26), ('provision for taxation previous year', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' income tax expense', 72), (' income tax benefit', 60), (' income tax benefit/(expense)', 60), (' income tax', 44), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 39), ('prior year ', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 25), ('current tax', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 33), ('prior year ', 31), (' tax (expense)/benefit', 31), ('earlier year', 30), (' income tax', 29), ('current tax', 28), ('deferred tax', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('amount transferred to retained earnings', 58), (' income tax benefit/(expense)', 46), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('earlier year', 40), ('prior year ', 37), ('deferred tax', 32), (' income tax', 32), ('current tax', 31)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('amount transferred to retained earnings', 63), ('provision for taxation previous year', 45), ('deferred tax', 42), ('earlier year', 39), (' tax (expense)/benefit', 38), (' income tax', 36), ('prior year ', 35), (' income tax expense', 35), ('current tax', 34), (' income tax benefit', 34), (' income tax benefit/(expense)', 33), ('minimum alternate tax credit entitlement', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('amount transferred to retained earnings', 36), (' income tax benefit', 35), ('prior year ', 32), (' income tax expense', 32), ('current tax', 31), ('deferred tax', 28), (' income tax', 28), ('earlier year', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('amount transferred to retained earnings', 63), ('earlier year', 56), ('minimum alternate tax credit entitlement', 50), ('provision for taxation previous year', 49), (' income tax benefit/(expense)', 46), (' income tax expense', 45), (' income tax benefit', 44), (' tax (expense)/benefit', 43), ('prior year ', 41), ('current tax', 40), ('deferred tax', 36), (' income tax', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': -58730.0, 'line_item_label': ['Income tax expense'], 'note_numbers': [], 'line_item_value': [-58730.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('amount transferred to retained earnings', 48), ('earlier year', 39), ('provision for taxation previous year', 38), ('prior year ', 34), (' income tax benefit/(expense)', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 27), (' tax (expense)/benefit', 27), (' income tax expense', 23), (' income tax benefit', 22), ('deferred tax', 21), (' income tax', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('earlier year', 48), ('prior year ', 43), ('amount transferred to retained earnings', 40), ('deferred tax', 36), (' income tax', 36), (' income tax benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 28), ('minimum alternate tax credit entitlement', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('earlier year', 42), (' income tax benefit', 41), (' income tax expense', 36), ('current tax', 35), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('prior year ', 27), ('provision for taxation previous year', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [(' income tax expense', 69), (' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 52), (' income tax benefit', 40), ('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), (' income tax', 27), ('prior year ', 26), ('provision for taxation previous year', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' income tax expense', 72), (' income tax benefit', 60), (' income tax benefit/(expense)', 60), (' income tax', 44), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 39), ('prior year ', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 25), ('current tax', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 33), ('prior year ', 31), (' tax (expense)/benefit', 31), ('earlier year', 30), (' income tax', 29), ('current tax', 28), ('deferred tax', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('amount transferred to retained earnings', 58), (' income tax benefit/(expense)', 46), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('earlier year', 40), ('prior year ', 37), ('deferred tax', 32), (' income tax', 32), ('current tax', 31)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('amount transferred to retained earnings', 63), ('provision for taxation previous year', 45), ('deferred tax', 42), ('earlier year', 39), (' tax (expense)/benefit', 38), (' income tax', 36), ('prior year ', 35), (' income tax expense', 35), ('current tax', 34), (' income tax benefit', 34), (' income tax benefit/(expense)', 33), ('minimum alternate tax credit entitlement', 32)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('amount transferred to retained earnings', 36), (' income tax benefit', 35), ('prior year ', 32), (' income tax expense', 32), ('current tax', 31), ('deferred tax', 28), (' income tax', 28), ('earlier year', 26)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('amount transferred to retained earnings', 63), ('earlier year', 56), ('minimum alternate tax credit entitlement', 50), ('provision for taxation previous year', 49), (' income tax benefit/(expense)', 46), (' income tax expense', 45), (' income tax benefit', 44), (' tax (expense)/benefit', 43), ('prior year ', 41), ('current tax', 40), ('deferred tax', 36), (' income tax', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': -59906.0, 'line_item_label': ['Income tax expense'], 'note_numbers': [], 'line_item_value': [-59906.0]}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' prior period ', 40), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional ', 32), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), ('exceptional ', 34), (' prior period ', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 27), ('exceptional ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 40), ('exceptional ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), (' prior period ', 28), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 39), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [(' prior period ', 40), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [(' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 22)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional ', 32), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), ('exceptional ', 34), (' prior period ', 34)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 27), ('exceptional ', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [(' prior period ', 45), (' Actuarial gains / (losses) on retirement benefit obligation', 40), ('exceptional ', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), (' prior period ', 28), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 39), ('exceptional ', 20)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-17 11:23:04+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-17 11:23:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 11:23:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-17 11:23:04+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation , res_fuzz_match = [('NULL', 9)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = mineral royalties , res_fuzz_match = [('NULL', 24)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = impairment of asset , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = net finance income /(expenses) , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = cash flow hedges - effective portion of changes in fair value , res_fuzz_match = [('NULL', 12)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of income tax , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the beginning of period , res_fuzz_match = [('NULL', 6)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = transfers to and from reserves , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = dividends recongnised during the period , res_fuzz_match = [('NULL', 11)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - txt_particular = retained earnings at the end of year , res_fuzz_match = [('NULL', 7)]
2023-08-17 11:23:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-17 16:39:49+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-17 16:39:49+0530 - sLogger - DEBUG - TE process file started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 16:44:41+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:44:41+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'cbs_meta' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'cpl_meta' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'ccf_meta' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS notes_number_processing
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'cbs_header' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF notes_number_processing
2023-08-17 16:44:41+0530 - sLogger - ERROR - error occured: local variable 'ccf_header' referenced before assignment
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:44:41+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:44:41+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:44:41+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-17 16:44:41+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in investing activities | adjustments for increase decrease in operating assets
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of a subsidiary, net of cash acquired | changes in operating assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds of borrowings | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of borrowing | operating profit before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of lease liabilities | changes in operating assets and liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividend paid | changes in assets liabilities
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash held | adjustments for increase decrease in operating assets
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash at the beginning of the financial year | operating cash flow before working capital changes
2023-08-17 16:44:41+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cas sh at the end ofthe financial year | changes in operating assets and liabilities
2023-08-17 16:44:42+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 16:45:55+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:45:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'cbs_meta' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'cpl_meta' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'ccf_meta' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS notes_number_processing
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'cbs_header' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF notes_number_processing
2023-08-17 16:45:55+0530 - sLogger - ERROR - error occured: local variable 'ccf_header' referenced before assignment
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:45:55+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:45:55+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:45:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-17 16:45:55+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in investing activities | adjustments for increase decrease in operating assets
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of a subsidiary, net of cash acquired | changes in operating assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds of borrowings | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of borrowing | operating profit before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of lease liabilities | changes in operating assets and liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividend paid | changes in assets liabilities
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash held | adjustments for increase decrease in operating assets
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash at the beginning of the financial year | operating cash flow before working capital changes
2023-08-17 16:45:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cas sh at the end ofthe financial year | changes in operating assets and liabilities
2023-08-17 16:45:56+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 16:54:11+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:54:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'cbs_meta' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'cpl_meta' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'ccf_meta' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS notes_number_processing
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'cbs_header' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF notes_number_processing
2023-08-17 16:54:11+0530 - sLogger - ERROR - error occured: local variable 'ccf_header' referenced before assignment
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:54:11+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:54:11+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:54:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-17 16:54:11+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in investing activities | adjustments for increase decrease in operating assets
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of a subsidiary, net of cash acquired | changes in operating assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds of borrowings | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of borrowing | operating profit before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of lease liabilities | changes in operating assets and liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividend paid | changes in assets liabilities
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash held | adjustments for increase decrease in operating assets
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash at the beginning of the financial year | operating cash flow before working capital changes
2023-08-17 16:54:11+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cas sh at the end ofthe financial year | changes in operating assets and liabilities
2023-08-17 16:54:12+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-17 16:55:04+0530 - sLogger - DEBUG - process_main_pages started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
2023-08-17 16:55:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'cbs_meta' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'cpl_meta' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'ccf_meta' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS notes_number_processing
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'cbs_header' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF notes_number_processing
2023-08-17 16:55:04+0530 - sLogger - ERROR - error occured: local variable 'ccf_header' referenced before assignment
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:55:04+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-17 16:55:04+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-17 16:55:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-17 16:55:04+0530 - sLogger - DEBUG - set_section_details started
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in investing activities | adjustments for increase decrease in operating assets
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangible assets | operating profit before changes in assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of a subsidiary, net of cash acquired | changes in operating assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds of borrowings | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of borrowing | operating profit before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of lease liabilities | changes in operating assets and liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividend paid | changes in assets liabilities
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash held | adjustments for increase decrease in operating assets
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash at the beginning of the financial year | operating cash flow before working capital changes
2023-08-17 16:55:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cas sh at the end ofthe financial year | changes in operating assets and liabilities
2023-08-17 16:55:05+0530 - sLogger - DEBUG - process_main_pages completed
